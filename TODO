TODO for the PHP documentation project.

Add things that should be updated/added in the documentation here. For
big (i.e. time-consuming) items, add your name to it when you start
working on it, to prevent double-work.

DISCUSSIONS:
  - coding standards for scripts in phpdoc (see the howto
    and phpdoc/RFC/coding_standards
  - licensing issues, possible licenses: see phpdoc/RFC/license for the
    summary of Hartmut
  - users manual / developers manual division?
    effects on folders, files, make system, style sheets
  - where should the PECL modules documentation go
    (=> PECL docs / PHP docs?)
  - have seperate cvs modules for translations 
    as most of us need only one or two languages
  - split files down to function level?
    (see also BUILD SYSTEM: translation detection)
  - category support for the reference part 
    (see also BUILD SYSTEM:  group and organize functions logically)
  - usage of new docbook 4 tags for oo class documentation
  - language styleguide in howto (for english) and translation
    trees (for the other languages)

IMPORTANT:
  - connection handling: what about, what got nuked? 
  
BIG JOBS:
  - oci8: tfromm (?), asautins@veripost.net
  - sockets: 'available ;)'
  - Document all BC breaks and Deprecations, having them listed
    at a single location.

BUILD SYSTEM:
  - merge ZendAPI into phpdoc proper (imajes)	 
  - add translation support for ZendAPI (hartmut)
  - improve php detection in configure for win (hartmut)
  - finish makefile cleanup (hartmut)
  - support both dsssl and xsl processors with configure/make (hartmut)
    problem: different processors seem to have different ideas on how
    to follow relative pathes when including files using SYSTEM entities    
  - improve XSL stylesheet customisation 
  - translation detection on function level (hartmut)
    - easy way -> split reference files down to function level
      and keep current file-based detection mechanism
    - hard way -> keep files as they are and merge translated
      stuff into intermeditate xml before processing
    - write proposal for discussion (hartmut)
  - group and organize functions logically (databases, text proc, etc)
    (better support for that in docbook4)
    Needs more *discussion*:
      - maybe also group them on folder level, not just in TOC
      - maybe spread configure options, ini settings and
        features to these groups [in TOC and/or in folders]
      - add indexes of options, settings and features if
        previous change goes through
  - split install.configure.misc.xml, config.xml and maybe other
    huge files to manageable pieces
  - get back lost indexes, but add them as appendixes
    (index of tables, index of examples)
  - merge back build system/style sheet improvements from 
    phpGtk and pear manual (hartmut)
  - have "make test" find entity usage without trailing ";"
	  nsgmls accepts this but stylesheet processors don't
    
GENERAL:
  - Document php://stdout etc feature for file functions.
  - Update setcookie
  - Document the diffs between strip[c]slashes(). Maybe just document
    for both of them what they do - exactly.
  - Add &note.no-safemode; to the bottom of each function that is 
    disabled in safe-mode.'
  - add platform availability
  - Mark binary (un)safe functions
  - Add example to the &tip.ob-capture; tip (preferable a link to
    a example)
  - Bug the dev's to rename functions like hw_getobjectbyquerycollobj 
  - Remark in shmop.xml whether or not the old shm_* funcnames still
    work in the current version of PHP. (search for the TODO mark)
  - Document configure options in install.xml (mk, jan)
  - Expand config.xml documentation (philip)
  - Update include/require _once docs (philip)

  (from php4/TODO):
  - update curl documentation
  - write documentation for the zziplib extension

  (from bugs):
  - see bugs.php.net for now


