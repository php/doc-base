# php4/Zend/zend_builtin_functions.c
bool class_exists(string classname)
 
     Checks if the class exists  
string create_function(string args, string code)
 
     Creates an anonymous function, and returns its name (funny, eh?)  
void debug_backtrace(void)
 
     Prints out a backtrace  
bool define(string constant_name, mixed value, case_sensitive=true)
 
     Define a new constant  
bool defined(string constant_name)
 
     Check whether a constant exists  
array each(array arr)
 
     Return the currently pointed key..value pair in the passed array, and advance the pointer to the next element  
int error_reporting(int new_error_level=null)
 
     Return the current error_reporting level, and if an argument was passed - change to the new level  
bool extension_loaded(string extension_name)
 
     Returns true if the named extension is loaded  
mixed func_get_arg(int arg_num)
 
     Get the $arg_num'th argument that was passed to the function  
array func_get_args()
 
     Get an array of the arguments that were passed to the function  
int func_num_args(void)
 
     Get the number of arguments that were passed to the function  
bool function_exists(string function_name) 
 
     Checks if the function exists  
string get_class(object object)
 
     Retrieves the class name  
array get_class_methods(mixed class)
 
     Returns an array of method names for class or class instance.  
array get_class_vars(string class_name)
 
     Returns an array of default properties of the class  
array get_declared_classes(void)
 
     Returns an array of all declared classes.  
array get_defined_constants(void)
 
     Return an array containing the names and values of all defined constants  
array get_defined_functions(void)
 
     Returns an array of all defined functions  
array get_defined_vars(void)
 
     Returns an associative array of names and values of all currently defined variable names (variables in the current scope)  
array get_extension_funcs(string extension_name)
 
     Returns an array with the names of functions belonging to the named extension  
array get_included_files(void)
 
     Returns an array with the file names that were include_once()'d  
array get_loaded_extensions(void)
 
     Return an array containing names of loaded extensions  
array get_object_vars(object obj)
 
     Returns an array of object properties  
string get_parent_class(mixed object)
 
     Retrieves the parent class name for object or class.  
string get_resource_type(resource res)
 
     Get the resource type name for a given resource  
bool is_a(object object, string class_name)
 
     Returns true if the object is of this class or has this class as one of its parents  
bool is_subclass_of(object object, string class_name)
 
     Returns true if the object has this class as one of its parents  
void leak(int num_bytes=3)
 
     Cause an intentional memory leak, for testing/debugging purposes  
bool method_exists(object object, string method)
 
     Checks if the class method exists  
void restore_error_handler(void)
 
     Restores the previously defined error handler function  
string set_error_handler(string error_handler)
 
     Sets a user-defined error handler function.  Returns the previously defined error handler, or false on error  
int strcasecmp(string str1, string str2)
 
     Binary safe case-insensitive string comparison  
int strcmp(string str1, string str2)
 
     Binary safe string comparison  
int strlen(string str)
 
     Get string length  
int strncasecmp(string str1, string str2, int len)
 
     Binary safe string comparison  
int strncmp(string str1, string str2, int len)
 
     Binary safe string comparison  
void trigger_error(string messsage [, int error_type])
 
     Generates a user-level error/warning/notice message  
string zend_version(void)
 
     Get the version of the Zend Engine  
# php4/ext/bcmath/bcmath.c
string bcadd(string left_operand, string right_operand [, int scale])
 
     Returns the sum of two arbitrary precision numbers  
int bccomp(string left_operand, string right_operand [, int scale])
 
     Compares two arbitrary precision numbers  
string bcdiv(string left_operand, string right_operand [, int scale])
 
     Returns the quotient of two arbitrary precision numbers (division)  
string bcmod(string left_operand, string right_operand)
 
     Returns the modulus of the two arbitrary precision operands  
string bcmul(string left_operand, string right_operand [, int scale])
 
     Returns the multiplication of two arbitrary precision numbers  
string bcpow(string x, string y [, int scale])
 
     Returns the value of an arbitrary precision number raised to the power of another  
bool bcscale(int scale)
 
     Sets default scale parameter for all bc math functions  
string bcsqrt(string operand [, int scale])
 
     Returns the square root of an arbitray precision number  
string bcsub(string left_operand, string right_operand [, int scale])
 
     Returns the difference between two arbitrary precision numbers  
# php4/ext/bz2/bz2.c
string bzcompress(string source [, int blocksize100k [, int workfactor]])
 
     Compresses a string into BZip2 encoded data  
string bzdecompress(string source [, int small])
 
     Decompresses BZip2 compressed data  
int bzerrno(resource bz)
 
     Returns the error number  
array bzerror(resource bz)
 
     Returns the error number and error string in an associative array  
string bzerrstr(resource bz)
 
     Returns the error string  
resource bzopen(string|int file|fp, string mode)
 
     Opens a new BZip2 stream  
string bzread(int bz[, int length])
 
     Reads up to length bytes from a BZip2 stream, or 1024 bytes if length is not specified  
# php4/ext/calendar/cal_unix.c
int jdtounix(int jday)
 
     Convert Julian Day to UNIX timestamp  
int unixtojd([int timestamp])
 
     Convert UNIX timestamp to Julian Day  
# php4/ext/calendar/calendar.c
int cal_days_in_month(int calendar, int month, int year)
 
     Returns the number of days in a month for a given year and calendar  
array cal_from_jd(int jd, int calendar)
 
     Converts from Julian Day Count to a supported calendar and return extended information  
array cal_info(int calendar)
 
     Returns information about a particular calendar  
int cal_to_jd(int calendar, int month, int day, int year)
 
     Converts from a supported calendar to Julian Day Count  
int frenchtojd(int month, int day, int year)
 
     Converts a french republic calendar date to julian day count  
int gregoriantojd(int month, int day, int year)
 
     Converts a gregorian calendar date to julian day count  
mixed jddayofweek(int juliandaycount [, int mode])
 
     Returns name or number of day of week from julian day count  
string jdmonthname(int juliandaycount, int mode)
 
     Returns name of month for julian day count  
string jdtofrench(int juliandaycount)
 
     Converts a julian day count to a french republic calendar date  
string jdtogregorian(int juliandaycount)
 
     Converts a julian day count to a gregorian calendar date  
string jdtojewish(int juliandaycount)
 
     Converts a julian day count to a jewish calendar date  
string jdtojulian(int juliandaycount)
 
     Convert a julian day count to a julian calendar date  
int jewishtojd(int month, int day, int year)
 
     Converts a jewish calendar date to a julian day count  
int juliantojd(int month, int day, int year)
 
     Converts a julian calendar date to julian day count  
# php4/ext/calendar/easter.c
int easter_date([int year])
 
     Return the timestamp of midnight on Easter of a given year (defaults to current year)  
int easter_days([int year, [int method]])
 
     Return the number of days after March 21 that Easter falls on for a given year (defaults to current year)  
# php4/ext/com/COM.c
mixed com_addref(int module)
 
     Increases the reference counter on a COM object  
bool com_event_sink(mixed comobject, object sinkobject [, mixed sinkinterface])
 
     Connect events from a COM object to a PHP object  
mixed com_invoke(int module, string handler_name [, mixed arg [, mixed ...]])
 
     Invokes a COM module  
mixed com_invoke_ex(int module, int invokeflags, string handler_name [, mixed arg [, mixed ...]])
 
     Invokes a COM module  
bool com_isenum(object com_module)
 
     Grabs an IEnumVariant  
int com_load(string module_name [, string remote_host [, int codepage [, string typelib]]])
 
     Loads a COM module  
bool com_load_typelib(string typelib_name [, int case_insensitive]) 
 
     Loads a Typelib  
bool com_message_pump([int timeoutms])
 
     Process COM messages, sleeping for up to timeoutms milliseconds  
bool com_print_typeinfo(mixed comobject | string typelib, string dispinterface, bool wantsink)
 
     Print out a PHP class definition for a dispatchable interface  
mixed com_propget(int module, string property_name [, mixed arg ... ])
 
     Gets properties from a COM module  
bool com_propput(int module, string property_name, mixed value, ...)
 
     Puts the properties for a module  
mixed com_release(int module)
 
     Releases a COM object  
# php4/ext/cpdf/cpdf.c
bool cpdf_add_annotation(int pdfdoc, float xll, float yll, float xur, float xur, string title, string text [, int mode])
 
     Sets annotation  
int cpdf_add_outline(int pdfdoc, int lastoutline, int sublevel, int open, int pagenr, string title)
 
     Adds outline  
bool cpdf_arc(int pdfdoc, float x, float y, float radius, float start, float end [, int mode])
 
     Draws an arc  
bool cpdf_begin_text(int pdfdoc)
 
     Starts text section  
bool cpdf_circle(int pdfdoc, float x, float y, float radius [, int mode])
 
     Draws a circle  
bool cpdf_clip(int pdfdoc)
 
     Clips to current path  
void cpdf_close(int pdfdoc)
 
     Closes the pdf document  
bool cpdf_closepath(int pdfdoc)
 
     Close path  
bool cpdf_closepath_fill_stroke(int pdfdoc)
 
     Close, fill and stroke current path  
bool cpdf_closepath_stroke(int pdfdoc)
 
     Close path and draw line along path  
bool cpdf_continue_text(int pdfdoc, string text)
 
     Outputs text in next line  
bool cpdf_curveto(int pdfdoc, float x1, float y1, float x2, float y2, float x3, float y3 [, int mode])
 
     Draws a curve  
bool cpdf_end_text(int pdfdoc)
 
     Ends text section  
bool cpdf_fill(int pdfdoc)
 
     Fills current path  
bool cpdf_fill_stroke(int pdfdoc)
 
     Fills and stroke current path  
bool cpdf_finalize(int pdfdoc)
 
     Creates PDF doc in memory  
bool cpdf_finalize_page(int pdfdoc, int pagenr)
 
     Ends the page to save memory  
bool cpdf_global_set_document_limits(int maxPages, int maxFonts, int maxImages, int maxAnnots, int maxObjects)
 
     Sets document settings for all documents  
bool cpdf_import_jpeg(int pdfdoc, string filename, float x, float y, float angle, float width, float height, float x_scale, float y_scale, int gsave [, int mode])
 
     Includes JPEG image  
bool cpdf_lineto(int pdfdoc, float x, float y [, int mode])
 
     Draws a line  
bool cpdf_moveto(int pdfdoc, float x, float y [, int mode])
 
     Sets current point  
bool cpdf_newpath(int pdfdoc)
 
     Starts new path  
int cpdf_open(int compression [, string filename [, array doc_limits]])
 
     Opens a new pdf document  
bool cpdf_output_buffer(int pdfdoc)
 
     Returns the internal memory stream as string  
bool cpdf_page_init(int pdfdoc, int pagenr, int orientation, int height, int width [, float unit])
 
     Starts page  
bool cpdf_place_inline_image(int pdfdoc, int gdimage, float x, float y, float angle, fload width, float height, int gsave [, int mode])
 
     Includes image  
bool cpdf_rect(int pdfdoc, float x, float y, float width, float height [, int mode])
 
     Draws a rectangle  
bool cpdf_restore(int pdfdoc)
 
     Restores formerly saved enviroment  
bool cpdf_rlineto(int pdfdoc, float x, float y [, int mode])
 
     Draws a line relative to current point  
bool cpdf_rmoveto(int pdfdoc, float x, float y [, int mode])
 
     Sets current point  
bool cpdf_rotate(int pdfdoc, float angle)
 
     Sets rotation  
bool cpdf_rotate_text(int pdfdoc, float angle)
 
     Sets text rotation angle  
bool cpdf_save(int pdfdoc)
 
     Saves current enviroment  
bool cpdf_save_to_file(int pdfdoc, string filename)
 
     Saves the internal memory stream to a file  
bool cpdf_scale(int pdfdoc, float x_scale, float y_scale)
 
     Sets scaling  
void cpdf_set_action_url(int pdfdoc, float xll, float yll, float xur, float xur, string url [, int mode])
 
     Sets hyperlink  
bool cpdf_set_char_spacing(int pdfdoc, float space)
 
     Sets character spacing  
bool cpdf_set_creator(int pdfdoc, string creator)
 
     Sets the creator field  
bool cpdf_set_current_page(int pdfdoc, int pagenr)
 
     Sets page for output  
bool cpdf_set_font(int pdfdoc, string font, float size, string encoding)
 
     Selects the current font face, size and encoding  
bool cpdf_set_font_directories(int pdfdoc, string pfmdir, string pfbdir)
 
     Sets directories to search when using external fonts  
bool cpdf_set_font_map_file(int pdfdoc, string filename)
 
     Sets fontname to filename translation map when using external fonts  
bool cpdf_set_horiz_scaling(int pdfdoc, float scale)
 
     Sets horizontal scaling of text  
bool cpdf_set_keywords(int pdfptr, string keywords)
 
     Fills the keywords field of the info structure  
bool cpdf_set_leading(int pdfdoc, float distance)
 
     Sets distance between text lines  
bool cpdf_set_page_animation(int pdfdoc, int transition, float duration, float direction, int orientation, int inout)
 
     Sets transition between pages  
bool cpdf_set_subject(int pdfptr, string subject)
 
     Fills the subject field of the info structure  
bool cpdf_set_text_matrix(int pdfdoc, arry matrix)
 
     Sets the text matrix  
bool cpdf_set_text_pos(int pdfdoc, float x, float y [, int mode])
 
     Sets the position of text for the next cpdf_show call  
bool cpdf_set_text_rendering(int pdfdoc, int rendermode)
 
     Determines how text is rendered  
bool cpdf_set_text_rise(int pdfdoc, float value)
 
     Sets the text rise  
bool cpdf_set_title(int pdfptr, string title)
 
     Fills the title field of the info structure  
bool cpdf_set_viewer_preferences(int pdfdoc, array preferences)
 
     How to show the document in the viewer  
bool cpdf_set_word_spacing(int pdfdoc, float space)
 
     Sets spacing between words  
bool cpdf_setdash(int pdfdoc, long white, long black)
 
     Sets dash pattern  
bool cpdf_setflat(int pdfdoc, float value)
 
     Sets flatness  
bool cpdf_setgray(int pdfdoc, float value)
 
     Sets drawing and filling color to gray value  
bool cpdf_setgray_fill(int pdfdoc, float value)
 
     Sets filling color to gray value  
bool cpdf_setgray_stroke(int pdfdoc, float value)
 
     Sets drawing color to gray value  
bool cpdf_setlinecap(int pdfdoc, int value)
 
     Sets linecap parameter  
bool cpdf_setlinejoin(int pdfdoc, int value)
 
     Sets linejoin parameter  
bool cpdf_setlinewidth(int pdfdoc, float width)
 
     Sets line width  
bool cpdf_setmiterlimit(int pdfdoc, float value)
 
     Sets miter limit  
bool cpdf_setrgbcolor(int pdfdoc, float red, float green, float blue)
 
     Sets drawing and filling color to RGB color value  
bool cpdf_setrgbcolor_fill(int pdfdoc, float red, float green, float blue)
 
     Sets filling color to rgb color value  
bool cpdf_setrgbcolor_stroke(int pdfdoc, float red, float green, float blue)
 
     Sets drawing color to RGB color value  
bool cpdf_show(int pdfdoc, string text)
 
     Output text at current position  
bool cpdf_show_xy(int pdfdoc, string text, float x-koor, float y-koor [, int mode])
 
     Output text at position  
float cpdf_stringwidth(int pdfdoc, string text)
 
     Returns width of text in current font  
bool cpdf_stroke(int pdfdoc)
 
     Draws line along path path  
bool cpdf_text(int pdfdoc, string text [, float x-koor, float y-koor [, int mode [, float orientation [, int alignmode]]]])
 
     Outputs text  
bool cpdf_translate(int pdfdoc, float x, float y)
 
     Sets origin of coordinate system  
# php4/ext/crack/crack.c
bool crack_check([resource dictionary,] string password)
 
     Performs an obscure check with the given password  
bool crack_closedict([resource dictionary])
 
     Closes an open cracklib dictionary  
string crack_getlastmessage(void)
 
     Returns the message from the last obscure check  
resource crack_opendict(string dictionary)
 
     Opens a new cracklib dictionary  
# php4/ext/ctype/ctype.c
bool ctype_alnum(mixed c)
 
     Checks for alphanumeric character(s)  
bool ctype_alpha(mixed c)
 
     Checks for alphabetic character(s)  
bool ctype_cntrl(mixed c)
 
     Checks for control character(s)  
bool ctype_digit(mixed c)
 
     Checks for numeric character(s)  
bool ctype_graph(mixed c)
 
     Checks for any printable character(s) except space  
bool ctype_lower(mixed c)
 
     Checks for lowercase character(s)   
bool ctype_print(mixed c)
 
     Checks for printable character(s)  
bool ctype_punct(mixed c)
 
     Checks for any printable character which is not whitespace or an alphanumeric character  
bool ctype_space(mixed c)
 
     Checks for whitespace character(s) 
bool ctype_upper(mixed c)
 
     Checks for uppercase character(s)  
bool ctype_xdigit(mixed c)
 
     Checks for character(s) representing a hexadecimal digit  
# php4/ext/curl/curl.c
void curl_close(resource ch)
 
     Close a CURL session  
int curl_errno(resource ch)
 
     Return an integer containing the last error number  
string curl_error(resource ch)
 
     Return a string contain the last error for the current session  
bool curl_exec(resource ch)
 
     Perform a CURL session  
mixed curl_getinfo(resource ch, int opt)
 
     Get information regarding a specific transfer  
resource curl_init([string url])
 
     Initialize a CURL session  
bool curl_setopt(resource ch, string option, mixed value)
 
     Set an option for a CURL transfer  
string curl_version(void)
 
     Return cURL version information.  
# php4/ext/cyrus/cyrus.c
void cyrus_authenticate( resource connection [, string mechlist [, string service [, string user [, int minssf [, int maxssf]]]]])
 
     Authenticate agaings a Cyrus IMAP server  
bool cyrus_bind( resource connection, array callbacks)
 
   Bind callbacks to a Cyrus IMAP connection  
bool cyrus_close( resource connection)
 
     Close connection to a cyrus server  
resource cyrus_connect([ string host [, string port [, int flags]]])
 
     Connect to a Cyrus IMAP server  
bool cyrus_query( resource connection, string query)
 
     Send a query to a Cyrus IMAP server  
bool cyrus_unbind( resource connection, string trigger_name)
 
     Unbind ...  
# php4/ext/db/db.c
string dblist(void)
 
     Describes the dbm-compatible library being used  
array dblist(void)
 
     Return an associative array id->filename  
bool dbmclose(int dbm_identifier)
 
     Closes a dbm database  
int dbmdelete(int dbm_identifier, string key)
 
     Deletes the value for a key from a dbm database  
int dbmexists(int dbm_identifier, string key)
 
     Tells if a value exists for a key in a dbm database  
string dbmfetch(int dbm_identifier, string key)
 
     Fetches a value for a key from a dbm database  
string dbmfirstkey(int dbm_identifier)
 
     Retrieves the first key from a dbm database  
int dbminsert(int dbm_identifier, string key, string value)
 
     Inserts a value for a key in a dbm database  
string dbmnextkey(int dbm_identifier, string key)
 
     Retrieves the next key from a dbm database  
int dbmopen(string filename, string mode)
 
     Opens a dbm database  
int dbmreplace(int dbm_identifier, string key, string value)
 
     Replaces the value for a key in a dbm database  
# php4/ext/dba/dba.c
void dba_close(resource handle)
 
     Closes database  
bool dba_delete(string key, int handle)
 
     Deletes the entry associated with key
     If inifile: remove all other key lines  
bool dba_exists(string key, int handle)
 
     Checks, if the specified key exists  
string dba_fetch(string key, [int skip ,] int handle)
 
     Fetches the data associated with key  
string dba_firstkey(int handle)
 
     Resets the internal key pointer and returns the first key  
array dba_handlers([bool full_info])
 
     List configured database handlers  
bool dba_insert(string key, string value, int handle)
 
     If not inifile: Insert value as key, return false, if key exists already 
     If inifile: Add vakue as key (next instance of key)  
array dba_list()
 
     List opened databases  
string dba_nextkey(int handle)
 
     Returns the next key  
resource dba_open(string path, string mode [, string handlername, string ...])
 
     Opens path using the specified handler in mode 
bool dba_optimize(int handle)
 
     Optimizes (e.g. clean up, vacuum) database  
resource dba_popen(string path, string mode [, string handlername, string ...])
 
     Opens path using the specified handler in mode persistently  
bool dba_replace(string key, string value, int handle)
 
     Inserts value as key, replaces key, if key exists already
     If inifile: remove all other key lines  
bool dba_sync(int handle)
 
     Synchronizes database  
# php4/ext/dbase/dbase.c
bool dbase_add_record(int identifier, array data)
 
     Adds a record to the database  
bool dbase_close(int identifier)
 
     Closes an open dBase-format database file  
bool dbase_create(string filename, array fields)
 
     Creates a new dBase-format database file  
bool dbase_delete_record(int identifier, int record)
 
     Marks a record to be deleted  
array dbase_get_record(int identifier, int record)
 
     Returns an array representing a record from the database  
array dbase_get_record_with_names(int identifier, int record)
 
     Returns an associative array representing a record from the database  
int dbase_numfields(int identifier)
 
     Returns the number of fields (columns) in the database  
int dbase_numrecords(int identifier)
 
     Returns the number of records in the database  
int dbase_open(string name, int mode)
 
     Opens a dBase-format database file  
bool dbase_pack(int identifier)
 
     Packs the database (deletes records marked for deletion)  
bool dbase_replace_record(int identifier, array data, int recnum)
 
     Replaces a record to the database  
# php4/ext/dbx/dbx.c
bool dbx_close(dbx_link_object dbx_link)
 
     Returns success or failure 
   
int dbx_compare(array row_x, array row_y, string columnname [, int flags])
 
     Returns row_y[columnname] - row_x[columnname], converted to -1, 0 or 1  
dbx_link_object dbx_connect(string module_name, string host, string db, string username, string password [, bool persistent])
 
     Returns a dbx_link_object on success and returns 0 on failure  
void dbx_error(dbx_link_object dbx_link)
 
     Returns success or failure 
   
string dbx_esc(dbx_link_object dbx_link, string sz)
 
     Returns escaped string or NULL on error
   
dbx_result_object dbx_query(dbx_link_object dbx_link, string sql_statement [, long flags])
 
     Returns a dbx_link_object on success and returns 0 on failure  
int dbx_sort(object dbx_result, string compare_function_name)
 
     Returns 0 on failure, 1 on success  
# php4/ext/dio/dio.c
void dio_close(resource fd)
 
     Close the file descriptor given by fd  
mixed dio_fcntl(resource fd, int cmd[, mixed arg])
 
     Perform a c library fcntl on fd  
resource dio_open(string filename, int flags[, int mode])
 
     Open a new filename with specified permissions of flags and creation permissions of mode  
string dio_read(resource fd[, int n])
 
     Read n bytes from fd and return them, if n is not specified, read 1k  
int dio_seek(resource fd, int pos, int whence)
 
     Seek to pos on fd from whence  
array dio_stat(resource fd)
 
     Get stat information about the file descriptor fd  
mixed dio_tcsetattr(resource fd,  array args )
 
     Perform a c library tcsetattr on fd  
bool dio_truncate(resource fd, int offset)
 
     Truncate file descriptor fd to offset bytes  
int dio_write(resource fd, string data[, int len])
 
     Write data to fd with optional truncation at length  
# php4/ext/domxml/php_domxml.c
object domxml_add_root(string name)
 
     Adds root node to document  
array domxml_attr_name(void)
 
     Returns list of attribute names
     Notice: domxml_node_name() does exactly the same for attribute-nodes,
             is this function here still needed, or would an alias be enough?
      
bool domxml_attr_set_value(string content)
 
     Set value of attribute  
array domxml_attr_specified(void)
 
     Returns list of attribute names  
array domxml_attr_value(void)
 
     Returns list of attribute names  
array domxml_cdata_length(void)
 
     Returns list of attribute names  
object domxml_clone_node([bool deep])
 
     Clones a node  
object domxml_doc_create_attribute(string name, string value)
 
     Creates new attribute node  
object domxml_doc_create_cdata_section(string content)
 
     Creates new cdata node  
object domxml_doc_create_comment(string content)
 
     Creates new comment node  
object domxml_doc_create_element(string name)
 
     Creates new element node  
object domxml_doc_create_element_ns(string uri, string name [, string prefix])
 
     Creates new element node with a namespace  
object domxml_doc_create_entity_reference(string name)
 
     Creates new cdata node  
object domxml_doc_create_processing_instruction(string name)
 
     Creates new processing_instruction node  
object domxml_doc_create_text_node(string content)
 
     Creates new text node  
object domxml_doc_doctype(void)
 
     Returns DomDocumentType  
object domxml_doc_document_element(int domnode)
 
     Returns root node of document  
bool domxml_doc_free_doc()
 
     Frees xmldoc and removed objects from hash  
string domxml_doc_get_element_by_id(string id)
 
     Returns element for given id or false if not found  
string domxml_doc_get_elements_by_tagname(string tagname [,object xpathctx_handle] )
 
     Returns array with nodes with given tagname in document or empty array, if not found 
string domxml_doc_ids(object doc_handle)
 
     Returns array of ids  
object domxml_doc_implementation(void)
 
     Returns DomeDOMImplementation  
object domxml_doc_imported_node(object node, bool recursive)
 
     Creates new element node  
bool domxml_doc_validate(array &error)
 
     Validates a DomDocument according to his DTD 
int domxml_doc_xinclude()
 
     Substitutues xincludes in a DomDocument  
array domxml_doctype_entities(void)
 
     Returns list of entities  
array domxml_doctype_name(void)
 
     Returns name of DocumentType  
array domxml_doctype_notations(void)
 
     Returns list of notations  
array domxml_doctype_public_id(void)
 
     Returns public id of DocumentType  
array domxml_doctype_system_id(void)
 
     Returns system id of DocumentType  
object domxml_dtd(void)
 
     Returns DTD of document  
string domxml_dump_mem(object doc_handle [, int format][, encoding])
 
     Dumps document into string and optionally formats it  
int domxml_dump_mem_file(string filename [, int compressmode [, int format]])
 
     Dumps document into file and uses compression if specified. Returns false on error, otherwise the length of the xml-document (uncompressed)  
string domxml_dump_node(object doc_handle, object node_handle [, int format [, int level]])
 
     Dumps node into string  
string domxml_elem_get_attribute(string attrname)
 
     Returns value of given attribute  
string domxml_elem_get_attribute_node(string attrname)
 
     Returns value of given attribute  
string domxml_elem_get_elements_by_tagname(string tagname)
 
     Returns array with nodes with given tagname in element or empty array, if not found  
string domxml_elem_has_attribute(string attrname)
 
     Checks for existenz given attribute  
string domxml_elem_remove_attribute(string attrname)
 
     Removes given attribute  
bool domxml_elem_set_attribute(string attrname, string value)
 
     Sets value of given attribute  
bool domxml_elem_set_attribute_node(object attr)
 
     Sets value of given attribute  
string domxml_elem_tagname(void)
 
     Returns tag name of element node  
object domxml_element(string name)
 
     Constructor of DomElement  
string domxml_html_dump_mem([int doc_handle])
 
     Dumps document into string as HTML  
bool domxml_is_blank_node(void)
 
     Returns true if node is blank  
object domxml_new_xmldoc(string version)
 
     Creates new xmldoc  
object domxml_node(string name)
 
     Creates node  
bool domxml_node_add_namespace(string uri, string prefix)
 
     Adds a namespace declaration to a node  
object domxml_node_append_child(object domnode)
 
     Adds node to list of children  
object domxml_node_append_sibling(object domnode)
 
     Adds node to list of siblings  
array domxml_node_attributes(void)
 
     Returns list of attributes of node  
array domxml_node_children(void)
 
     Returns list of children nodes  
object domxml_node_first_child(void)
 
     Returns first child from list of children  
string domxml_node_get_content()
 
     Gets content of a node.
  
     "Read the value of a node, this can be either the text carried directly by
  this node if it's a TEXT node or the aggregate string of the values carried by
  this node child's (TEXT and ENTITY_REF). Entity references are substituted."
      
object domxml_node_has_attributes(void)
 
     Returns true if node has attributes  
object domxml_node_has_child_nodes(void)
 
     Returns true if node has children  
object domxml_node_insert_before(object newnode, object refnode)
 
     Adds node in list of nodes before given node  
object domxml_node_last_child(void)
 
     Returns last child from list of children  
object domxml_node_name(void)
 
     Returns name of node  
string domxml_node_namespace_uri(void)
 
     Returns namespace uri of node  
object domxml_node_new_child(string name, string content)
 
     Adds child node to parent node  
object domxml_node_next_sibling(void)
 
     Returns next child from list of children  
object domxml_node_owner_document(void)
 
     Returns document this node belongs to  
object domxml_node_parent(void)
 
     Returns parent of node  
string domxml_node_prefix(void)
 
     Returns namespace prefix of node  
object domxml_node_previous_sibling(void)
 
     Returns previous child from list of children  
object domxml_node_remove_child(object domnode)
 
     Removes node from list of children  
object domxml_node_replace_child(object newnode, object oldnode)
 
     Replaces node in list of children  
object domxml_node_replace_node(object domnode)
 
     Replaces one node with another node  
bool domxml_node_set_content(string content)
 
     Sets content of a node  
bool domxml_node_set_name(string name)
 
     Sets name of a node  
void domxml_node_set_namespace(string uri [, string prefix])
 
     Sets the namespace of a node  
bool domxml_node_text_concat(string content)
 
     Add string tocontent of a node  
int domxml_node_type(void)
 
     Returns the type of the node  
void domxml_node_unlink_node([object node])
 
     Deletes the node from tree, but not from memory 
object domxml_node_value(void)
 
     Returns name of value  
string domxml_notation_public_id(void)
 
     Returns public id of notation node  
string domxml_notation_system_id(void)
 
     Returns system ID of notation node  
object domxml_parser([string buf[,string filename]])
 
     Creates new xmlparser  
bool domxml_parser_add_chunk(string chunk)
 
     adds xml-chunk to parser  
bool domxml_parser_cdata_section(string chunk)
 
     adds a cdata block  
bool domxml_parser_characters(string characters)
 
     Adds characters  
bool domxml_parser_comment(string comment)
 
     Adds a comment  
object domxml_parser_end([string chunk])
 
     Ends parsing and returns DomDocument 
bool domxml_parser_end_document()
 
     ends a document  
bool domxml_parser_end_element(string tagname)
 
     Ends an element  
bool domxml_parser_entity_reference(string reference)
 
     Adds entity reference  
object domxml_parser_get_document()
 
     Returns DomDocument from parser  
bool domxml_parser_namespace_decl(string href, string prefix)
 
     Adds namespace declaration  
bool domxml_parser_processing_instruction(string target, string data)
 
     Adds processing instruction  
bool domxml_parser_set_keep_blanks(bool mode)
 
     Determines how to handle blanks  
bool domxml_parser_start_document()
 
     starts a document 
bool domxml_parser_start_element(string tagname, array attributes)
 
     Starts an element and adds attributes 
array domxml_pi_data(void)
 
     Returns data of pi  
array domxml_pi_target(void)
 
     Returns target of pi  
bool domxml_set_root(int domnode)
 
     Sets root node of document  
bool domxml_substitute_entities_default(bool enable)
 
     Set and return the previous value for default entity support  
int domxml_test(int id)
 
     Unity function for testing  
string domxml_version(void)
 
     Get XML library version  
object domxml_xmltree(string xmltree)
 
     Creates a tree of PHP objects from an XML document  
object domxml_xslt_process(object xslstylesheet, object xmldoc [, array xslt_parameters [, bool xpath_parameters [, string profileFilename]]])
 
     Perform an XSLT transformation  
int domxml_xslt_result_dump_file(object xslstylesheet, object xmldoc, string filename[, int compression])
 
     output XSLT result to File  
string domxml_xslt_result_dump_mem(object xslstylesheet, object xmldoc)
 
     output XSLT result to memory  
object domxml_xslt_stylesheet(string xsltstylesheet)
 
     Creates XSLT Stylesheet object from string  
object domxml_xslt_stylesheet_doc(object xmldoc)
 
     Creates XSLT Stylesheet object from DOM Document object  
object domxml_xslt_stylesheet_file(string filename)
 
     Creates XSLT Stylesheet object from file  
string domxml_xslt_version(void)
 
     Get XSLT library version  
object html_doc(string html_doc [, bool from_file])
 
     Creates DOM object of HTML document  
object html_doc_file(string filename)
 
     Creates DOM object of HTML document in file  
int node_attributes(zval **attributes, int node)
 
     Returns list of children nodes  
int node_children([int node])
 
     Returns list of children nodes  
int node_namespace([int node])
 
     Returns list of namespaces  
object xmldoc(string xmldoc[, int mode[, array error]])
 
     Creates DOM object of XML document  
object xmldocfile(string filename[, int mode[, array error])
 
     Creates DOM object of XML document in file  
object xpath_eval([object xpathctx_handle,] string str)
 
     Evaluates the XPath Location Path in the given string  
object xpath_eval_expression([object xpathctx_handle,] string str)
 
     Evaluates the XPath expression in the given string  
bool xpath_init(void)
 
     Initializing XPath environment  
object xpath_new_context([int doc_handle])
 
     Creates new XPath context  
bool xpath_register_ns([object xpathctx_handle,] string namespace_prefix, string namespace_uri)
 
  	Registeres the given namespace in the passed XPath context  
int xptr_eval([int xpathctx_handle,] string str)
 
     Evaluates the XPtr Location Path in the given string  
object xptr_new_context([int doc_handle])
 
     Creates new XPath context  
# php4/ext/exif/exif.c
int exif_imagetype(string imagefile)
 
     Get the type of an image  
array|false exif_read_data(string filename [, sections_needed [, sub_arrays[, read_thumbnail]]])
 
     Reads header data from the JPEG/TIFF image filename and optionally reads the internal thumbnails  
string|false exif_tagname(index)
 
  	Get headername for index or false if not defined  
string|false exif_thumbnail(string filename [, &width, &height [, &imagetype]])
 
     Reads the embedded thumbnail  
# php4/ext/fbsql/php_fbsql.c
int fbsql_affected_rows([resource link_identifier])
 
     Get the number of rows affected by the last statement  
bool fbsql_autocommit(resource link_identifier [, bool OnOff])
 
     Turns on auto-commit  
string fbsql_blob_size(string blob_handle [, resource link_identifier])
 
     Get the size of a BLOB identified by blob_handle  
int fbsql_change_user(string user, string password [, string database [, resource link_identifier]])
 
     Change the user for a session  
string fbsql_clob_size(string clob_handle [, resource link_identifier])
 
     Get the size of a CLOB identified by clob_handle  
int fbsql_close([resource link_identifier])
 
     Close a connection to a database server  
bool fbsql_commit([resource link_identifier])
 
     Commit the transaction  
resource fbsql_connect([string hostname [, string username [, string password]]])
 
     Create a connection to a database server  
string fbsql_create_blob(string blob_data [, resource link_identifier])
 
     Create a BLOB in the database for use with an insert or update statement  
string fbsql_create_clob(string clob_data [, resource link_identifier])
 
     Create a CLOB in the database for use with an insert or update statement  
bool fbsql_create_db(string database_name [, resource link_identifier])
 
     Create a new database on the server  
int fbsql_data_seek(int result, int row_number)
 
     Move the internal row counter to the specified row_number  
string fbsql_database(resource link_identifier [, string database]) 
 
     Get or set the database name used with a connection  
string fbsql_database_password(resource link_identifier [, string database_password])
 
     Get or set the databsae password used with a connection  
resource fbsql_db_query(string database_name, string query [, resource link_identifier])
 
     Send one or more SQL statements to a specified database on the server  
int fbsql_db_status(string database_name [, resource link_identifier])
 
     Gets the status (Stopped, Starting, Running, Stopping) for a given database  
int fbsql_drop_db(string database_name [, resource link_identifier])
 
     Drop a database on the server  
int fbsql_errno([resource link_identifier])
 
     Returns the last error code  
string fbsql_error([resource link_identifier])
 
     Returns the last error string  
array fbsql_fetch_array(resource result [, int result_type])
 
     Fetches a result row as an array (associative, numeric or both) 
object fbsql_fetch_assoc(resource result)
 
     Detch a row of data. Returns an assoc array  
object fbsql_fetch_field(int result [, int field_index])
 
     Get the field properties for a specified field_index  
array fbsql_fetch_lengths(int result)
 
     Returns an array of the lengths of each column in the result set  
object fbsql_fetch_object(resource result [, int result_type])
 
     Fetch a row of data. Returns an object  
array fbsql_fetch_row(resource result)
 
     Fetch a row of data. Returns an indexed array  
string fbsql_field_flags(int result [, int field_index])
 
     ???  
string fbsql_field_len(int result [, int field_index])
 
     Get the column length for a specified field_index  
string fbsql_field_name(int result [, int field_index])
 
     Get the column name for a specified field_index  
bool fbsql_field_seek(int result [, int field_index])
 
     ???  
string fbsql_field_table(int result [, int field_index])
 
     Get the table name for a specified field_index  
string fbsql_field_type(int result [, int field_index])
 
     Get the field type for a specified field_index  
bool fbsql_free_result(resource result)
 
     free the memory used to store a result  
array fbsql_get_autostart_info([resource link_identifier])
 
     ???  
string fbsql_hostname(resource link_identifier [, string host_name])
 
     Get or set the host name used with a connection  
int fbsql_insert_id([resource link_identifier])
 
     Get the internal index for the last insert statement  
resource fbsql_list_dbs([resource link_identifier])
 
     Retreive a list of all databases on the server  
resource fbsql_list_fields(string database_name, string table_name [, resource link_identifier])
 
     Retrieve a list of all fields for the specified database.table  
resource fbsql_list_tables(string database [, int link_identifier])
 
     Retreive a list of all tables from the specifoied database  
int fbsql_next_result(int result)
 
     Switch to the next result if multiple results are available  
int fbsql_num_fields(int result)
 
     Get number of fields in the result set  
int fbsql_num_rows(int result)
 
     Get number of rows  
string fbsql_password(resource link_identifier [, string password])
 
     Get or set the user password used with a connection  
resource fbsql_pconnect([string hostname [, string username [, string password]]])
 
     Create a persistant connection to a database server  
resource fbsql_query(string query [, resource link_identifier])
 
     Send one or more SQL statements to the server and execute them  
string fbsql_read_blob(string blob_handle [, resource link_identifier])
 
     Read the BLOB data identified by blob_handle  
string fbsql_read_clob(string clob_handle [, resource link_identifier])
 
     Read the CLOB data identified by clob_handle  
mixed fbsql_result(int result [, int row [, mixed field]])
 
     ???  
int fbsql_rollback([resource link_identifier])
 
     Rollback all statments since last commit  
bool fbsql_select_db([string database_name [, resource link_identifier]])
 
     Select the database to open  
bool fbsql_set_lob_mode(resource result, int lob_mode)
 
     Sets the mode for how LOB data re retreived (actual data or a handle)  
void fbsql_set_transaction(resource link_identifier, int locking, int isolation)
 
     Sets the transaction locking and isolation  
bool fbsql_start_db(string database_name [, resource link_identifier])
 
     Start a database on the server  
bool fbsql_stop_db(string database_name [, resource link_identifier])
 
     Stop a database on the server  
string fbsql_table_name(resource result, int index)
 
     Retreive the table name for index after a call to fbsql_list_tables()  
string fbsql_username(resource link_identifier [, string username])
 
     Get or set the host user used with a connection  
bool fbsql_warnings([int flag])
 
     Enable or disable FrontBase warnings  
# php4/ext/fdf/fdf.c
bool fdf_add_doc_javascript(resource fdfdoc, string scriptname, string script) 
 
  	 Add javascript code to the fdf file  
bool fdf_add_template(resource fdfdoc, int newpage, string filename, string template, int rename)
 
     Adds a template into the FDF document  
bool fdf_close(resource fdfdoc)
 
     Closes the FDF document  
resource fdf_create(void)
 
     Creates a new FDF document  
bool fdf_enum_values(resource fdfdoc, callback function [, mixed userdata])
 
     Call a user defined function for each document value  
int fdf_errno(void) 
 
     Gets error code for last operation  
string fdf_error([int errno]) 
 
     Gets error description for error code  
bool fdf_get_ap(resource fdfdoc, string fieldname, int face, string filename) 
 
  	 Gets the appearance of a field and creates a PDF document out of it.  
array fdf_get_attachment(resource fdfdoc, string fieldname, string savepath)
 
     Get attached uploaded file  
string fdf_get_encoding(resource fdf) 
 
     Gets FDF file encoding scheme  
string fdf_get_file(resource fdfdoc)
 
     Gets the value of /F key  
int fdf_get_flags(resorce fdfdoc, string fieldname, int whichflags) 
 
     Gets the flags of a field  
mixed fdf_get_opt(resource fdfdof, string fieldname [, int element])
 
     Gets a value from the opt array of a field  
string fdf_get_status(resource fdfdoc)
 
     Gets the value of /Status key  
string fdf_get_value(resource fdfdoc, string fieldname [, int which])
 
     Gets the value of a field as string  
string fdf_get_version([resource fdfdoc]) 
 
     Gets version number for FDF api or file  
void fdf_header(void) 
 
     Set FDF specific HTTP headers  
string fdf_next_field_name(resource fdfdoc [, string fieldname])
 
     Gets the name of the next field name or the first field name  
resource fdf_open(string filename)
 
     Opens a new FDF document  
resource fdf_open_string(string fdf_data)
 
     Opens a new FDF document from string  
bool fdf_remove_item(resource fdfdoc, string fieldname, int item)
 
     Sets target frame for form  
mixed fdf_save(resource fdfdoc [, string filename])
 
     Writes out the FDF file  
mixed fdf_save_string(resource fdfdoc)
 
     Returns the FDF file as a string  
bool fdf_set_ap(resource fdfdoc, string fieldname, int face, string filename, int pagenr)
 
     Sets the appearence of a field  
bool fdf_set_encoding(resource fdf_document, string encoding)
 
     Sets FDF encoding (either "Shift-JIS" or "Unicode")  
bool fdf_set_file(resource fdfdoc, string filename [, string target_frame])
 
     Sets the value of /F key  
bool fdf_set_flags(resource fdfdoc, string fieldname, int whichflags, int newflags)
 
     Sets flags for a field in the FDF document  
bool fdf_set_javascript_action(resource fdfdoc, string fieldname, int whichtrigger, string script)
 
     Sets the javascript action for a field  
bool fdf_set_on_import_javascript(resource fdfdoc, string script [, bool before_data_import])
 
     Adds javascript code to be executed when Acrobat opens the FDF  
bool fdf_set_opt(resource fdfdoc, string fieldname, int element, string value, string name)
 
     Sets a value in the opt array for a field  
bool fdf_set_status(resource fdfdoc, string status)
 
     Sets the value of /Status key  
bool fdf_set_submit_form_action(resource fdfdoc, string fieldname, int whichtrigger, string url, int flags)
 
     Sets the submit form action for a field  
bool fdf_set_target_frame(resource fdfdoc, string target)
 
     Sets target frame for form  
bool fdf_set_value(resource fdfdoc, string fieldname, mixed value [, int isname])
 
     Sets the value of a field  
bool fdf_set_version(resourece fdfdoc, string version)
 
     Sets FDF version for a file 
# php4/ext/filepro/filepro.c
bool filepro(string directory)
 
     Read and verify the map file  
int filepro_fieldcount(void)
 
     Find out how many fields are in a filePro database  
string filepro_fieldname(int fieldnumber)
 
     Gets the name of a field  
string filepro_fieldtype(int field_number)
 
     Gets the type of a field  
int filepro_fieldwidth(int field_number)
 
     Gets the width of a field  
string filepro_retrieve(int row_number, int field_number)
 
     Retrieves data from a filePro database  
int filepro_rowcount(void)
 
     Find out how many rows are in a filePro database  
# php4/ext/fribidi/fribidi.c
array fribidi_charset_info(int charset)
 
     Returns an array containing information about the specified charset  
array fribidi_get_charsets()
 
     Returns an array containing available charsets  
string fribidi_log2vis(string logical_str, long direction, long charset)
 
     Convert a logical string to a visual one  
# php4/ext/ftp/php_ftp.c
bool ftp_cdup(resource stream)
 
     Changes to the parent directory  
bool ftp_chdir(resource stream, string directory)
 
     Changes directories  
void ftp_close(resource stream)
 
     Closes the FTP stream  
resource ftp_connect(string host [, int port [, int timeout)]])
 
     Opens a FTP stream  
bool ftp_delete(resource stream, string file)
 
     Deletes a file  
bool ftp_exec(resource stream, string command)
 
     Requests execution of a program on the FTP server  
bool ftp_fget(resource stream, resource fp, string remote_file, int mode[, int resumepos])
 
     Retrieves a file from the FTP server and writes it to an open file  
bool ftp_fput(resource stream, string remote_file, resource fp, int mode[, int startpos])
 
     Stores a file from an open file to the FTP server  
bool ftp_get(resource stream, string local_file, string remote_file, int mode[, int resume_pos])
 
     Retrieves a file from the FTP server and writes it to a local file  
mixed ftp_get_option(resource stream, int option)
 
     Gets an FTP option  
bool ftp_login(resource stream, string username, string password)
 
     Logs into the FTP server  
int ftp_mdtm(resource stream, string filename)
 
     Returns the last modification time of the file, or -1 on error  
string ftp_mkdir(resource stream, string directory)
 
     Creates a directory and returns the absolute path for the new directory or false on error  
int ftp_nb_continue(resource stream)
 
     Continues retrieving/sending a file nbronously  
bool ftp_nb_fget(resource stream, resource fp, string remote_file, int mode[, int resumepos])
 
     Retrieves a file from the FTP server asynchronly and writes it to an open file  
bool ftp_nb_fput(resource stream, string remote_file, resource fp, int mode[, int startpos])
 
     Stores a file from an open file to the FTP server nbronly  
int ftp_nb_get(resource stream, string local_file, string remote_file, int mode[, int resume_pos])
 
     Retrieves a file from the FTP server nbhronly and writes it to a local file  
bool ftp_nb_put(resource stream, string remote_file, string local_file, int mode[, int startpos])
 
     Stores a file on the FTP server  
array ftp_nlist(resource stream, string directory)
 
     Returns an array of filenames in the given directory  
bool ftp_pasv(resource stream, bool pasv)
 
     Turns passive mode on or off  
bool ftp_put(resource stream, string remote_file, string local_file, int mode[, int startpos])
 
     Stores a file on the FTP server  
string ftp_pwd(resource stream)
 
     Returns the present working directory  
array ftp_rawlist(resource stream, string directory [, bool recursive])
 
     Returns a detailed listing of a directory as an array of output lines  
bool ftp_rename(resource stream, string src, string dest)
 
     Renames the given file to a new path  
bool ftp_rmdir(resource stream, string directory)
 
     Removes a directory  
bool ftp_set_option(resource stream, int option, mixed value)
 
     Sets an FTP option  
bool ftp_site(resource stream, string cmd)
 
     Sends a SITE command to the server  
int ftp_size(resource stream, string filename)
 
     Returns the size of the file, or -1 on error  
resource ftp_ssl_connect(string host [, int port [, int timeout)]])
 
     Opens a FTP-SSL stream  
string ftp_systype(resource stream)
 
     Returns the system type identifier  
# php4/ext/gd/gd.c
array gd_info()
 
    
imagesetantialias(int im, bool on)
 
          Should antialiased functions used or not 
int image2wbmp(int im [, string filename [, int threshold]])
 
     Output WBMP image to browser or file  
void imagealphablending(resource im, bool on)
 
     Turn alpha blending mode on or off for the given image  
int imagearc(int im, int cx, int cy, int w, int h, int s, int e, int col)
 
     Draw a partial ellipse  
int imagechar(int im, int font, int x, int y, string c, int col)
 
     Draw a character  
int imagecharup(int im, int font, int x, int y, string c, int col)
 
     Draw a character rotated 90 degrees counter-clockwise  
int imagecolorallocate(int im, int red, int green, int blue)
 
     Allocate a color for an image  
int imagecolorallocatealpha(resource im, int red, int green, int blue, int alpha)
 
     Allocate a color with an alpha level.  Works for true color and palette based images  
int imagecolorat(int im, int x, int y)
 
     Get the index of the color of a pixel  
int imagecolorclosest(int im, int red, int green, int blue)
 
     Get the index of the closest color to the specified color  
int imagecolorclosestalpha(resource im, int red, int green, int blue, int alpha)
 
     Find the closest matching colour with alpha transparency  
int imagecolorclosesthwb(int im, int red, int green, int blue)
 
     Get the index of the color which has the hue, white and blackness nearest to the given color  
int imagecolordeallocate(int im, int index)
 
     De-allocate a color for an image  
int imagecolorexact(int im, int red, int green, int blue)
 
     Get the index of the specified color  
int imagecolorexactalpha(resource im, int red, int green, int blue, int alpha)
 
     Find exact match for colour with transparency  
void imagecolormatch(resource im1, resource im2)
 
     Makes the colors of the palette version of an image more closely match the true color version  
int imagecolorresolve(int im, int red, int green, int blue)
 
     Get the index of the specified color or its closest possible alternative  
int imagecolorresolvealpha(resource im, int red, int green, int blue, int alpha)
 
     Resolve/Allocate a colour with an alpha level.  Works for true colour and palette based images  
int imagecolorset(int im, int col, int red, int green, int blue)
 
     Set the color for the specified palette index  
array imagecolorsforindex(int im, int col)
 
     Get the colors for an index  
int imagecolorstotal(int im)
 
     Find out the number of colors in an image's palette  
int imagecolortransparent(int im [, int col])
 
     Define a color as transparent  
int imagecopy(int dst_im, int src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h)
 
     Copy part of an image  
int imagecopymerge(int src_im, int dst_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct)
 
     Merge one part of an image with another  
int imagecopymergegray(int src_im, int dst_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct)
 
     Merge one part of an image with another  
int imagecopyresampled(int dst_im, int src_im, int dst_x, int dst_y, int src_x, int src_y, int dst_w, int dst_h, int src_w, int src_h)
 
     Copy and resize part of an image using resampling to help ensure clarity  
int imagecopyresized(int dst_im, int src_im, int dst_x, int dst_y, int src_x, int src_y, int dst_w, int dst_h, int src_w, int src_h)
 
     Copy and resize part of an image  
int imagecreate(int x_size, int y_size)
 
     Create a new image  
int imagecreatefromgd(string filename)
 
     Create a new image from GD file or URL  
int imagecreatefromgd2(string filename)
 
     Create a new image from GD2 file or URL  
int imagecreatefromgd2part(string filename, int srcX, int srcY, int width, int height)
 
     Create a new image from a given part of GD2 file or URL  
int imagecreatefromgif(string filename)
 
     Create a new image from GIF file or URL  
int imagecreatefromjpeg(string filename)
 
     Create a new image from JPEG file or URL  
int imagecreatefrompng(string filename)
 
     Create a new image from PNG file or URL  
int imagecreatefromstring(string image)
 
     Create a new image from the image stream in the string  
int imagecreatefromwbmp(string filename)
 
     Create a new image from WBMP file or URL  
int imagecreatefromxbm(string filename)
 
     Create a new image from XBM file or URL  
int imagecreatefromxpm(string filename)
 
     Create a new image from XPM file or URL  
int imagecreatetruecolor(int x_size, int y_size)
 
     Create a new true color image  
int imagedashedline(int im, int x1, int y1, int x2, int y2, int col)
 
     Draw a dashed line  
int imagedestroy(int im)
 
     Destroy an image  
void imageellipse(resource im, int cx, int cy, int w, int h, int color)
 
     Draw an ellipse  
int imagefill(int im, int x, int y, int col)
 
     Flood fill  
int imagefilledarc(int im, int cx, int cy, int w, int h, int s, int e, int col, int style)
 
     Draw a filled partial ellipse  
void imagefilledellipse(resource im, int cx, int cy, int w, int h, int color)
 
     Draw an ellipse  
int imagefilledpolygon(int im, array point, int num_points, int col)
 
     Draw a filled polygon  
int imagefilledrectangle(int im, int x1, int y1, int x2, int y2, int col)
 
     Draw a filled rectangle  
int imagefilltoborder(int im, int x, int y, int border, int col)
 
     Flood fill to specific color  
int imagefontheight(int font)
 
     Get font height  
int imagefontwidth(int font)
 
     Get font width  
array imageftbbox(int size, int angle, string font_file, string text[, array extrainfo])
 
     Give the bounding box of a text using fonts via freetype2  
array imagefttext(int im, int size, int angle, int x, int y, int col, string font_file, string text, [array extrainfo])
 
     Write text to the image using fonts via freetype2  
int imagegammacorrect(int im, float inputgamma, float outputgamma)
 
     Apply a gamma correction to a GD image  
int imagegd(int im [, string filename])
 
     Output GD image to browser or file  
int imagegd2(int im [, string filename, [, int chunk_size, [, int type]]])
 
     Output GD2 image to browser or file  
int imagegif(int im [, string filename])
 
     Output GIF image to browser or file  
int imageinterlace(int im [, int interlace])
 
     Enable or disable interlace  
int imageistruecolor(int im)
 
     return true if the image uses truecolor  
int imagejpeg(int im [, string filename [, int quality]])
 
     Output JPEG image to browser or file  
void imagelayereffect(resource im, int effect)
 
     Set the alpha blending flag to use the bundled libgd layering effects  
int imageline(int im, int x1, int y1, int x2, int y2, int col)
 
     Draw a line  
int imageloadfont(string filename)
 
     Load a new font  
int imagepalettecopy(int dst, int src)
 
     Copy the palette from the src image onto the dst image  
int imagepng(int im [, string filename])
 
     Output PNG image to browser or file  
int imagepolygon(int im, array point, int num_points, int col)
 
     Draw a polygon  
array imagepsbbox(string text, int font, int size [, int space, int tightness, int angle])
 
     Return the bounding box needed by a string if rasterized  
int imagepscopyfont(int font_index)
 
     Make a copy of a font for purposes like extending or reenconding  
bool imagepsencodefont(int font_index, string filename)
 
     To change a fonts character encoding vector  
bool imagepsextendfont(int font_index, float extend)
 
     Extend or or condense (if extend < 1) a font  
bool imagepsfreefont(int font_index)
 
     Free memory used by a font  
int imagepsloadfont(string pathname)
 
     Load a new font from specified file  
bool imagepsslantfont(int font_index, float slant)
 
     Slant a font  
array imagepstext(int image, string text, int font, int size, int xcoord, int ycoord [, int space, int tightness, float angle, int antialias])
 
     Rasterize a string over an image  
int imagerectangle(int im, int x1, int y1, int x2, int y2, int col)
 
     Draw a rectangle  
int imagerotate(int src_im, float angle, int bgdcolor)
 
     Rotate an image using a custom angle  
void imagesavealpha(resource im, bool on)
 
     Include alpha channel to a saved image  
int imagesetbrush(resource image, resource brush)
 
     Set the brush image to $brush when filling $image with the "IMG_COLOR_BRUSHED" color  
int imagesetpixel(int im, int x, int y, int col)
 
     Set a single pixel  
void imagesetstyle(resource im, array styles)
 
     Set the line drawing styles for use with imageline and IMG_COLOR_STYLED.  
void imagesetthickness(resource im, int thickness)
 
     Set line thickness for drawing lines, ellipses, rectangles, polygons etc.  
int imagesettile(resource image, resource tile)
 
     Set the tile image to $tile when filling $image with the "IMG_COLOR_TILED" color  
int imagestring(int im, int font, int x, int y, string str, int col)
 
     Draw a string horizontally  
int imagestringup(int im, int font, int x, int y, string str, int col)
 
     Draw a string vertically - rotated 90 degrees counter-clockwise  
int imagesx(int im)
 
     Get image width  
int imagesy(int im)
 
     Get image height  
void imagetruecolortopalette(resource im, bool ditherFlag, int colorsWanted)
 
     Convert a true colour image to a palette based image with a number of colours, optionally using dithering.  
array imagettfbbox(int size, int angle, string font_file, string text)
 
     Give the bounding box of a text using TrueType fonts  
array imagettftext(int im, int size, int angle, int x, int y, int col, string font_file, string text)
 
     Write text to the image using a TrueType font  
int imagetypes(void)
 
     Return the types of images supported in a bitfield - 1=GIF, 2=JPEG, 4=PNG, 8=WBMP, 16=XPM  
int imagewbmp(int im [, string filename, [, int foreground]])
 
     Output WBMP image to browser or file  
void jpeg2wbmp (string f_org, string f_dest, int d_height, int d_width, int threshold)
 
     Convert JPEG image to WBMP image  
void png2wbmp (string f_org, string f_dest, int d_height, int d_width, int threshold)
 
     Convert PNG image to WBMP image  
# php4/ext/gettext/gettext.c
string bind_textdomain_codeset (string domain, string codeset)
 
     Specify the character encoding in which the messages from the DOMAIN message catalog will be returned.  
string bindtextdomain(string domain_name, string dir)
 
     Bind to the text domain domain_name, looking for translations in dir. Returns the current domain  
string dcgettext(string domain_name, string msgid, long category)
 
     Return the translation of msgid for domain_name and category, or msgid unaltered if a translation does not exist  
string dcngettext (string domain, string msgid1, string msgid2, int n, int category)
 
     Plural version of dcgettext()  
string dgettext(string domain_name, string msgid)
 
     Return the translation of msgid for domain_name, or msgid unaltered if a translation does not exist  
string dngettext (string domain, string msgid1, string msgid2, int count)
 
     Plural version of dgettext()  
string gettext(string msgid)
 
     Return the translation of msgid for the current domain, or msgid unaltered if a translation does not exist  
string ngettext(string MSGID1, string MSGID2, int N)
 
     Plural version of gettext()  
string textdomain(string domain)
 
     Set the textdomain to "domain". Returns the current domain  
# php4/ext/gmp/gmp.c
resource gmp_abs(resource a)
 
     Calculates absolute value  
resource gmp_add(resource a, resource b)
 
     Add a and b  
resource gmp_and(resource a, resource b)
 
     Calculates logical AND of a and b  
void gmp_clrbit(resource &a, int index)
 
     Clears bit in a  
int gmp_cmp(resource a, resource b)
 
     Compares two numbers  
resource gmp_com(resource a)
 
     Calculates one's complement of a  
resource gmp_div_q(resource a, resource b [, int round])
 
     Divide a by b, returns quotient only  
array gmp_div_qr(resource a, resource b [, int round])
 
     Divide a by b, returns quotient and reminder  
resource gmp_div_r(resource a, resource b [, int round])
 
     Divide a by b, returns reminder only  
resource gmp_divexact(resource a, resource b)
 
     Divide a by b using exact division algorithm  
resource gmp_fact(int a)
 
     Calculates factorial function  
resource gmp_gcd(resource a, resource b)
 
     Computes greatest common denominator (gcd) of a and b  
array gmp_gcdext(resource a, resource b)
 
     Computes G, S, and T, such that AS      BT = G = `gcd' (A, B)  
int gmp_hamdist(resource a, resource b)
 
     Calculates hamming distance between a and b  
resource gmp_init(mixed number [, int base])
 
     Initializes GMP number  
int gmp_intval(resource gmpnumber)
 
     Gets signed long value of GMP number  
resource gmp_invert(resource a, resource b)
 
     Computes the inverse of a modulo b  
int gmp_jacobi(resource a, resource b)
 
     Computes Jacobi symbol  
int gmp_legendre(resource a, resource b)
 
     Computes Legendre symbol  
resource gmp_mod(resource a, resource b)
 
     Computes a modulo b  
resource gmp_mul(resource a, resource b)
 
     Multiply a and b  
resource gmp_neg(resource a)
 
     Negates a number  
resource gmp_or(resource a, resource b)
 
     Calculates logical OR of a and b  
bool gmp_perfect_square(resource a)
 
     Checks if a is an exact square  
int gmp_popcount(resource a)
 
     Calculates the population count of a  
resource gmp_pow(resource base, int exp)
 
     Raise base to power exp  
resource gmp_powm(resource base, resource exp, resource mod)
 
     Raise base to power exp and take result modulo mod  
int gmp_prob_prime(resource a[, int reps])
 
     Checks if a is "probably prime"  
resource gmp_random([int limiter])
 
     Gets random number  
int gmp_scan0(resource a, int start)
 
     Finds first zero bit  
int gmp_scan1(resource a, int start)
 
     Finds first non-zero bit  
void gmp_setbit(resource &a, int index[, bool set_clear])
 
     Sets or clear bit in a  
int gmp_sign(resource a)
 
     Gets the sign of the number  
resource gmp_sqrt(resource a)
 
     Takes integer part of square root of a  
array gmp_sqrtrem(resource a)
 
     Square root with remainder  
string gmp_strval(resource gmpnumber [, int base])
 
     Gets string representation of GMP number   
resource gmp_sub(resource a, resource b)
 
     Subtract b from a  
resource gmp_xor(resource a, resource b)
 
     Calculates logical exclusive OR of a and b  
# php4/ext/hyperwave/hw.c
string hw_array2objrec(array objarr)
 
     Returns object record of object array  
void hw_changeobject(int link, int objid, array attributes)
 
     Changes attributes of an object (obsolete)  
array hw_children(int link, int objid)
 
     Returns array of children object ids  
array hw_childrenobj(int link, int objid)
 
     Returns array of children object records  
void hw_close(int link)
 
     Close connection to Hyperwave server  
int hw_connect(string host, int port [string username [, string password]])
 
     Connect to the Hyperwave server  
void hw_connection_info(int link)
 
     Prints information about the connection to Hyperwave server  
void hw_cp(int link, array objrec, int dest)
 
     Copies object  
void hw_deleteobject(int link, int objid)
 
     Deletes object  
int hw_docbyanchor(int link, int anchorid)
 
     Returns objid of document belonging to anchorid  
array hw_docbyanchorobj(int link, int anchorid)
 
     Returns object record of document belonging to anchorid  
string hw_document_attributes(hwdoc doc)
 
     Returns object record of document  
string hw_document_bodytag(hwdoc doc [, string prefix])
 
     Return bodytag prefixed by prefix  
string hw_document_content(hwdoc doc)
 
     Returns content of document  
int hw_document_setcontent(hwdoc doc, string content)
 
     Sets/replaces content of document  
int hw_document_size(hwdoc doc)
 
     Returns size of document  
string hw_documentattributes(hwdoc doc)
 
     An alias for hw_document_attributes  
string hw_documentbodytag(hwdoc doc [, string prefix])
 
     An alias for hw_document_bodytag  
int hw_documentsize(hwdoc doc)
 
     An alias for hw_document_size  
string hw_dummy(int link, int id, int msgid)
 
     Hyperwave dummy function  
void hw_edittext(int link, hwdoc doc)
 
     Modifies text document  
int hw_error(int link)
 
     Returns last error number  
string hw_errormsg(int link)
 
     Returns last error message  
void hw_free_document(hwdoc doc)
 
     Frees memory of document  
array hw_getanchors(int link, int objid)
 
     Return all anchors of object  
array hw_getanchorsobj(int link, int objid)
 
     Return all object records of anchors of object  
string hw_getandlock(int link, int objid)
 
     Returns object record and locks object  
hwdoc hw_getcgi(int link, int objid)
 
     Returns the output of a CGI script  
array hw_getchildcoll(int link, int objid)
 
     Returns array of child collection object ids  
array hw_getchildcollobj(int link, int objid)
 
     Returns array of child collection object records  
array hw_getchilddoccoll(int link, int objid)
 
     Returns all children ids which are documents  
array hw_getchilddoccollobj(int link, int objid)
 
     Returns all children object records which are documents  
string hw_getobject(int link, int objid [, string query])
 
     Returns object record   
array hw_getobjectbyftquery(int link, string query, int maxhits)
 
     Search for query as fulltext and return maxhits objids  
array hw_getobjectbyftquerycoll(int link, int collid, string query, int maxhits)
 
     Search for fulltext query in collection and return maxhits objids  
array hw_getobjectbyftquerycollobj(int link, int collid, string query, int maxhits)
 
     Search for fulltext query in collection and return maxhits object records  
array hw_getobjectbyftqueryobj(int link, string query, int maxhits)
 
     Search for query as fulltext and return maxhits object records  
array hw_getobjectbyquery(int link, string query, int maxhits)
 
     Search for query and return maxhits objids  
array hw_getobjectbyquerycoll(int link, int collid, string query, int maxhits)
 
     Search for query in collection and return maxhits objids  
array hw_getobjectbyquerycollobj(int link, int collid, string query, int maxhits)
 
     Search for query in collection and return maxhits object records  
array hw_getobjectbyqueryobj(int link, string query, int maxhits)
 
     Search for query and return maxhits object records  
array hw_getparents(int link, int objid)
 
     Returns array of parent object ids  
array hw_getparentsobj(int link, int objid)
 
     Returns array of parent object records  
string hw_getrellink(int link, int rootid, int sourceid, int destid)
 
     Get link from source to dest relative to rootid  
int hw_getremote(int link, int objid)
 
     Returns the content of a remote document  
[array|int] hw_getremotechildren(int link, string objrec)
 
     Returns the remote document or an array of object records  
int hw_getsrcbydestobj(int link, int destid)
 
     Returns object id of source docuent by destination anchor  
hwdoc hw_gettext(int link, int objid [, int rootid])
 
     Returns text document. Links are relative to rootid if given  
string hw_getusername(int link)
 
     Returns the current user name  
void hw_identify(int link, string username, string password)
 
     Identifies at Hyperwave server  
array hw_incollections(int link, array objids, array collids, int para)
 
     Returns object ids which are in collections  
void hw_info(int link)
 
     Outputs info string  
void hw_inscoll(int link, int parentid, array objarr)
 
     Inserts collection  
void hw_insdoc(int link, int parentid, string objrec [, string text])
 
     Inserts document  
string hw_insertanchors(int hwdoc, array anchorecs, array dest [, array urlprefixes])
 
     Inserts only anchors into text  
void hw_insertdocument(int link, int parentid, hwdoc doc) 
 
     Insert new document  
int hw_insertobject(int link, string objrec, string parms)
 
     Inserts an object  
int hw_mapid(int link, int serverid, int destid)
 
     Returns virtual object id of document on remote Hyperwave server  
void hw_modifyobject(int link, int objid, array remattributes, array addattributes [, int mode])
 
     Modifies attributes of an object  
void hw_mv(int link, array objrec, int from, int dest)
 
     Moves object  
hwdoc hw_new_document(string objrec, string data, int size)
 
     Create a new document  
hwdoc hw_new_document_from_file(string objrec, string filename)
 
     Create a new document from a file  
array hw_objrec2array(string objrec, [array format])
 
     Returns object array of object record  
void hw_output_document(hwdoc doc)
 
     Prints document  
void hw_outputdocument(hwdoc doc)
 
     An alias for hw_output_document  
int hw_pconnect(string host, int port [, string username [, string password]])
 
     Connect to the Hyperwave server persistent  
hwdoc hw_pipecgi(int link, int objid)
 
     Returns output of CGI script  
hwdoc hw_pipedocument(int link, int objid [, array urlprefixes])
 
     Returns document with links inserted. Optionally a array with five urlprefixes may be passed, which will be inserted for the different types of anchors. This should be a named array with the following keys: HW_DEFAULT_LINK, HW_IMAGE_LINK, HW_BACKGROUND_LINK, HW_INTAG_LINK, and HW_APPLET_LINK  
hwdoc hw_pipedocument(int link, int objid)
 
     Returns document  
int hw_root(void)
 
     Returns object id of root collection  
void hw_setlinkroot(int link, int rootid)
 
     Set the id to which links are calculated  
string hw_stat(int link)
 
     Returns status string  
void hw_unlock(int link, int objid)
 
     Unlocks object  
array hw_who(int link)
 
     Returns names and info of users loged in  
# php4/ext/iconv/iconv.c
 
 
string iconv(string in_charset, string out_charset, string str)
 
     Returns str converted to the out_charset character set  
array iconv_get_encoding([string type])
 
     Get internal encoding and output encoding for ob_iconv_handler()  
bool iconv_set_encoding(string type, string charset)
 
     Sets internal encoding and output encoding for ob_iconv_handler()  
string ob_iconv_handler(string contents, int status)
 
     Returns str in output buffer converted to the iconv.output_encoding character set  
# php4/ext/imap/php_imap.c
string imap_8bit(string text)
 
     Convert an 8-bit string to a quoted-printable string  
array imap_alerts(void)
 
     Returns an array of all IMAP alerts that have been generated since the last page load or since the last imap_alerts() call, whichever came last. The alert stack is cleared after imap_alerts() is called.  
bool imap_append(resource stream_id, string folder, string message [, string options])
 
     Append a new message to a specified mailbox  
string imap_base64(string text)
 
     Decode BASE64 encoded text  
string imap_binary(string text)
 
     Convert an 8bit string to a base64 string  
string imap_body(resource stream_id, int msg_no [, int options])
 
     Read the message body  
object imap_bodystruct(resource stream_id, int msg_no, int section)
 
     Read the structure of a specified body section of a specific message  
object imap_check(resource stream_id)
 
     Get mailbox properties  
bool imap_clearflag_full(resource stream_id, string sequence, string flag [, int options])
 
     Clears flags on messages  
bool imap_close(resource stream_id [, int options])
 
     Close an IMAP stream  
bool imap_createmailbox(resource stream_id, string mailbox)
 
     Create a new mailbox  
bool imap_delete(resource stream_id, int msg_no [, int options])
 
     Mark a message for deletion  
bool imap_deletemailbox(resource stream_id, string mailbox)
 
     Delete a mailbox  
array imap_errors(void)
 
     Returns an array of all IMAP errors generated since the last page load, or since the last imap_errors() call, whichever came last. The error stack is cleared after imap_errors() is called.  
bool imap_expunge(resource stream_id)
 
     Permanently delete all messages marked for deletion  
array imap_fetch_overview(resource stream_id, int msg_no [, int options])
 
     Read an overview of the information in the headers of the given message sequence  
string imap_fetchbody(resource stream_id, int msg_no, int section [, int options])
 
     Get a specific body section  
string imap_fetchheader(resource stream_id, int msg_no [, int options])
 
     Get the full unfiltered header for a message  
object imap_fetchstructure(resource stream_id, int msg_no [, int options])
 
     Read the full structure of a message  
array imap_get_quota(resource stream_id, string qroot)
 
  	Returns the quota set to the mailbox account qroot  
array imap_get_quotaroot(resource stream_id, string mbox)
 
  	Returns the quota set to the mailbox account mbox  
array imap_getmailboxes(resource stream_id, string ref, string pattern)
 
     Reads the list of mailboxes and returns a full array of objects containing name, attributes, and delimiter  
array imap_getsubscribed(resource stream_id, string ref, string pattern)
 
     Return a list of subscribed mailboxes, in the same format as imap_getmailboxes()  
object imap_headerinfo(resource stream_id, int msg_no [, int from_length [, int subject_length [, string default_host]]])
 
     Read the headers of the message  
array imap_headers(resource stream_id)
 
     Returns headers for all messages in a mailbox  
string imap_last_error(void) 
 
     Returns the last error that was generated by an IMAP function. The error stack is NOT cleared after this call.  
array imap_list(resource stream_id, string ref, string pattern)
 
     Read the list of mailboxes  
array imap_lsub(resource stream_id, string ref, string pattern)
 
     Return a list of subscribed mailboxes  
int imap_mail(string to, string subject, string message [, string additional_headers [, string cc [, string bcc [, string rpath]]]])
 
     Send an email message  
string imap_mail_compose(array envelope, array body)
 
     Create a MIME message based on given envelope and body sections  
bool imap_mail_copy(resource stream_id, int msg_no, string mailbox [, int options])
 
     Copy specified message to a mailbox  
bool imap_mail_move(resource stream_id, int msg_no, string mailbox [, int options])
 
     Move specified message to a mailbox  
object imap_mailboxmsginfo(resource stream_id)
 
     Returns info about the current mailbox  
array imap_mime_header_decode(string str)
 
     Decode mime header element in accordance with RFC 2047 and return array of objects containing 'charset' encoding and decoded 'text'  
int imap_msgno(resource stream_id, int unique_msg_id)
 
     Get the sequence number associated with a UID  
int imap_num_msg(resource stream_id)
 
     Gives the number of messages in the current mailbox  
int imap_num_recent(resource stream_id)
 
     Gives the number of recent messages in current mailbox  
resource imap_open(string mailbox, string user, string password [, int options])
 
     Open an IMAP stream to a mailbox  
bool imap_ping(resource stream_id)
 
     Check if the IMAP stream is still active  
string imap_qprint(string text)
 
     Convert a quoted-printable string to an 8-bit string  
bool imap_renamemailbox(resource stream_id, string old_name, string new_name)
 
     Rename a mailbox  
bool imap_reopen(resource stream_id, string mailbox [, int options])
 
     Reopen an IMAP stream to a new mailbox  
array imap_rfc822_parse_adrlist(string address_string, string default_host)
 
     Parses an address string  
object imap_rfc822_parse_headers(string headers [, string default_host])
 
     Parse a set of mail headers contained in a string, and return an object similar to imap_headerinfo()  
string imap_rfc822_write_address(string mailbox, string host, string personal)
 
     Returns a properly formatted email address given the mailbox, host, and personal info  
array imap_scan(resource stream_id, string ref, string pattern, string content)
 
     Read list of mailboxes containing a certain string  
array imap_search(resource stream_id, string criteria [, int options [, string charset]])
 
     Return a list of messages matching the given criteria  
bool imap_set_quota(resource stream_id, string qroot, int mailbox_size)
 
     Will set the quota for qroot mailbox  
bool imap_setacl(resource stream_id, string mailbox, string id, string rights)
 
  	Sets the ACL for a given mailbox  
bool imap_setflag_full(resource stream_id, string sequence, string flag [, int options])
 
     Sets flags on messages  
array imap_sort(resource stream_id, int criteria, int reverse [, int options [, string search_criteria [, string charset]]])
 
     Sort an array of message headers, optionally including only messages that meet specified criteria.  
object imap_status(resource stream_id, string mailbox, int options)
 
     Get status info from a mailbox  
bool imap_subscribe(resource stream_id, string mailbox)
 
     Subscribe to a mailbox  
array imap_thread(resource stream_id [, int options])
 
     Return threaded by REFERENCES tree  
mixed imap_timeout(int timeout_type [, int timeout])
 
     Set or fetch imap timeout  
int imap_uid(resource stream_id, int msg_no)
 
     Get the unique message id associated with a standard sequential message number  
bool imap_undelete(resource stream_id, int msg_no)
 
     Remove the delete flag from a message  
bool imap_unsubscribe(resource stream_id, string mailbox)
 
     Unsubscribe from a mailbox  
string imap_utf7_decode(string buf)
 
     Decode a modified UTF-7 string  
string imap_utf7_encode(string buf)
 
     Encode a string in modified UTF-7  
string imap_utf8(string mime_encoded_text)
 
     Convert a mime-encoded text to UTF-8  
# php4/ext/informix/ifx.ec
int ifx_affected_rows(resource resultid)
 
     Returns the number of rows affected by query identified by resultid  
bool ifx_blobinfile_mode(int mode)
 
     Sets the default blob-mode for all select-queries   
bool ifx_byteasvarchar(int mode)
 
     Sets the default byte-mode for all select-queries   
bool ifx_close([resource connid])
 
     Close informix connection  
resource ifx_connect([string database [, string userid [, string password]]])
 
     Connects to database using userid/password, returns connection id  
int ifx_copy_blob(int bid)
 
     Duplicates the given blob-object  
int ifx_create_blob(int type, int mode, string param)
 
     Creates a blob-object  
int ifx_create_char(string param)
 
     Creates a char-object  
bool ifx_do(resource resultid)
 
     Executes a previously prepared query or opens a cursor for it  
string ifx_error([resource connection_id])
 
     Returns the Informix error codes (SQLSTATE & SQLCODE)  
string ifx_errormsg([int errorcode])
 
     Returns the Informix errormessage associated with   
array ifx_fetch_row(resource resultid [, mixed position])
 
     Fetches the next row or <position> row if using a scroll cursor  
array ifx_fieldproperties(resource resultid)
 
     Returns an associative for query <resultid> array with fieldnames as key  
array ifx_fieldtypes(resource resultid)
 
     Returns an associative array with fieldnames as key for query <resultid>  
int ifx_free_blob(int bid)
 
     Deletes the blob-object  
bool ifx_free_char(int bid)
 
     Deletes the char-object  
bool ifx_free_result(resource resultid)
 
     Releases resources for query associated with resultid  
string ifx_get_blob(int bid)
 
     Returns the content of the blob-object  
string ifx_get_char(int bid)
 
     Returns the content of the char-object  
array ifx_getsqlca(resource resultid)
 
     Returns the sqlerrd[] fields of the sqlca struct for query resultid  
int ifx_htmltbl_result(resource resultid [, string htmltableoptions])
 
     Formats all rows of the resultid query into a html table  
bool ifx_nullformat(int mode)
 
     Sets the default return value of a NULL-value on a fetch-row   
int ifx_num_fields(resource resultid)
 
     Returns the number of columns in query resultid  
int ifx_num_rows(resource resultid)
 
     Returns the number of rows already fetched for query identified by resultid  
resource ifx_pconnect([string database [, string userid [, string password]]])
 
     Connects to database using userid/password, returns connection id  
resource ifx_prepare(string query, resource connid [, int cursortype] [, array idarray])
 
     Prepare a query on a given connection  
resource ifx_query(string query, resource connid [, int cursortype] [, array idarray])
 
     Perform a query on a given connection  
bool ifx_textasvarchar(int mode)
 
     Sets the default text-mode for all select-queries  
int ifx_update_blob(int bid, string content)
 
     Updates the content of the blob-object  
bool ifx_update_char(int bid, string content)
 
     Updates the content of the char-object  
bool ifxus_close_slob(int bid)
 
     Deletes the slob-object  
int ifxus_create_slob(int mode)
 
     Creates a slob-object and opens it  
bool ifxus_free_slob(int bid)
 
     Deletes the slob-object  
int ifxus_open_slob(int bid, int mode)
 
     Opens an slob-object  
string ifxus_read_slob(int bid, int nbytes)
 
     Reads nbytes of the slob-object  
int ifxus_seek_slob(int bid, int mode, long offset)
 
     Sets the current file or seek position of an open slob-object  
int ifxus_tell_slob(int bid)
 
     Returns the current file or seek position of an open slob-object  
int ifxus_write_slob(int bid, string content)
 
     Writes a string into the slob-object  
# php4/ext/ingres_ii/ii.c
bool ingres_autocommit([resource link])
 
     Switch autocommit on or off  
bool ingres_close([resource link])
 
     Close an Ingres II database connection  
bool ingres_commit([resource link])
 
     Commit a transaction  
resource ingres_connect([string database [, string username [, string password]]])
 
     Open a connection to an Ingres II database the syntax of database is [node_id::]dbname[/svr_class]  
array ingres_fetch_array([int result_type [, resource link]])
 
     Fetch a row of result into an array result_type can be II_NUM for enumerated array, II_ASSOC for associative array, or II_BOTH (default)  
array ingres_fetch_object([int result_type [, resource link]])
 
     Fetch a row of result into an object result_type can be II_NUM for enumerated object, II_ASSOC for associative object, or II_BOTH (default)  
array ingres_fetch_row([resource link])
 
     Fetch a row of result into an enumerated array  
string ingres_field_length(int index [, resource link])
 
     Return the length of a field in a query result index must be >0 and <= ingres_num_fields()  
string ingres_field_name(int index [, resource link])
 
     Return the name of a field in a query result index must be >0 and <= ingres_num_fields()  
string ingres_field_nullable(int index [, resource link])
 
     Return true if the field is nullable and false otherwise index must be >0 and <= ingres_num_fields()  
string ingres_field_precision(int index [, resource link])
 
     Return the precision of a field in a query result index must be >0 and <= ingres_num_fields()  
string ingres_field_scale(int index [, resource link])
 
     Return the scale of a field in a query result index must be >0 and <= ingres_num_fields()  
string ingres_field_type(int index [, resource link])
 
     Return the type of a field in a query result index must be >0 and <= ingres_num_fields()  
int ingres_num_fields([resource link])
 
     Return the number of fields returned by the last query  
int ingres_num_rows([resource link])
 
     Return the number of rows affected/returned by the last query  
resource ingres_pconnect([string database [, string username [, string password]]])
 
     Open a persistent connection to an Ingres II database the syntax of database is [node_id::]dbname[/svr_class]  
bool ingres_query(string query [, resource link])
 
     Send a SQL query to Ingres II  
bool ingres_rollback([resource link])
 
     Roll back a transaction  
# php4/ext/interbase/interbase.c
bool ibase_add_user(string server, string dba_user_name, string dba_password, string user_name, string password [, string first_name [, string middle_name [, string last_name]]])
 
     Add an user to security database (only for IB6 or later)  
bool ibase_blob_add(int blob_id, string data)
 
     Add data into created blob  
bool ibase_blob_cancel(int blob_id)
 
     Cancel creating blob  
bool ibase_blob_close(int blob_id)
 
     Close blob  
int ibase_blob_create([resource link_identifier])
 
     Create blob for adding data  
bool ibase_blob_echo(string blob_id_str)
 
     Output blob contents to browser  
string ibase_blob_get(int blob_id, int len)
 
     Get len bytes data from open blob  
string ibase_blob_import([resource link_identifier, ] int file_id)
 
     Create blob, copy file in it, and close it  
object ibase_blob_info(string blob_id_str)
 
     Return blob length and other useful info  
int ibase_blob_open(string blob_id)
 
     Open blob for retriving data parts  
bool ibase_close([resource link_identifier])
 
     Close an InterBase connection  
bool ibase_commit(resource link_identifier)
 
     Commit transaction  
resource ibase_connect(string database [, string username [, string password [, string charset [, int buffers [, int dialect [, string role]]]]]])
 
     Open a connection to an InterBase database  
bool ibase_delete_user(string server, string dba_user_name, string dba_password, string username)
 
     Delete an user from security database (only for IB6 or later)  
string ibase_errmsg(void) 
 
     Return error message  
resource ibase_execute(resource query [, int bind_args [, int ...]])
 
     Execute a previously prepared query  
array ibase_fetch_assoc(resource result [, int blob_flag])
 
     Fetch a row  from the results of a query  
object ibase_fetch_object(resource result [, int blob_flag])
 
     Fetch a object from the results of a query  
array ibase_fetch_row(resource result [, int blob_flag])
 
     Fetch a row  from the results of a query  
array ibase_field_info(resource result, int field_number)
 
     Get information about a field  
bool ibase_free_query(resource query)
 
     Free memory used by a query  
bool ibase_free_result(resource result)
 
     Free the memory used by a result  
bool ibase_modify_user(string server, string dba_user_name, string dba_password, string user_name, string password [, string first_name [, string middle_name [, string last_name]]])
 
     Modify an user in security database (only for IB6 or later)  
int ibase_num_fields(resource result)
 
     Get the number of fields in result  
resource ibase_pconnect(string database [, string username [, string password [, string charset [, int buffers [, int dialect [, string role]]]]]])
 
     Open a persistent connection to an InterBase database  
resource ibase_prepare([resource link_identifier, ] string query)
 
     Prepare a query for later execution  
resource ibase_query([resource link_identifier [, string query [, int bind_args]]])
 
     Execute a query  
bool ibase_rollback(resource link_identifier)
 
     Rollback transaction  
int ibase_timefmt(string format)
 
     Sets the format of timestamp, date and time columns returned from queries  
resource ibase_trans([int trans_args [, resource link_identifier]])
 
     Start transaction  
# php4/ext/ircg/ircg.c
bool ircg_channel_mode(int connection, string channel, string mode_spec, string nick)
 
     Sets channel mode flags for user  
bool ircg_disconnect(int connection, string reason)
 
     Terminate IRC connection  
array ircg_eval_ecmascript_params(string params)
 
     Decodes a list of JS-encoded parameters into a native array  
array ircg_fetch_error_msg(int connection)
 
     Returns the error from previous ircg operation  
string ircg_get_username(int connection)
 
     Gets username for connection  
string ircg_html_encode(string html_text)
 
     Encodes HTML preserving output  
bool ircg_ignore_add(int connection, string nick)
 
     Adds a user to your ignore list on a server  
bool ircg_ignore_del(int connection, string nick)
 
     Removes a user from your ignore list  
bool ircg_invite(int connection, string channel, string nickname)
 
     INVITEs nickname to channel  
bool ircg_is_conn_alive(int connection)
 
     Checks connection status  
bool ircg_join(int connection, string channel [, string chan-key])
 
     Joins a channel on a connected server  
bool ircg_kick(int connection, string channel, string nick, string reason)
 
     Kicks user from channel  
bool ircg_list(int connection, string channel)
 
     List topic/user count of channel(s)  
bool ircg_lookup_format_messages(string name)
 
     Selects a set of format strings for display of IRC messages  
bool ircg_lusers(int connection)
 
     IRC network statistics  
bool ircg_msg(int connection, string recipient, string message [,bool loop-suppress])
 
     Delivers a message to the IRC network  
bool ircg_names( int connection, string channel [, string target])
 
     Queries visible usernames  
bool ircg_nick(int connection, string newnick)
 
     Changes the nickname  
string ircg_nickname_escape(string nick) 
 
     Escapes special characters in nickname to be IRC-compliant  
string ircg_nickname_unescape(string nick)
 
     Decodes encoded nickname  
bool ircg_notice(int connection, string recipient, string message)
 
     Sends a one-way communication NOTICE to a target  
bool ircg_oper(int connection, string name, string password)
 
     Elevates privileges to IRC OPER  
bool ircg_part(int connection, string channel)
 
     Leaves a channel  
int ircg_pconnect(string username [, string server [, int port [, string format-msg-set-name [, array ctcp-set [, array user-details [, bool bailout-on-trivial]]]]]])
 
     Create a persistent IRC connection  
bool ircg_register_format_messages(string name, array messages)
 
     Registers a set of format strings for display of IRC messages  
bool ircg_set_current(int connection)
 
     Sets current connection for output  
bool ircg_set_file(int connection, string path)
 
     Sets logfile for connection  
bool ircg_set_on_die(int connection, string host, int port, string data) 
 
     Sets hostaction to be executed when connection dies  
bool ircg_topic(int connection, string channel, string topic)
 
     Sets topic for channel  
bool ircg_who(int connection, string mask [, bool ops_only])
 
     Queries server for WHO information  
bool ircg_whois(int connection, string nick)
 
     Queries user information for nick on server  
# php4/ext/java/java.c
void java_last_exception_clear(void)
 
  	 Clear last java extension  
object java_last_exception_get(void)
 
  	 Get last Java exception  
# php4/ext/ldap/ldap.c
string ldap_8859_to_t61(string value)
 
     Translate 8859 characters to t61 characters  
bool ldap_add(resource link, string dn, array entry)
 
     Add entries to LDAP directory  
bool ldap_bind(resource link [, string dn, string password])
 
     Bind to LDAP directory  
bool ldap_compare(resource link, string dn, string attr, string value)
 
     Determine if an entry has a specific value for one of its attributes  
resource ldap_connect([string host [, int port]])
 
     Connect to an LDAP server  
int ldap_count_entries(resource link, resource result)
 
     Count the number of entries in a search result  
bool ldap_delete(resource link, string dn)
 
     Delete an entry from a directory  
string ldap_dn2ufn(string dn)
 
     Convert DN to User Friendly Naming format  
string ldap_err2str(int errno)
 
     Convert error number to error string  
int ldap_errno(resource link)
 
     Get the current ldap error number  
string ldap_error(resource link)
 
     Get the current ldap error string  
array ldap_explode_dn(string dn, int with_attrib)
 
     Splits DN into its component parts  
string ldap_first_attribute(resource link, resource result_entry, int ber)
 
     Return first attribute  
resource ldap_first_entry(resource link, resource result)
 
     Return first result id  
resource ldap_first_reference(resource link, resource result)
 
     Return first reference  
bool ldap_free_result(resource result)
 
     Free result memory  
array ldap_get_attributes(resource link, resource result_entry)
 
     Get attributes from a search result entry  
string ldap_get_dn(resource link, resource result_entry)
 
     Get the DN of a result entry  
array ldap_get_entries(resource link, resource result)
 
     Get all result entries  
bool ldap_get_option(resource link, int option, mixed retval)
 
     Get the current value of various session-wide parameters  
array ldap_get_values(resource link, resource result_entry, string attribute)
 
     Get all values from a result entry  
array ldap_get_values_len(resource link, resource result_entry, string attribute)
 
     Get all values with lengths from a result entry  
resource ldap_list(resource link, string base_dn, string filter [, array attrs [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]])
 
     Single-level search  
bool ldap_mod_add(resource link, string dn, array entry)
 
     Add attribute values to current  
bool ldap_mod_del(resource link, string dn, array entry)
 
     Delete attribute values  
bool ldap_mod_replace(resource link, string dn, array entry)
 
     Replace attribute values with new ones  
string ldap_next_attribute(resource link, resource result_entry, resource ber)
 
     Get the next attribute in result  
resource ldap_next_entry(resource link, resource result_entry)
 
     Get next result entry  
resource ldap_next_reference(resource link, resource reference_entry)
 
     Get next reference  
bool ldap_parse_reference(resource link, resource reference_entry, array referrals)
 
     Extract information from reference entry  
bool ldap_parse_result(resource link, resource result, int errcode, string matcheddn, string errmsg, array referrals)
 
     Extract information from result  
resource ldap_read(resource link, string base_dn, string filter [, array attrs [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]])
 
     Read an entry  
bool ldap_rename(resource link, string dn, string newrdn, string newparent, bool deleteoldrdn);
 
     Modify the name of an entry  
resource ldap_search(resource link, string base_dn, string filter [, array attrs [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]])
 
     Search LDAP tree under base_dn  
bool ldap_set_option(resource link, int option, mixed newval)
 
     Set the value of various session-wide parameters  
bool ldap_set_rebind_proc(resource link, string callback)
 
     Set a callback function to do re-binds on referral chasing.  
bool ldap_sort(resource link, resource result, string sortfilter)
 
     Sort LDAP result entries  
bool ldap_start_tls(resource link)
 
     Start TLS  
string ldap_t61_to_8859(string value)
 
     Translate t61 characters to 8859 characters  
bool ldap_unbind(resource link)
 
     Unbind from LDAP directory  
# php4/ext/mbstring/mbstring.c
string mb_convert_case(string sourcestring, int mode [, string encoding])
 
     Returns a case-folded version of sourcestring  
string mb_convert_encoding(string str, string to-encoding [, mixed from-encoding])
 
     Returns converted string in desired encoding  
string mb_convert_kana(string str [, string option] [, string encoding])
 
     Conversion between full-width character and half-width character (Japanese)  
string mb_convert_variables(string to-encoding, mixed from-encoding [, mixed ...])
 
     Converts the string resource in variables to desired encoding  
string mb_decode_mimeheader(string string)
 
     Decodes the MIME "encoded-word" in the string  
string mb_decode_numericentity(string string, array convmap [, string encoding])
 
     Converts HTML numeric entities to character code  
string mb_detect_encoding(string str [, mixed encoding_list [, bool strict]])
 
     Encodings of the given string is returned (as a string)  
bool|array mb_detect_order([mixed encoding-list])
 
     Sets the current detect_order or Return the current detect_order as a array  
string mb_encode_mimeheader(string str [, string charset [, string transfer-encoding [, string linefeed]]])
 
     Converts the string to MIME "encoded-word" in the format of =?charset?(B|Q)?encoded_string?=  
string mb_encode_numericentity(string string, array convmap [, string encoding])
 
     Converts specified characters to HTML numeric entities  
string mb_get_info([string type])
 
     Returns the current settings of mbstring  
mixed mb_http_input([string type])
 
     Returns the input encoding  
string mb_http_output([string encoding])
 
     Sets the current output_encoding or returns the current output_encoding as a string  
string mb_internal_encoding([string encoding])
 
     Sets the current internal encoding or Returns the current internal encoding as a string  
string mb_language([string language])
 
     Sets the current language or Returns the current language as a string  
string mb_output_handler(string contents, int status)
 
     Returns string in output buffer converted to the http_output encoding  
bool mb_parse_str(string encoded_string [, array result])
 
     Parses GET/POST/COOKIE data and sets global variables  
string mb_preferred_mime_name(string encoding)
 
     Return the preferred MIME name (charset) as a string  
int mb_send_mail(string to, string subject, string message [, string additional_headers [, string additional_parameters]])
 
   *  Sends an email message with MIME scheme
    
string mb_strcut(string str, int start [, int length [, string encoding]])
 
     Returns part of a string  
string mb_strimwidth(string str, int start, int width [, string trimmarker [, string encoding]])
 
     Trim the string in terminal width  
int mb_strlen(string str [, string encoding])
 
     Get character numbers of a string  
int mb_strpos(string haystack, string needle [, int offset [, string encoding]])
 
     Find position of first occurrence of a string within another  
int mb_strrpos(string haystack, string needle [, string encoding])
 
     Find the last occurrence of a character in a string within another  
string mb_strtolower(string sourcestring [, string encoding])
 
   *  Returns a lowercased version of sourcestring
    
string mb_strtoupper(string sourcestring [, string encoding])
 
   *  Returns a uppercased version of sourcestring
    
int mb_strwidth(string str [, string encoding])
 
     Gets terminal width of a string  
mixed mb_substitute_character([mixed substchar])
 
     Sets the current substitute_character or returns the current substitute_character  
string mb_substr(string str, int start [, int length [, string encoding]])
 
     Returns part of a string  
int mb_substr_count(string haystack, string needle [, string encoding])
 
     Count the number of substring occurrences  
# php4/ext/mbstring/php_mbregex.c
int mb_ereg(string pattern, string string [, array registers])
 
     Regular expression match for multibyte string  
bool mb_ereg_match(string pattern, string string [,string option])
 
     Regular expression match for multibyte string  
string mb_ereg_replace(string pattern, string replacement, string string [, string option])
 
     Replace regular expression for multibyte string  
bool mb_ereg_search([string pattern[, string option]])
 
     Regular expression search for multibyte string  
int mb_ereg_search_getpos(void)
 
     Get search start position  
array mb_ereg_search_getregs(void)
 
     Get matched substring of the last time  
bool mb_ereg_search_init(string string [, string pattern[, string option]])
 
     Initialize string and regular expression for search.  
array mb_ereg_search_pos([string pattern[, string option]])
 
     Regular expression search for multibyte string  
array mb_ereg_search_regs([string pattern[, string option]])
 
     Regular expression search for multibyte string  
bool mb_ereg_search_setpos(int position)
 
     Set search start position  
int mb_eregi(string pattern, string string [, array registers])
 
     Case-insensitive regular expression match for multibyte string  
string mb_eregi_replace(string pattern, string replacement, string string)
 
     Case insensitive replace regular expression for multibyte string  
string mb_regex_encoding([string encoding])
 
     Returns the current encoding for regex as a string.  
string mb_regex_set_options([string options])
 
     Set or get the default options for mbregex functions  
array mb_split(string pattern, string string [, int limit])
 
     split multibyte string into array by regular expression  
# php4/ext/mcal/php_mcal.c
string mcal_append_event(int stream_id)
 
     Append a new event to the calendar stream  
int mcal_close(int stream_id [, int options])
 
     Close an MCAL stream  
string mcal_create_calendar(int stream_id, string calendar)
 
     Create a new calendar  
int mcal_date_compare(int ayear, int amonth, int aday, int byear, int bmonth, int bday)
 
     Returns <0, 0, >0 if a<b, a==b, a>b respectively  
bool mcal_date_valid(int year, int month, int day)
 
     Returns true if the date is a valid date  
int mcal_day_of_week(int year, int month, int day)
 
     Returns the day of the week of the given date  
int mcal_day_of_year(int year, int month, int day)
 
     Returns the day of the year of the given date  
int mcal_days_in_month(int month, bool leap_year)
 
     Returns the number of days in the given month, needs to know if the year is a leap year or not  
string mcal_delete_calendar(int stream_id, string calendar)
 
     Delete calendar  
string mcal_delete_event(int stream_id, int event_id)
 
     Delete an event  
string mcal_event_add_attribute(int stream_id, string attribute, string value)
 
     Add an attribute and value to an event  
int mcal_event_init(int stream_id)
 
     Initialize a streams global event  
int mcal_event_set_alarm(int stream_id, int alarm)
 
     Add an alarm to the streams global event  
string mcal_event_set_category(int stream_id, string category)
 
     Attach a category to an event  
int mcal_event_set_class(int stream_id, int class)
 
     Add an class to the streams global event  
string mcal_event_set_description(int stream_id, string description)
 
     Attach a description to an event  
string mcal_event_set_end(int stream_id, int year,int month, int day [[[, int hour], int min], int sec])
 
     Attach an end datetime to an event  
string mcal_event_set_recur_daily(int stream_id, int year, int month, int day, int interval)
 
     Create a daily recurrence  
string mcal_event_set_recur_monthly_mday(int stream_id, int year, int month, int day, int interval)
 
     Create a monthly by day recurrence  
string mcal_event_set_recur_monthly_wday(int stream_id, int year, int month, int day, int interval)
 
     Create a monthly by week recurrence  
string mcal_event_set_recur_none(int stream_id)
 
     Create a daily recurrence  
string mcal_event_set_recur_weekly(int stream_id, int year, int month, int day, int interval, int weekdays)
 
     Create a weekly recurrence  
string mcal_event_set_recur_yearly(int stream_id, int year, int month, int day, int interval)
 
     Create a yearly recurrence  
string mcal_event_set_start(int stream_id, int year,int month, int day [[[, int hour], int min], int sec])
 
     Attach a start datetime to an event  
string mcal_event_set_title(int stream_id, string title)
 
     Attach a title to an event  
int mcal_expunge(int stream_id)
 
     Delete all events marked for deletion  
object mcal_fetch_current_stream_event(int stream_id)
 
     Fetch the current event stored in the stream's event structure  
int mcal_fetch_event(int stream_id, int eventid [, int options])
 
     Fetch an event  
bool mcal_is_leap_year(int year)
 
     Returns true if year is a leap year, false if not  
bool mcal_list_alarms(int stream_id, int year, int month, int day, int hour, int min, int sec)
 
     List alarms for a given time  
array mcal_list_events(int stream_id, object begindate [, object enddate])
 
     Returns list of UIDs for that day or range of days  
object mcal_next_recurrence(int stream_id, int weekstart, array next)
 
     Returns an object filled with the next date the event occurs, on or after the supplied date.  Returns empty date field if event does not occur or something is invalid.  
int mcal_open(string calendar, string user, string password [, int options])
 
     Open an MCAL stream to a calendar  
string mcal_popen(string calendar, string user, string password [, int options])
 
     Open a persistent MCAL stream to a calendar  
string mcal_rename_calendar(int stream_id, string src_calendar, string dest_calendar)
 
     Rename a calendar  
int mcal_reopen(int stream_id, string calendar [, int options])
 
     Reopen MCAL stream to a new calendar  
string mcal_snooze(int stream_id, int uid)
 
     Snooze an alarm  
string mcal_store_event(int stream_id)
 
     Store changes to an event  
bool mcal_time_valid(int hour, int min, int sec)
 
     Returns true if the time is a valid time  
int mcal_week_of_year(int day, int month, int year)
 
     Returns the week number of the given date  
# php4/ext/mcrypt/mcrypt.c
string mcrypt_cbc(int cipher, string key, string data, int mode [, string iv])
 
     CBC crypt/decrypt data using key key with cipher cipher using optional iv  
string mcrypt_cbc(int cipher, string key, string data, int mode, string iv)
 
     CBC crypt/decrypt data using key key with cipher cipher starting with iv  
string mcrypt_cfb(int cipher, string key, string data, int mode, string iv)
 
     CFB crypt/decrypt data using key key with cipher cipher starting with iv  
string mcrypt_cfb(int cipher, string key, string data, int mode, string iv)
 
     CFB crypt/decrypt data using key key with cipher cipher starting with iv  
string mcrypt_create_iv(int size, int source)
 
     Create an initialization vector (IV)  
string mcrypt_decrypt(string cipher, string key, string data, string mode, string iv)
 
     OFB crypt/decrypt data using key key with cipher cipher starting with iv  
string mcrypt_ecb(int cipher, string key, string data, int mode)
 
     ECB crypt/decrypt data using key key with cipher cipher  
string mcrypt_ecb(int cipher, string key, string data, int mode, string iv)
 
     ECB crypt/decrypt data using key key with cipher cipher starting with iv  
string mcrypt_enc_get_algorithms_name(resource td)
 
     Returns the name of the algorithm specified by the descriptor td  
int mcrypt_enc_get_block_size(resource td)
 
     Returns the block size of the cipher specified by the descriptor td  
int mcrypt_enc_get_iv_size(resource td)
 
     Returns the size of the IV in bytes of the algorithm specified by the descriptor td  
int mcrypt_enc_get_key_size(resource td)
 
     Returns the maximum supported key size in bytes of the algorithm specified by the descriptor td  
string mcrypt_enc_get_modes_name(resource td)
 
     Returns the name of the mode specified by the descriptor td  
array mcrypt_enc_get_supported_key_sizes(resource td)
 
     This function decrypts the crypttext  
bool mcrypt_enc_is_block_algorithm(resource td)
 
     Returns TRUE if the alrogithm is a block algorithms  
bool mcrypt_enc_is_block_algorithm_mode(resource td)
 
     Returns TRUE if the mode is for use with block algorithms  
bool mcrypt_enc_is_block_mode(resource td)
 
     Returns TRUE if the mode outputs blocks  
int mcrypt_enc_self_test(resource td)
 
     This function runs the self test on the algorithm specified by the descriptor td  
string mcrypt_encrypt(string cipher, string key, string data, string mode, string iv)
 
     OFB crypt/decrypt data using key key with cipher cipher starting with iv  
string mcrypt_generic(resource td, string data)
 
     This function encrypts the plaintext  
bool mcrypt_generic_deinit(resource td)
 
     This function terminates encrypt specified by the descriptor td  
bool mcrypt_generic_end(resource td)
 
     This function terminates encrypt specified by the descriptor td  
int mcrypt_generic_init(resource td, string key, string iv)
 
     This function initializes all buffers for the specific module  
int mcrypt_get_block_size(int cipher)
 
     Get the block size of cipher  
int mcrypt_get_block_size(string cipher, string module)
 
     Get the key size of cipher  
string mcrypt_get_cipher_name(int cipher)
 
     Get the name of cipher  
string mcrypt_get_cipher_name(string cipher)
 
     Get the key size of cipher  
int mcrypt_get_iv_size(string cipher, string module)
 
     Get the IV size of cipher (Usually the same as the blocksize)  
int mcrypt_get_key_size(int cipher)
 
     Get the key size of cipher  
int mcrypt_get_key_size(string cipher, string module)
 
     Get the key size of cipher  
array mcrypt_list_algorithms([string lib_dir])
 
     List all algorithms in "module_dir"  
array mcrypt_list_modes([string lib_dir])
 
     List all modes "module_dir"  
bool mcrypt_module_close(resource td)
 
     Free the descriptor td  
int mcrypt_module_get_algo_block_size(string algorithm [, string lib_dir])
 
     Returns the block size of the algorithm  
int mcrypt_module_get_algo_key_size(string algorithm [, string lib_dir])
 
     Returns the maximum supported key size of the algorithm  
array mcrypt_module_get_supported_key_sizes(string algorithm [, string lib_dir])
 
     This function decrypts the crypttext  
bool mcrypt_module_is_block_algorithm(string algorithm [, string lib_dir])
 
     Returns TRUE if the algorithm is a block algorithm  
bool mcrypt_module_is_block_algorithm_mode(string mode [, string lib_dir])
 
     Returns TRUE if the mode is for use with block algorithms  
bool mcrypt_module_is_block_mode(string mode [, string lib_dir])
 
     Returns TRUE if the mode outputs blocks of bytes  
resource mcrypt_module_open(string cipher, string cipher_directory, string mode, string mode_directory)
 
     Opens the module of the algorithm and the mode to be used  
bool mcrypt_module_self_test(string algorithm [, string lib_dir])
 
     Does a self test of the module "module"  
string mcrypt_ofb(int cipher, string key, string data, int mode, string iv)
 
     OFB crypt/decrypt data using key key with cipher cipher starting with iv  
string mcrypt_ofb(int cipher, string key, string data, int mode, string iv)
 
     OFB crypt/decrypt data using key key with cipher cipher starting with iv  
string mdecrypt_generic(resource td, string data)
 
     This function decrypts the plaintext  
# php4/ext/mcve/mcve.c
int mcve_adduser(resource conn, string admin_password, int usersetup)
 
     Add an MCVE user using usersetup structure  
int mcve_adduserarg(resource usersetup, int argtype, string argval)
 
     Add a value to user configuration structure  
int mcve_bt(resource conn, string username, string password)
 
     Get unsettled batch totals  
int mcve_checkstatus(resource conn, int identifier)
 
     Check to see if a transaction has completed  
int mcve_chkpwd(resource conn, string username, string password)
 
     Verify Password  
int mcve_chngpwd(resource conn, string admin_password, string new_password)
 
     Change the system administrator's password  
int mcve_completeauthorizations(resource conn, int &array)
 
     Number of complete authorizations in queue, returning an array of their identifiers  
int mcve_connect(resource conn)
 
     Establish the connection to MCVE  
string mcve_connectionerror(resource conn)
 
     Get a textual representation of why a connection failed  
bool mcve_deleteresponse(resource conn, int identifier)
 
     Delete specified transaction from MCVE_CONN structure  
bool mcve_deletetrans(resource conn, int identifier)
 
     Delete specified transaction from MCVE_CONN structure  
void mcve_deleteusersetup(resource usersetup)
 
     Deallocate data associated with usersetup structure  
int mcve_deluser(resource conn, string admin_password, string username)
 
     Delete an MCVE user account  
void mcve_destroyconn(resource conn)
 
     Destroy the connection and MCVE_CONN structure  
void mcve_destroyengine(void)
 
     Free memory associated with IP/SSL connectivity  
int mcve_disableuser(resource conn, string admin_password, string username)
 
     Disable an active MCVE user account  
int mcve_edituser(resource conn, string admin_password, int usersetup)
 
     Edit MCVE user using usersetup structure  
int mcve_enableuser(resource conn, string admin_password, string username)
 
     Enable an inactive MCVE user account  
int mcve_force(resiurce conn, string username, string password, string trackdata, string account, string expdate, float amount, string authcode, string comments, string clerkid, string stationid, int ptrannum)
 
     Send a FORCE to MCVE.  (typically, a phone-authorization)  
string mcve_getcell(resource conn, int identifier, string column, int row)
 
     Get a specific cell from a comma delimited response by column name  
string mcve_getcellbynum(resource conn, int identifier, int column, int row)
 
     Get a specific cell from a comma delimited response by column number  
string mcve_getcommadelimited(resource conn, int identifier)
 
     Get the RAW comma delimited data returned from MCVE  
string mcve_getheader(resource conn, int identifier, int column_num)
 
     Get the name of the column in a comma-delimited response  
string mcve_getuserarg(resource usersetup, int argtype)
 
     Grab a value from usersetup structure  
string mcve_getuserparam(resource conn, long identifier, int key)
 
     Get a user response parameter  
int mcve_gft(resource conn, string username, string password, int type, string account, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate)
 
     Audit MCVE for Failed transactions
   
int mcve_gl(int conn, string username, string password, int type, string account, string batch, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate)
 
     Audit MCVE for settled transactions  
int mcve_gut(resource conn, string username, string password, int type, string account, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate)
 
     Audit MCVE for Unsettled Transactions  
resource mcve_initconn(void)
 
     Create and initialize an MCVE_CONN structure  
int mcve_initengine(string location)
 
     Ready the client for IP/SSL Communication  
resource mcve_initusersetup(void)
 
     Initialize structure to store user data  
int mcve_iscommadelimited(resource conn, int identifier)
 
     Checks to see if response is comma delimited  
int mcve_liststats(resource conn, string admin_password)
 
     List statistics for all users on MCVE system  
int mcve_listusers(resource conn, string admin_password)
 
     List all users on MCVE system  
bool mcve_maxconntimeout(resource conn, int secs)
 
     The maximum amount of time the API will attempt a connection to MCVE
   
int mcve_monitor(resource conn)
 
     Perform communication with MCVE (send/receive data)   Non-blocking  
int mcve_numcolumns(resource conn, int identifier)
 
     Number of columns returned in a comma delimited response  
int mcve_numrows(resource conn, int identifier)
 
     Number of rows returned in a comma delimited response  
int mcve_override(resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum)
 
     Send an OVERRIDE to MCVE  
int mcve_parsecommadelimited(resource conn, int identifier)
 
     Parse the comma delimited response so mcve_getcell, etc will work  
int mcve_ping(resource conn)
 
     Send a ping request to MCVE  
int mcve_preauth(resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments,	string clerkid, string stationid, int ptrannum)
 
     Send a PREAUTHORIZATION to MCVE  
int mcve_preauthcompletion(resource conn, string username, string password, float finalamount, int sid, int ptrannum)
 
     Complete a PREAUTHORIZATION... Ready it for settlement  
int mcve_qc(resource conn, string username, string password, string clerkid, string stationid, string comments, int ptrannum)
 
     Audit MCVE for a list of transactions in the outgoing queue  
string mcve_responseparam(resource conn, long identifier, string key)
 
     Get a custom response parameter  
int mcve_return(int conn, string username, string password, string trackdata, string account, string expdate, float amount, string comments, string clerkid, string stationid, int ptrannum)
 
     Issue a RETURN or CREDIT to MCVE  
int mcve_returncode(resource conn, int identifier)
 
     Grab the exact return code from the transaction  
int mcve_returnstatus(resource conn, int identifier)
 
     Check to see if the transaction was successful  
int mcve_sale(resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum)
 
     Send a SALE to MCVE  
int mcve_setblocking(resource conn, int tf)
 
     Set blocking/non-blocking mode for connection
   
int mcve_setdropfile(resource conn, string directory)
 
     Set the connection method to Drop-File  
int mcve_setip(resource conn, string host, int port)
 
     Set the connection method to IP  
int mcve_setssl(resource conn, string host, int port)
 
     Set the connection method to SSL  
int mcve_setssl_files(string sslkeyfile, string sslcertfile)
 
     Set certificate key files and certificates if server requires client certificate
     verification
   
int mcve_settimeout(resource conn, int seconds)
 
     Set maximum transaction time (per trans)
   
int mcve_settle(resource conn, string username, string password, string batch)
 
     Issue a settlement command to do a batch deposit  
string mcve_text_avs(string code)
 
     Get a textual representation of the return_avs  
string mcve_text_code(string code)
 
     Get a textual representation of the return_code  
string mcve_text_cv(int code)
 
     Get a textual representation of the return_cv  
string mcve_transactionauth(resource conn, int identifier)
 
     Get the authorization number returned for the transaction (alpha-numeric)  
int mcve_transactionavs(resource conn, int identifier)
 
     Get the Address Verification return status  
int mcve_transactionbatch(resource conn, int identifier)
 
     Get the batch number associated with the transaction  
int mcve_transactioncv(resource conn, int identifier)
 
     Get the CVC2/CVV2/CID return status  
int mcve_transactionid(resource conn, int identifier)
 
     Get the unique system id for the transaction
   
int mcve_transactionitem(resource conn, int identifier)
 
     Get the ITEM number in the associated batch for this transaction  
int mcve_transactionssent(resource conn)
 
     Check to see if outgoing buffer is clear  
string mcve_transactiontext(resource conn, int identifier)
 
     Get verbiage (text) return from MCVE or processing institution  
int mcve_transinqueue(resource conn)
 
     Number of transactions in client-queue  
int mcve_transnew(resource conn)
 
     Start a new transaction  
int mcve_transparam(resource conn, long identifier, int key, ...)
 
     Add a parameter to a transaction  
int mcve_transsend(resource conn, long identifier)
 
     Finalize and send the transaction  
int mcve_ub(resource conn, string username, string password)
 
     Get a list of all Unsettled batches  
int mcve_uwait(long microsecs)
 
     Wait x microsecs  
bool mcve_verifyconnection(resource conn, int tf)
 
     Set whether or not to PING upon connect to verify connection
   
bool mcve_verifysslcert(resource conn, int tf)
 
     Set whether or not to verify the server ssl certificate
   
int mcve_void(resource conn, string username, string password, int sid, int ptrannum)
 
     VOID a transaction in the settlement queue  
# php4/ext/mhash/mhash.c
string mhash(int hash, string data [, string key])
 
     Hash data with hash  
int mhash_count(void)
 
     Gets the number of available hashes  
int mhash_get_block_size(int hash)
 
     Gets the block size of hash  
string mhash_get_hash_name(int hash)
 
     Gets the name of hash  
string mhash_keygen_s2k(int hash, string input_password, string salt, int bytes)
 
     Generates a key using hash functions  
# php4/ext/mime_magic/mime_magic.c
string mime_content_type(string filename)
 
     Return content-type for file  
# php4/ext/ming/ming.c
void ming_setcubicthreshold (int threshold)
 
     Set cubic threshold (?)  
void ming_setscale(int scale)
 
     Set scale (?)  
void ming_useswfversion(int version)
 
     Use SWF version (?)  
object swfaction_init(string)
 
     Returns a new SWFAction object, compiling the given script  
float swfbitmap_getHeight(void)
 
     Returns the height of this bitmap  
float swfbitmap_getWidth(void)
 
     Returns the width of this bitmap  
class swfbitmap_init(mixed file [, mixed maskfile])
 
     Returns a new SWFBitmap object from jpg (with optional mask) or dbl file  
void swfbutton_addAction(object SWFAction, int flags)
 
     Sets the action to perform when conditions described in flags is met  
void swfbutton_addShape(object SWFCharacter, int flags)
 
     Sets the character to display for the condition described in flags  
object swfbutton_init(void)
 
     Returns a new SWFButton object  
int swfbutton_keypress(string str)
 
     Returns the action flag for keyPress(char)  
void swfbutton_setAction(object SWFAction)
 
     Sets the action to perform when button is pressed  
void swfbutton_setDown(object SWFCharacter)
 
     Sets the character for this button's down state  
void swfbutton_setHit(object SWFCharacter)
 
     Sets the character for this button's hit test state  
void swfbutton_setOver(object SWFCharacter)
 
     Sets the character for this button's over state  
void swfbutton_setUp(object SWFCharacter)
 
     Sets the character for this button's up state  
void swfdisplayitem_addAction(object SWFAction, int flags)
 
     Adds this SWFAction to the given SWFSprite instance  
void swfdisplayitem_addColor(int r, int g, int b [, int a])
 
     Sets the add color part of this SWFDisplayItem's CXform to (r, g, b [, a]), a defaults to 0  
void swfdisplayitem_move(float dx, float dy)
 
     Displaces this SWFDisplayItem by (dx, dy) in movie coordinates  
void swfdisplayitem_moveTo(int x, int y)
 
     Moves this SWFDisplayItem to movie coordinates (x, y)  
void swfdisplayitem_multColor(float r, float g, float b [, float a])
 
     Sets the multiply color part of this SWFDisplayItem's CXform to (r, g, b [, a]), a defaults to 1.0  
void swfdisplayitem_rotate(float degrees)
 
     Rotates this SWFDisplayItem the given (clockwise) degrees from its current orientation  
void swfdisplayitem_rotateTo(float degrees)
 
     Rotates this SWFDisplayItem the given (clockwise) degrees from its original orientation  
void swfdisplayitem_scale(float xScale, float yScale)
 
     Multiplies this SWFDisplayItem's current x scale by xScale, its y scale by yScale  
void swfdisplayitem_scaleTo(float xScale [, float yScale])
 
     Scales this SWFDisplayItem by xScale in the x direction, yScale in the y, or both to xScale if only one arg  
void swfdisplayitem_setDepth(int depth)
 
     Sets this SWFDisplayItem's z-depth to depth.  Items with higher depth values are drawn on top of those with lower values  
void swfdisplayitem_setMatrix(float a, float b, float c, float d, float x, float y)
 
     Sets the item's transform matrix  
void swfdisplayitem_setName(string name)
 
     Sets this SWFDisplayItem's name to name  
void swfdisplayitem_setRatio(float ratio)
 
     Sets this SWFDisplayItem's ratio to ratio.  Obviously only does anything if displayitem was created from an SWFMorph  
void swfdisplayitem_skewX(float xSkew)
 
     Adds xSkew to this SWFDisplayItem's x skew value  
void swfdisplayitem_skewXTo(float xSkew)
 
     Sets this SWFDisplayItem's x skew value to xSkew  
void swfdisplayitem_skewY(float ySkew)
 
     Adds ySkew to this SWFDisplayItem's y skew value  
void swfdisplayitem_skewYTo(float ySkew)
 
     Sets this SWFDisplayItem's y skew value to ySkew  
class swffill_init(void)
 
     Returns a new SWFFill object  
void swffill_moveTo(float x, float y)
 
     Moves this SWFFill to shape coordinates (x,y)  
void swffill_rotateTo(float degrees)
 
     Rotates this SWFFill the given (clockwise) degrees from its original orientation  
void swffill_scaleTo(float xScale [, float yScale])
 
     Scales this SWFFill by xScale in the x direction, yScale in the y, or both to xScale if only one arg  
void swffill_skewXTo(float xSkew)
 
     Sets this SWFFill's x skew value to xSkew  
void swffill_skewYTo(float ySkew)
 
     Sets this SWFFill's y skew value to ySkew  
float swffont_getAscent(void)
 
     Returns the ascent of the font, or 0 if not available  
float swffont_getDescent(void)
 
     Returns the descent of the font, or 0 if not available  
float swffont_getLeading(void)
 
     Returns the leading of the font, or 0 if not available  
float swffont_getWidth(string str)
 
     Calculates the width of the given string in this font at full height  
object swffont_init(string filename)
 
     Returns a new SWFFont object from given file  
void swfgradient_addEntry(float ratio, int r, int g, int b [, int a])
 
     Adds given entry to the gradient  
class swfgradient_init(void)
 
     Returns a new SWFGradient object  
object swfmorph_getShape1(void)
 
     Return's this SWFMorph's start shape object  
object swfmorph_getShape2(void)
 
     Return's this SWFMorph's start shape object  
object swfmorph_init(void)
 
     Returns a new SWFMorph object  
object swfmovie_add(object SWFBlock) 
 
   
object swfmovie_init(int version) 
 
    Creates swfmovie object according to the passed version  
void swfmovie_labelframe(object SWFBlock)
 
   
void swfmovie_labelframe(string label)
 
     Labels frame  
void swfmovie_nextframe(void)  
 
   
int swfmovie_output([int compression])
 
   
int swfmovie_save(mixed where [, int compression])
 
    Saves the movie. 'where' can be stream and the movie will be saved there otherwise it is treated as string and written in file with that name  
int swfmovie_saveToFile(stream x [, int compression])
 
   
void swfmovie_setBackground(int r, int g, int b)
 
     Sets background color (r,g,b)  
void swfmovie_setDimension(float x, float y)
 
     Sets movie dimension  
void swfmovie_setFrames(int frames)
 
     Sets number of frames  
void swfmovie_setRate(float rate)
 
     Sets movie rate  
void swfmovie_streamMp3(mixed file)
 
     Sets sound stream of the SWF movie. The parameter can be stream or string.  
object swfshape_addfill(mixed arg1, int arg2, [int b [, int a]])
 
     Returns a fill object, for use with swfshape_setleftfill and swfshape_setrightfill. If 1 or 2 parameter(s) is (are) passed first should be object (from gradient class) and the second int (flags). Gradient fill is performed. If 3 or 4 parameters are passed : r, g, b [, a]. Solid fill is performed.  
void swfshape_drawarc(float r, float startAngle, float endAngle)
 
     Draws an arc of radius r centered at the current location, from angle startAngle to angle endAngle measured counterclockwise from 12 o'clock  
void swfshape_drawcircle(float r)
 
     Draws a circle of radius r centered at the current location, in a counter-clockwise fashion  
void swfshape_drawcubic(float bx, float by, float cx, float cy, float dx, float dy)
 
     Draws a cubic bezier curve using the current position and the three given points as control points  
void swfshape_drawcubic(float bx, float by, float cx, float cy, float dx, float dy)
 
     Draws a cubic bezier curve using the current position and the three given points as control points  
void swfshape_drawcurve(float adx, float ady, float bdx, float bdy [, float cdx, float cdy])
 
     Draws a curve from the current pen position (x, y) to the point (x+bdx, y+bdy) in the current line style, using point (x+adx, y+ady) as a control point or draws a cubic bezier to point (x+cdx, x+cdy) with control points (x+adx, y+ady) and (x+bdx, y+bdy)  
void swfshape_drawcurveto(float ax, float ay, float bx, float by [, float dx, float dy])
 
     Draws a curve from the current pen position (x,y) to the point (bx, by) in the current line style, using point (ax, ay) as a control point. Or draws a cubic bezier to point (dx, dy) with control points (ax, ay) and (bx, by)  
void swfshape_drawglyph(SWFFont font, string character [, int size])
 
     Draws the first character in the given string into the shape using the glyph definition from the given font  
void swfshape_drawline(float dx, float dy)
 
     Draws a line from the current pen position (x, y) to the point (x+dx, y+dy) in the current line style  
void swfshape_drawlineto(float x, float y)
 
     Draws a line from the current pen position to shape coordinates (x, y) in the current line style  
object swfshape_init(void)
 
     Returns a new SWFShape object  
void swfshape_movepen(float x, float y)
 
     Moves the pen from its current location by vector (x, y)  
void swfshape_movepento(float x, float y)
 
     Moves the pen to shape coordinates (x, y)  
void swfshape_setleftfill(int arg1 [, int g ,int b [,int a]])
 
     Sets the left side fill style to fill in case only one parameter is passed. When 3 or 4 parameters are passed they are treated as : int r, int g, int b, int a . Solid fill is performed in this case before setting left side fill type.  
void swfshape_setleftfill(int arg1 [, int g ,int b [,int a]])
 
     Sets the right side fill style to fill in case only one parameter is passed. When 3 or 4 parameters are passed they are treated as : int r, int g, int b, int a . Solid fill is performed in this case before setting right side fill type.  
void swfshape_setline(int width, int r, int g, int b [, int a])
 
     Sets the current line style for this SWFShape  
object swfsprite_add(object SWFCharacter)
 
     Adds the character to the sprite, returns a displayitem object  
class swfsprite_init(void)
 
     Returns a new SWFSprite object  
void swfsprite_labelFrame(string label)
 
     Labels frame  
void swfsprite_nextFrame(void)
 
     Moves the sprite to the next frame  
void swfsprite_remove(object SWFDisplayItem)
 
     Remove the named character from the sprite's display list  
void swfsprite_setFrames(int frames)
 
     Sets the number of frames in this SWFSprite  
void swftext_addString(string text)
 
     Writes the given text into this SWFText object at the current pen position, using the current font, height, spacing, and color  
float swftext_getAscent(void)
 
     Returns the ascent of the current font at its current size, or 0 if not available  
float swftext_getDescent(void)
 
     Returns the descent of the current font at its current size, or 0 if not available  
float swftext_getLeading(void)
 
     Returns the leading of the current font at its current size, or 0 if not available  
float swftext_getWidth(string str)
 
     Calculates the width of the given string in this text objects current font and size  
class swftext_init(void)
 
     Returns new SWFText object  
void swftext_moveTo(float x, float y)
 
     Moves this SWFText object's current pen position to (x, y) in text coordinates  
void swftext_setColor(int r, int g, int b [, int a])
 
     Sets this SWFText object's current color to the given color  
void swftext_setFont(object font)
 
     Sets this SWFText object's current font to given font  
void swftext_setHeight(float height)
 
     Sets this SWFText object's current height to given height  
void swftext_setSpacing(float spacing)
 
     Sets this SWFText object's current letterspacing to given spacing  
void swftextfield_addString(string str)
 
     Adds the given string to this textfield  
void swftextfield_align(int alignment)
 
     Sets the alignment of this textfield  
object swftextfield_init([int flags])
 
     Returns a new SWFTextField object  
void swftextfield_setBounds(float width, float height)
 
     Sets the width and height of this textfield  
void swftextfield_setColor(int r, int g, int b [, int a])
 
     Sets the color of this textfield  
void swftextfield_setFont(object font)
 
     Sets the font for this textfield  
void swftextfield_setHeight(float height)
 
     Sets the font height of this textfield  
void swftextfield_setIndentation(float indentation)
 
     Sets the indentation of the first line of this textfield  
void swftextfield_setLeftMargin(float margin)
 
     Sets the left margin of this textfield  
void swftextfield_setLineSpacing(float space)
 
     Sets the line spacing of this textfield  
void swftextfield_setMargins(float left, float right)
 
     Sets both margins of this textfield  
void swftextfield_setName(string var_name)
 
     Sets the variable name of this textfield  
void swftextfield_setRightMargin(float margin)
 
     Sets the right margin of this textfield  
# php4/ext/mnogosearch/php_mnogo.c
int udm_add_search_limit(int agent, int var, string val)
 
     Add mnoGoSearch search restrictions  
int udm_alloc_agent(string dbaddr [, string dbmode])
 
     Allocate mnoGoSearch session  
int udm_alloc_agent_array(array dbaddr)
 
     Allocate mnoGoSearch session  
int udm_api_version()
 
     Get mnoGoSearch API version  
array udm_cat_list(int agent, string category)
 
     Get mnoGoSearch categories list with the same root  
array udm_cat_path(int agent, string category)
 
     Get mnoGoSearch categories path from the root to the given catgory  
int udm_check_charset(int agent, string charset)
 
     Check if the given charset is known to mnogosearch  
int udm_check_stored(int agent, int link, string doc_id)
 
     Open connection to stored   
int udm_clear_search_limits(int agent)
 
     Clear all mnoGoSearch search restrictions  
int udm_close_stored(int agent, int link)
 
     Open connection to stored   
int udm_crc32(int agent, string str)
 
     Return CRC32 checksum of gived string  
int udm_errno(int agent)
 
     Get mnoGoSearch error number  
string udm_error(int agent)
 
     Get mnoGoSearch error message  
int udm_find(int agent, string query)
 
     Perform search  
int udm_free_agent(int agent)
 
     Free mnoGoSearch session  
int udm_free_ispell_data(int agent)
 
     Free memory allocated for ispell data  
int udm_free_res(int res)
 
     mnoGoSearch free result  
int udm_get_doc_count(int agent)
 
     Get total number of documents in database  
string udm_get_res_field(int res, int row, int field)
 
     Fetch mnoGoSearch result field  
string udm_get_res_field_ex(int res, int row, string field)
 
     Fetch mnoGoSearch result field  
string udm_get_res_param(int res, int param)
 
     Get mnoGoSearch result parameters  
int udm_hash32(int agent, string str)
 
     Return Hash32 checksum of gived string  
int udm_load_ispell_data(int agent, int var, string val1, [string charset], string val2, int flag)
 
     Load ispell data  
int udm_make_excerpt(int agent, int res, int row)
 
     Perform search  
int udm_open_stored(int agent, string storedaddr)
 
     Open connection to stored   
int udm_parse_query_string(int agent, string str)
 
     Parses query string, initialises variables and search limits taken from it  
int udm_set_agent_param(int agent, int var, string val)
 
     Set mnoGoSearch agent session parameters  
int udm_set_agent_param_ex(int agent, string var, string val)
 
     Set mnoGoSearch agent session parameters extended  
# php4/ext/msession/msession.c
string msession_call(string fn_name, [, string param1 ], ... [,string param4])
 
     Call the plugin function named fn_name  
bool msession_connect(string host, string port)
 
  	 Connect to msession sever  
int msession_count(void)
 
     Get session count  
bool msession_create(string session)
 
     Create a session  
bool msession_destroy(string name)
 
     Destroy a session  
void msession_disconnect(void)
 
     Disconnect from msession server  
array msession_find(string name, string value)
 
     Find all sessions with name and value  
string msession_get(string session, string name, string default_value)
 
     Get value from session  
array msession_get_array(string session)
 
     Get array of msession variables   
string msession_get_data(string session)
 
     Get data session unstructured data. (PHP sessions use this)   
string msession_inc(string session, string name) 
 
     Increment value in session  
array msession_list(void)
 
     List all sessions   
array msession_listvar(string name)
 
     return associative array of value:session for all sessions with a variable named 'name'  
int msession_lock(string name)
 
     Lock a session  
string msession_plugin(string session, string val [, string param ])
 
     Call the personality plugin escape function  
string msession_randstr(int num_chars)
 
     Get random string  
bool msession_set(string session, string name, string value)
 
     Set value in session  
bool msession_set_array(string session, array tuples)
 
     Set msession variables from an array 
bool msession_set_data(string session, string value)
 
     Set data session unstructured data. (PHP sessions use this)   
int msession_stat(string name)
 
     Lock a session  
int msession_timeout(string session [, int param ])
 
     Set/get session timeout  
string msession_uniq(int num_chars)
 
     Get uniq id  
int msession_unlock(string session, int key)
 
     Unlock a session  
# php4/ext/msql/php_msql.c
int msql_affected_rows(int query)
 
     Return number of affected rows  
int msql_close([int link_identifier])
 
     Close an mSQL connection  
int msql_connect([string hostname[:port]] [, string username] [, string password])
 
     Open a connection to an mSQL Server  
int msql_create_db(string database_name [, int link_identifier])
 
     Create an mSQL database  
int msql_data_seek(int query, int row_number)
 
     Move internal result pointer  
int msql_db_query(string database_name, string query [, int link_identifier])
 
     Send an SQL query to mSQL  
int msql_drop_db(string database_name [, int link_identifier])
 
     Drop (delete) an mSQL database  
string msql_error([int link_identifier])
 
     Returns the text of the error message from previous mSQL operation  
array msql_fetch_array(int query [, int result_type])
 
     Fetch a result row as an associative array  
object msql_fetch_field(int query [, int field_offset])
 
     Get column information from a result and return as an object  
object msql_fetch_object(int query [, int result_type])
 
     Fetch a result row as an object  
array msql_fetch_row(int query)
 
     Get a result row as an enumerated array  
string msql_field_flags(int query, int field_offset)
 
     Get the flags associated with the specified field in a result  
int msql_field_len(int query, int field_offet)
 
     Returns the length of the specified field  
string msql_field_name(int query, int field_index)
 
     Get the name of the specified field in a result  
int msql_field_seek(int query, int field_offset)
 
     Set result pointer to a specific field offset  
string msql_field_table(int query, int field_offset)
 
     Get name of the table the specified field is in  
string msql_field_type(int query, int field_offset)
 
     Get the type of the specified field in a result  
int msql_free_result(int query)
 
     Free result memory  
int msql_list_dbs([int link_identifier])
 
     List databases available on an mSQL server  
int msql_list_fields(string database_name, string table_name [, int link_identifier])
 
     List mSQL result fields  
int msql_list_tables(string database_name [, int link_identifier])
 
     List tables in an mSQL database  
int msql_num_fields(int query)
 
     Get number of fields in a result  
int msql_num_rows(int query)
 
     Get number of rows in a result  
int msql_pconnect([string hostname[:port]] [, string username] [, string password])
 
     Open a persistent connection to an mSQL Server  
int msql_query(string query [, int link_identifier])
 
     Send an SQL query to mSQL  
int msql_result(int query, int row [, mixed field])
 
     Get result data  
int msql_select_db(string database_name [, int link_identifier])
 
     Select an mSQL database  
# php4/ext/mssql/php_mssql.c
bool mssql_bind(resource stmt, string param_name, mixed var, int type 
 
  		[, int is_output[, int is_null[, int maxlen]]])
     Adds a parameter to a stored procedure or a remote stored procedure   
bool mssql_close([resource conn_id])
 
     Closes a connection to a MS-SQL server  
int mssql_connect([string servername [, string username [, string password]]])
 
     Establishes a connection to a MS-SQL server  
bool mssql_data_seek(resource result_id, int offset)
 
     Moves the internal row pointer of the MS-SQL result associated with the specified result identifier to pointer to the specified row number  
mixed mssql_execute(resource stmt [, bool skip_results = false])
 
     Executes a stored procedure on a MS-SQL server database  
array mssql_fetch_array(resource result_id [, int result_type])
 
     Returns an associative array of the current row in the result set specified by result_id  
array mssql_fetch_assoc(resource result_id)
 
     Returns an associative array of the current row in the result set specified by result_id  
int mssql_fetch_batch(resource result_index)
 
     Returns the next batch of records  
object mssql_fetch_field(resource result_id [, int offset])
 
     Gets information about certain fields in a query result  
object mssql_fetch_object(resource result_id [, int result_type])
 
     Returns a psuedo-object of the current row in the result set specified by result_id  
array mssql_fetch_row(resource result_id)
 
     Returns an array of the current row in the result set specified by result_id  
int mssql_field_length(resource result_id [, int offset])
 
     Get the length of a MS-SQL field  
string mssql_field_name(resource result_id [, int offset])
 
     Returns the name of the field given by offset in the result set given by result_id  
bool mssql_field_seek(int result_id, int offset)
 
     Seeks to the specified field offset  
string mssql_field_type(resource result_id [, int offset])
 
     Returns the type of a field  
bool mssql_free_result(resource result_index)
 
     Free a MS-SQL result index  
bool mssql_free_statement(resource result_index)
 
     Free a MS-SQL statement index  
string mssql_get_last_message(void)
 
     Gets the last message from the MS-SQL server  
string mssql_guid_string(string binary [,int short_format])
 
     Converts a 16 byte binary GUID to a string   
int mssql_init(string sp_name [, resource conn_id])
 
     Initializes a stored procedure or a remote stored procedure   
void mssql_min_error_severity(int severity)
 
     Sets the lower error severity  
void mssql_min_message_severity(int severity)
 
     Sets the lower message severity  
bool mssql_next_result(resource result_id)
 
     Move the internal result pointer to the next result  
int mssql_num_fields(resource mssql_result_index)
 
     Returns the number of fields fetched in from the result id specified  
int mssql_num_rows(resource mssql_result_index)
 
     Returns the number of rows fetched in from the result id specified  
int mssql_pconnect([string servername [, string username [, string password]]])
 
     Establishes a persistent connection to a MS-SQL server  
resource mssql_query(string query [, resource conn_id [, int batch_size]])
 
     Perform an SQL query on a MS-SQL server database  
string mssql_result(resource result_id, int row, mixed field)
 
     Returns the contents of one cell from a MS-SQL result set  
int mssql_rows_affected(resource conn_id)
 
     Returns the number of records affected by the query  
bool mssql_select_db(string database_name [, resource conn_id])
 
     Select a MS-SQL database  
# php4/ext/mysql/php_mysql.c
int mysql_affected_rows([int link_identifier])
 
     Gets number of affected rows in previous MySQL operation  
string mysql_client_encoding([int link_identifier])
 
  	Returns the default character set for the current connection  
bool mysql_close([int link_identifier])
 
     Close a MySQL connection  
resource mysql_connect([string hostname[:port][:/path/to/socket] [, string username [, string password [, bool new [, int flags]]]]])
 
     Opens a connection to a MySQL Server  
bool mysql_create_db(string database_name [, int link_identifier])
 
     Create a MySQL database  
bool mysql_data_seek(resource result, int row_number)
 
     Move internal result pointer  
resource mysql_db_query(string database_name, string query [, int link_identifier])
 
     Sends an SQL query to MySQL  
bool mysql_drop_db(string database_name [, int link_identifier])
 
     Drops (delete) a MySQL database  
int mysql_errno([int link_identifier])
 
     Returns the number of the error message from previous MySQL operation  
string mysql_error([int link_identifier])
 
     Returns the text of the error message from previous MySQL operation  
string mysql_escape_string(string to_be_escaped)
 
     Escape string for mysql query  
array mysql_fetch_array(resource result [, int result_type])
 
     Fetch a result row as an array (associative, numeric or both)  
array mysql_fetch_assoc(resource result)
 
     Fetch a result row as an associative array  
object mysql_fetch_field(resource result [, int field_offset])
 
     Gets column information from a result and return as an object  
array mysql_fetch_lengths(resource result)
 
     Gets max data size of each column in a result  
object mysql_fetch_object(resource result [, int result_type])
 
     Fetch a result row as an object  
array mysql_fetch_row(resource result)
 
     Gets a result row as an enumerated array  
string mysql_field_flags(resource result, int field_offset)
 
     Gets the flags associated with the specified field in a result  
int mysql_field_len(resource result, int field_offset)
 
     Returns the length of the specified field  
string mysql_field_name(resource result, int field_index)
 
     Gets the name of the specified field in a result  
bool mysql_field_seek(resource result, int field_offset)
 
     Sets result pointer to a specific field offset  
string mysql_field_table(resource result, int field_offset)
 
     Gets name of the table the specified field is in  
string mysql_field_type(resource result, int field_offset)
 
     Gets the type of the specified field in a result  
bool mysql_free_result(resource result)
 
     Free result memory  
string mysql_get_client_info(void)
 
     Returns a string that represents the client library version  
string mysql_get_host_info([int link_identifier])
 
     Returns a string describing the type of connection in use, including the server host name  
int mysql_get_proto_info([int link_identifier])
 
     Returns the protocol version used by current connection  
string mysql_get_server_info([int link_identifier])
 
     Returns a string that represents the server version number  
string mysql_info([int link_identifier])
 
     Returns a string containing information about the most recent query  
int mysql_insert_id([int link_identifier])
 
     Gets the ID generated from the previous INSERT operation  
resource mysql_list_dbs([int link_identifier])
 
     List databases available on a MySQL server  
resource mysql_list_fields(string database_name, string table_name [, int link_identifier])
 
     List MySQL result fields  
resource mysql_list_processes([int link_identifier])
 
  	Returns a result set describing the current server threads  
resource mysql_list_tables(string database_name [, int link_identifier])
 
     List tables in a MySQL database  
int mysql_num_fields(resource result)
 
     Gets number of fields in a result  
int mysql_num_rows(resource result)
 
     Gets number of rows in a result  
resource mysql_pconnect([string hostname[:port][:/path/to/socket] [, string username [, string password [, int flags]]]])
 
     Opens a persistent connection to a MySQL Server  
bool mysql_ping([int link_identifier])
 
     Ping a server connection. If no connection then reconnect.  
resource mysql_query(string query [, int link_identifier])
 
     Sends an SQL query to MySQL  
string mysql_real_escape_string(string to_be_escaped [, int link_identifier])
 
  	Escape special characters in a string for use in a SQL statement, taking into account the current charset of the connection  
mixed mysql_result(resource result, int row [, mixed field])
 
     Gets result data  
bool mysql_select_db(string database_name [, int link_identifier])
 
     Selects a MySQL database  
string mysql_stat([int link_identifier])
 
  	Returns a string containing status information  
int mysql_thread_id([int link_identifier])
 
  	Returns the thread id of current connection  
resource mysql_unbuffered_query(string query [, int link_identifier])
 
     Sends an SQL query to MySQL, without fetching and buffering the result rows  
# php4/ext/ncurses/ncurses_functions.c
int ncurses_addch(int ch)
 
     Adds character at current position and advance cursor  
int ncurses_addchnstr(string s, int n)
 
     Adds attributed string with specified length at current position  
int ncurses_addchstr(string s)
 
     Adds attributed string at current position  
int ncurses_addnstr(string s, int n)
 
     Adds string with specified length at current position  
int ncurses_addstr(string text)
 
     Outputs text at current position  
int ncurses_assume_default_colors(int fg, int bg)
 
     Defines default colors for color 0  
int ncurses_attroff(int attributes)
 
     Turns off the given attributes  
int ncurses_attron(int attributes)
 
     Turns on the given attributes  
int ncurses_attrset(int attributes)
 
     Sets given attributes  
int ncurses_baudrate(void)
 
     Returns baudrate of terminal  
int ncurses_beep(void)
 
     Let the terminal beep  
int ncurses_bkgd(int attrchar)
 
     Sets background property for terminal screen  
void ncurses_bkgdset(int attrchar)
 
     Controls screen background  
int ncurses_border(int left, int right, int top, int bottom, int tl_corner, int tr_corner, int bl_corner, int br_corner)
 
     Draws a border around the screen using attributed characters  
int ncurses_bottom_panel(resource panel)
 
     Moves a visible panel to the bottom of the stack  
bool ncurses_can_change_color(void)
 
     Checks if we can change terminals colors  
bool ncurses_cbreak(void)
 
     Switches of input buffering  
bool ncurses_clear(void)
 
     Clears screen  
bool ncurses_clrtobot(void)
 
     Clears screen from current position to bottom  
bool ncurses_clrtoeol(void)
 
     Clears screen from current position to end of line  
int ncurses_color_content(int color, int &r, int &g, int &b)
 
     Gets the RGB value for color  
int ncurses_color_set(int pair)
 
     Sets fore- and background color  
int ncurses_curs_set(int visibility)
 
     Sets cursor state  
bool ncurses_def_prog_mode(void)
 
     Saves terminals (program) mode  
bool ncurses_def_shell_mode(void)
 
     Saves terminal (shell) mode 
int ncurses_define_key(string definition, int keycode)
 
     Defines a keycode  
int ncurses_del_panel(resource panel)
 
     Remove panel from the stack and delete it (but not the associated window)  
int ncurses_delay_output(int milliseconds)
 
     Delays output on terminal using padding characters  
bool ncurses_delch(void)
 
     Deletes character at current position, move rest of line left  
bool ncurses_deleteln(void)
 
     Deletes line at current position, move rest of screen up  
int ncurses_delwin(resource window)
 
     Deletes a ncurses window  
bool ncurses_doupdate(void)
 
     Writes all prepared refreshes to terminal  
bool ncurses_echo(void)
 
     Activates keyboard input echo  
int ncurses_echochar(int character)
 
     Single character output including refresh  
int ncurses_end(void)
 
     Stops using ncurses, clean up the screen  
bool ncurses_erase(void)
 
     Erases terminal screen  
string ncurses_erasechar(void)
 
     Returns current erase character  
int ncurses_filter(void)
 
    
bool ncurses_flash(void)
 
     Flashes terminal screen (visual bell)  
bool ncurses_flushinp(void)
 
     Flushes keyboard input buffer  
int ncurses_getch(void)
 
     Reads a character from keyboard  
void ncurses_getmaxyx(resource window, int &y, int &x)
 
     Returns the size of a window  
bool ncurses_getmouse(array mevent)
 
     Reads mouse event from queue  
void ncurses_getyx(resource window, int &y, int &x)
 
     Returns the current cursor position for a window  
int ncurses_halfdelay(int tenth)
 
     Puts terminal into halfdelay mode  
bool ncurses_has_colors(void)
 
     Checks if terminal has colors  
bool ncurses_has_ic(void)
 
     Checks for insert- and delete-capabilities  
bool ncurses_has_il(void)
 
     Checks for line insert- and delete-capabilities  
int ncurses_has_key(int keycode)
 
     Checks for presence of a function key on terminal keyboard  
int ncurses_hide_panel(resource panel)
 
     Remove panel from the stack, making it invisible  
int ncurses_hline(int charattr, int n)
 
     Draws a horizontal line at current position using an attributed character and max. n characters long  
string ncurses_inch(void)
 
     Gets character and attribute at current position  
int ncurses_init(void)
 
     Initializes ncurses  
int ncurses_init_color(int color, int r, int g, int b)
 
     Sets new RGB value for color  
int ncurses_init_pair(int pair, int fg, int bg)
 
     Allocates a color pair  
int ncurses_insch(int character)
 
     Inserts character moving rest of line including character at current position  
int ncurses_insdelln(int count)
 
     Inserts lines before current line scrolling down (negative numbers delete and scroll up)  
bool ncurses_insertln(void)
 
     Inserts a line, move rest of screen down  
int ncurses_insstr(string text)
 
     Inserts string at current position, moving rest of line right  
int ncurses_instr(string buffer)
 
     Reads string from terminal screen  
bool ncurses_isendwin(void)
 
     Ncurses is in endwin mode, normal screen output may be performed  
int ncurses_keyok(int keycode, bool enable)
 
     Enables or disable a keycode  
int ncurses_keypad(resource window, bool bf)
 
     Turns keypad on or off  
string ncurses_killchar(void)
 
     Returns current line kill character  
string ncurses_longname(void)
 
     Returns terminal description  
long ncurses_meta(resource window, bool 8bit)
 
     Enables/Disable 8-bit meta key information  
bool ncurses_mouse_trafo(int y, int x, bool toscreen)
 
     Transforms coordinates  
int ncurses_mouseinterval(int milliseconds)
 
     Sets timeout for mouse button clicks  
int ncurses_mousemask(int newmask, int &oldmask)
 
     Returns and sets mouse options  
int ncurses_move(int y, int x)
 
     Moves output position  
int ncurses_move_panel(resource panel, int startx, int starty)
 
     Moves a panel so that it's upper-left corner is at [startx, starty]  
int ncurses_mvaddch(int y, int x, int c)
 
     Moves current position and add character  
int ncurses_mvaddchnstr(int y, int x, string s, int n)
 
     Moves position and add attrributed string with specified length  
int ncurses_mvaddchstr(int y, int x, string s)
 
     Moves position and add attributed string  
int ncurses_mvaddnstr(int y, int x, string s, int n)
 
     Moves position and add string with specified length  
int ncurses_mvaddstr(int y, int x, string s)
 
     Moves position and add string  
int ncurses_mvcur(int old_y,int old_x, int new_y, int new_x)
 
     Moves cursor immediately  
int ncurses_mvdelch(int y, int x)
 
     Moves position and delete character, shift rest of line left  
int ncurses_mvgetch(int y, int x)
 
     Moves position and get character at new position  
int ncurses_mvhline(int y, int x, int attrchar, int n)
 
     Sets new position and draw a horizontal line using an attributed character and max. n characters long  
int ncurses_mvinch(int y, int x)
 
     Moves position and get attributed character at new position  
int ncurses_mvvline(int y, int x, int attrchar, int n)
 
     Sets new position and draw a vertical line using an attributed character and max. n characters long  
int ncurses_mvwaddstr(resource window, int y, int x, string text)
 
     Adds string at new position in window  
int ncurses_napms(int milliseconds)
 
     Sleep  
resource ncurses_new_panel(resource window)
 
     Create a new panel and associate it with window  
resource ncurses_newpad(int rows, int cols)
 
     Creates a new pad (window)  
int ncurses_newwin(int rows, int cols, int y, int x)
 
     Creates a new window  
bool ncurses_nl(void)
 
     Translates newline and carriage return / line feed  
bool ncurses_nocbreak(void)
 
     Switches terminal to cooked mode  
bool ncurses_noecho(void)
 
     Switches off keyboard input echo  
bool ncurses_nonl(void)
 
     Do not ranslate newline and carriage return / line feed  
int ncurses_noqiflush(void)
 
     Do not flush on signal characters 
bool ncurses_noraw(void)
 
     Switches terminal out of raw mode  
int ncurses_pair_content(int pair, int &f, int &b)
 
     Gets the RGB value for color  
int ncurses_panel_above(resource panel)
 
     Returns the panel above panel. If panel is null, returns the bottom panel in the stack  
int ncurses_panel_below(resource panel)
 
     Returns the panel below panel. If panel is null, returns the top panel in the stack  
int ncurses_panel_window(resource panel)
 
     Returns the window associated with panel  
int ncurses_pnoutrefresh(resource pad, int pminrow, int pmincol, int sminrow, int smincol, int smaxrow, int smaxcol)
 
     Copys a region from a pad into the virtual screen  
int ncurses_prefresh(resource pad, int pminrow, int pmincol, int sminrow, int smincol, int smaxrow, int smaxcol)
 
     Copys a region from a pad into the virtual screen  
int ncurses_putp(string text)
 
     ???  
int ncurses_qiflush(void)
 
     Flushes on signal characters  
bool ncurses_raw(void)
 
     Switches terminal into raw mode  
int ncurses_refresh(int ch)
 
     Refresh screen  
int ncurses_replace_panel(resource panel, resource window)
 
     Replaces the window associated with panel  
int ncurses_reset_prog_mode(void)
 
     Resets the prog mode saved by def_prog_mode  
int ncurses_reset_shell_mode(void)
 
     Resets the shell mode saved by def_shell_mode  
bool ncurses_resetty(void)
 
     Restores saved terminal state  
bool ncurses_savetty(void)
 
     Saves terminal state  
int ncurses_scr_dump(string filename)
 
     Dumps screen content to file  
int ncurses_scr_init(string filename)
 
     Initializes screen from file dump  
int ncurses_scr_restore(string filename)
 
     Restores screen from file dump  
int ncurses_scr_set(string filename)
 
     Inherits screen from file dump  
int ncurses_scrl(int count)
 
     Scrolls window content up or down without changing current position  
int ncurses_show_panel(resource panel)
 
     Places an invisible panel on top of the stack, making it visible  
bool ncurses_slk_attr(void)
 
     Returns current soft label keys attribute  
int ncurses_slk_attroff(int intarg)
 
     ???  
int ncurses_slk_attron(int intarg)
 
     ???  
int ncurses_slk_attrset(int intarg)
 
     ???  
bool ncurses_slk_clear(void)
 
     Clears soft label keys from screen  
int ncurses_slk_color(int intarg)
 
     Sets color for soft label keys 
int ncurses_slk_init(int intarg)
 
     Inits soft label keys  
bool ncurses_slk_noutrefresh(void)
 
     Copies soft label keys to virtual screen  
bool ncurses_slk_refresh(void)
 
     Copies soft label keys to screen  
bool ncurses_slk_restore(void)
 
     Restores soft label keys  
bool ncurses_slk_set(int labelnr, string label, int format)
 
     Sets function key labels  
bool ncurses_slk_touch(void)
 
     Forces output when ncurses_slk_noutrefresh is performed  
int ncurses_standend(void)
 
     Stops using 'standout' attribute  
int ncurses_standout(void)
 
     Starts using 'standout' attribute  
int ncurses_start_color(void)
 
     Starts using colors  
bool ncurses_termattrs(void)
 
     Returns a logical OR of all attribute flags supported by terminal  
string ncurses_termname(void)
 
     Returns terminal name  
void ncurses_timeout(int millisec)
 
     Sets timeout for special key sequences  
int ncurses_top_panel(resource panel)
 
     Moves a visible panel to the top of the stack  
int ncurses_typeahead(int fd)
 
     Specifys different filedescriptor for typeahead checking  
int ncurses_ungetch(int keycode)
 
     Puts a character back into the input stream  
int ncurses_ungetmouse(array mevent)
 
     Pushes mouse event to queue  
void ncurses_update_panels(void)
 
     Refreshes the virtual screen to reflect the relations between panels in the stack.  
bool ncurses_use_default_colors(void)
 
     Assigns terminal default colors to color id -1  
void ncurses_use_env(bool flag)
 
     Controls use of environment information about terminal size  
int ncurses_use_extended_names(bool flag)
 
     Controls use of extended names in terminfo descriptions  
int ncurses_vidattr(int intarg)
 
     ???  
int ncurses_vline(int charattr, int n)
 
     Draws a vertical line at current position using an attributed character and max. n characters long  
int ncurses_waddch(resource window, int ch)
 
     Adds character at current position in a window and advance cursor  
int ncurses_waddstr(resource window, string str [, int n])
 
     Outputs text at current postion in window  
int ncurses_wborder(resource window, int left, int right, int top, int bottom, int tl_corner, int tr_corner, int bl_corner, int br_corner)
 
     Draws a border around the window using attributed characters  
int ncurses_wclear(resource window)
 
     Clears window  
int ncurses_wcolor_set(resource window, int color_pair)
 
     Sets windows color pairings  
long ncurses_werase(resource window)
 
     Erase window contents  
int ncurses_wgetch(resource window)
 
     Reads a character from keyboard (window)  
int ncurses_whline(resource window, int charattr, int n)
 
     Draws a horizontal line in a window at current position using an attributed character and max. n characters long  
bool ncurses_wmouse_trafo(resource window, int y, int x, bool toscreen)
 
     Transforms window/stdscr coordinates  
int ncurses_wmove(resource window, int y, int x)
 
     Moves windows output position  
int ncurses_wnoutrefresh(resource window)
 
     Copies window to virtual screen  
int ncurses_wrefresh(resource window)
 
     Refreshes window on terminal screen  
int ncurses_wvline(resource window, int charattr, int n)
 
     Draws a vertical line in a window at current position using an attributed character and max. n characters long  
int wattroff(resource window, int attrs)
 
     Turns off attributes for a window  
int wattron(resource window, int attrs)
 
     Turns on attributes for a window  
int wattrset(resource window, int attrs)
 
     Set the attributes for a window  
int wstandend(resource window)
 
     End standout mode for a window  
int wstandout(resource window)
 
     Enter standout mode for a window  
# php4/ext/notes/php_notes.c
array notes_body(string server, string mailbox, int msg_number)
 
     Opens the message msg_number in the specified mailbox on the specified server (leave server blank for local) and returns an array of body text lines  
string notes_copy_db(string from_database_name, string to_database_name [, string title])
 
     Creates a note using form form_name  
bool notes_create_db(string database_name)
 
     Creates a Lotus Notes database  
string notes_create_note(string database_name, string form_name)
 
     Creates a note using form form_name  
bool notes_drop_db(string database_name)
 
     Drops a Lotus Notes database  
bool notes_find_note(string database_name, string name [, string type])
 
     Returns a note id found in database_name  
object notes_header_info(string server, string mailbox, int msg_number)
 
     Opens the message msg_number in the specified mailbox on the specified server (leave server blank for local)  
bool notes_list_msgs(string db)
 
     ???  
string notes_mark_read(string database_name, string user_name, string note_id)
 
     Marks a note_id as read for the User user_name.  Note: user_name must be fully distinguished user name  
string notes_mark_unread(string database_name, string user_name, string note_id)
 
     Marks a note_id as unread for the User user_name.  Note: user_name must be fully distinguished user name  
bool notes_nav_create(string database_name, string name)
 
     Creates a navigator name, in database_name  
string notes_search(string database_name, string keywords)
 
     Finds notes that match keywords in database_name.  The note(s) that are returned must be converted to base 16. Example base_convert($note_id, "10", "16")  
string notes_unread(string database_name, string user_name)
 
     Returns the unread note id's for the current User user_name.  Note: user_name must be fully distinguished user name  
string notes_version(string database_name)
 
     Gets the Lotus Notes version  
# php4/ext/oci8/oci8.c
bool ocibindbyname(int stmt, string name, mixed &var, [, int maxlength] [, int type])
 
     Bind a PHP variable to an Oracle placeholder by name  
bool ocicancel(int stmt)
 
     Prepare a new row of data for reading  
bool ocicloselob(object lob)
 
     Closes lob descriptor  
bool ocicollappend(object collection,value)
 
     Append an object to the collection  
bool ocicollassign(object collection,object)
 
     Assign a collection from another existing collection  
bool ocicollassignelem(object collection,ndx,val)
 
     Assign element val to collection at index ndx  
string ocicollgetelem(object collection,ndx)
 
     Retrieve the value at collection index ndx  
int ocicollmax(object collection)
 
     Return the max value of a collection.  For a varray this is the maximum length of the array  
int ocicollsize(object collection)
 
     Return the size of a collection  
bool ocicolltrim(object collection,num)
 
     Trim num elements from the end of a collection  
bool ocicolumnisnull(int stmt, int col)
 
     Tell whether a column is NULL  
string ocicolumnname(int stmt, int col)
 
     Tell the name of a column  
int ocicolumnprecision(int stmt, int col)
 
     Tell the precision of a column  
int ocicolumnscale(int stmt, int col)
 
     Tell the scale of a column  
int ocicolumnsize(int stmt, int col)
 
     Tell the maximum data size of a column  
mixed ocicolumntype(int stmt, int col)
 
     Tell the data type of a column  
mixed ocicolumntyperaw(int stmt, int col)
 
     Tell the raw oracle data type of a column  
bool ocicommit(int conn)
 
     Commit the current context  
bool ocidefinebyname(int stmt, string name, mixed &var [, int type])
 
     Define a PHP variable to an Oracle column by name  
array ocierror([int stmt|conn|global])
 
     Return the last error of stmt|conn|global. If no error happened returns false.  
bool ociexecute(int stmt [, int mode])
 
     Execute a parsed statement  
bool ocifetch(int stmt)
 
     Prepare a new row of data for reading  
int ocifetchinto(int stmt, array &output [, int mode])
 
     Fetch a row of result data into an array  
int ocifetchstatement(int stmt, array &output[, int skip][, int maxrows][, int flags])
 
     Fetch all rows of result data into an array  
bool ocifreecollection(object lob)
 
     Deletes collection object 
bool ocifreedesc(object lob)
 
     Deletes large object description  
bool ocifreestatement(int stmt)
 
     Free all resources associated with a statement  
void ociinternaldebug(int onoff)
 
     Toggle internal debugging output for the OCI extension  
string ociloadlob(object lob)
 
     Loads a large object  
bool ocilogoff(int conn)
 
     Disconnect from database  
int ocilogon(string user, string pass [, string db])
 
     Connect to an Oracle database and log on. Returns a new session.
    
bool ocinewcollection(int connection, string tdo,[string schema])
 
     Initialize a new collection  
int ocinewcursor(int conn)
 
     Return a new cursor (Statement-Handle) - use this to bind ref-cursors!  
string ocinewdescriptor(int connection [, int type])
 
     Initialize a new empty descriptor LOB/FILE (LOB is default)  
int ocinlogon(string user, string pass [, string db])
 
     Connect to an Oracle database and log on. returns a new session  
int ocinumcols(int stmt)
 
     Return the number of result columns in a statement  
int ociparse(int conn, string query)
 
     Parse a query and return a statement  
bool ocipasswordchange(int conn, string username, string old_password, string new_password)
 
    changes the password of an account 
int ociplogon(string user, string pass [, string db])
 
     Connect to an Oracle database using a persistent connection and log on. Returns a new session.  
string ociresult(int stmt, mixed column)
 
     Return a single column of result data  
bool ocirollback(int conn)
 
     Rollback the current context  
int ocirowcount(int stmt)
 
     Return the row count of an OCI statement  
bool ocisavelob(object lob)
 
     Saves a large object  
bool ocisavelobfile(object lob)
 
     Saves a large object file  
string ociserverversion(int conn)
 
     Return a string containing server version information  
int ocisetprefetch(int stmt, int prefetch_rows)
 
    sets the number of rows to be prefetched on execute to prefetch_rows for stmt  
string ocistatementtype(int stmt)
 
     Return the query type of an OCI statement  
bool ociwritelobtofile(object lob [, string filename] [, int start] [, int length])
 
     Writes a large object into a file  
bool ociwritetemporarylob(int stmt, int loc, string var)
 
     Return the row count of an OCI statement  
# php4/ext/odbc/birdstep.c
bool birdstep_autocommit(int index)
 
    
bool birdstep_close(int id)
 
    
bool birdstep_commit(int index)
 
    
int birdstep_connect(string server, string user, string pass)
 
    
int birdstep_exec(int index, string exec_str)
 
    
bool birdstep_fetch(int index)
 
    
string birdstep_fieldname(int index, int col)
 
    
int birdstep_fieldnum(int index)
 
    
bool birdstep_freeresult(int index)
 
    
bool birdstep_off_autocommit(int index)
 
    
mixed birdstep_result(int index, int col)
 
    
bool birdstep_rollback(int index)
 
    
# php4/ext/odbc/php_odbc.c
mixed odbc_autocommit(resource connection_id [, int OnOff])
 
     Toggle autocommit mode or get status  
bool odbc_binmode(int result_id, int mode)
 
     Handle binary column data  
void odbc_close(resource connection_id)
 
     Close an ODBC connection  
void odbc_close_all(void)
 
     Close all ODBC connections  
resource odbc_columnprivileges(resource connection_id, string catalog, string schema, string table, string column)
 
     Returns a result identifier that can be used to fetch a list of columns and associated privileges for the specified table  
resource odbc_columns(resource connection_id, string qualifier, string owner, string table_name, string column_name)
 
     Returns a result identifier that can be used to fetch a list of column names in specified tables  
bool odbc_commit(resource connection_id)
 
     Commit an ODBC transaction  
resource odbc_connect(string DSN, string user, string password [, int cursor_option])
 
     Connect to a datasource  
string odbc_cursor(resource result_id)
 
     Get cursor name  
array odbc_data_source(resource connection_id, int fetch_type)
 
     Return information about the currently connected data source  
string odbc_error([resource connection_id])
 
     Get the last error code  
string odbc_errormsg([resource connection_id])
 
     Get the last error message  
resource odbc_exec(resource connection_id, string query [, int flags])
 
     Prepare and execute an SQL statement  
bool odbc_execute(resource result_id [, array parameters_array])
 
     Execute a prepared statement  
array odbc_fetch_array(int result [, int rownumber])
 
     Fetch a result row as an associative array  
int odbc_fetch_into(resource result_id, array result_array, [, int rownumber])
 
     Fetch one result row into an array  
object odbc_fetch_object(int result [, int rownumber])
 
     Fetch a result row as an object  
bool odbc_fetch_row(resource result_id [, int row_number])
 
     Fetch a row  
int odbc_field_len(resource result_id, int field_number)
 
     Get the length (precision) of a column  
string odbc_field_name(resource result_id, int field_number)
 
     Get a column name  
int odbc_field_num(resource result_id, string field_name)
 
     Return column number  
int odbc_field_scale(resource result_id, int field_number)
 
     Get the scale of a column  
string odbc_field_type(resource result_id, int field_number)
 
     Get the datatype of a column  
resource odbc_foreignkeys(resource connection_id, string pk_qualifier, string pk_owner, string pk_table, string fk_qualifier, string fk_owner, string fk_table)
 
     Returns a result identifier to either a list of foreign keys in the specified table or a list of foreign keys in other tables that refer to the primary key in the specified table  
bool odbc_free_result(resource result_id)
 
     Free resources associated with a result  
resource odbc_gettypeinfo(resource connection_id [, int data_type])
 
     Returns a result identifier containing information about data types supported by the data source  
bool odbc_longreadlen(int result_id, int length)
 
     Handle LONG columns  
bool odbc_next_result(resource result_id)
 
     Checks if multiple results are avaiable  
int odbc_num_fields(resource result_id)
 
     Get number of columns in a result  
int odbc_num_rows(resource result_id)
 
     Get number of rows in a result  
resource odbc_pconnect(string DSN, string user, string password [, int cursor_option])
 
     Establish a persistent connection to a datasource  
resource odbc_prepare(resource connection_id, string query)
 
     Prepares a statement for execution  
resource odbc_primarykeys(resource connection_id, string qualifier, string owner, string table)
 
     Returns a result identifier listing the column names that comprise the primary key for a table  
resource odbc_procedurecolumns(resource connection_id [, string qualifier, string owner, string proc, string column])
 
     Returns a result identifier containing the list of input and output parameters, as well as the columns that make up the result set for the specified procedures  
resource odbc_procedures(resource connection_id [, string qualifier, string owner, string name])
 
     Returns a result identifier containg the list of procedure names in a datasource  
mixed odbc_result(resource result_id, mixed field)
 
     Get result data  
int odbc_result_all(resource result_id [, string format])
 
     Print result as HTML table  
bool odbc_rollback(resource connection_id)
 
     Rollback a transaction  
bool odbc_setoption(resource conn_id|result_id, int which, int option, int value)
 
     Sets connection or statement options  
resource odbc_specialcolumns(resource connection_id, int type, string qualifier, string owner, string table, int scope, int nullable)
 
     Returns a result identifier containing either the optimal set of columns that uniquely identifies a row in the table or columns that are automatically updated when any value in the row is updated by a transaction  
resource odbc_statistics(resource connection_id, string qualifier, string owner, string name, int unique, int accuracy)
 
     Returns a result identifier that contains statistics about a single table and the indexes associated with the table  
resource odbc_tableprivileges(resource connection_id, string qualifier, string owner, string name)
 
     Returns a result identifier containing a list of tables and the privileges associated with each table  
resource odbc_tables(resource connection_id [, string qualifier, string owner, string name, string table_types])
 
     Call the SQLTables function  
bool solid_fetch_prev(resource result_id)
 
      
# php4/ext/openssl/openssl.c
bool openssl_csr_export(resource csr, string &out [, bool notext=true])
 
     Exports a CSR to file or a var  
bool openssl_csr_export_to_file(resource csr, string outfilename [, bool notext=true])
 
     Exports a CSR to file  
bool openssl_csr_new(array dn, resource &privkey [, array configargs, array extraattribs])
 
     Generates a privkey and CSR  
resource openssl_csr_sign(mixed csr, mixed x509, mixed priv_key, long days [, array config_args [, long serial]])
 
     Signs a cert with another CERT  
mixed openssl_error_string(void)
 
     Returns a description of the last error, and alters the index of the error messages. Returns false when the are no more messages  
bool openssl_open(string data, &string opendata, string ekey, mixed privkey)
 
     Opens data  
bool openssl_pkcs7_decrypt(string infilename, string outfilename, mixed recipcert [, mixed recipkey])
 
     Decrypts the S/MIME message in the file name infilename and output the results to the file name outfilename.  recipcert is a CERT for one of the recipients. recipkey specifies the private key matching recipcert, if recipcert does not include the key  
bool openssl_pkcs7_encrypt(string infile, string outfile, mixed recipcerts, array headers [, long flags])
 
     Encrypts the message in the file named infile with the certificates in recipcerts and output the result to the file named outfile  
bool openssl_pkcs7_sign(string infile, string outfile, mixed signcert, mixed signkey, array headers [, long flags [, string extracertsfilename]])
 
     Signs the MIME message in the file named infile with signcert/signkey and output the result to file name outfile. headers lists plain text headers to exclude from the signed portion of the message, and should include to, from and subject as a minimum  
bool openssl_pkcs7_verify(string filename, long flags [, string signerscerts [, array cainfo [, string extracerts]]])
 
     Verifys that the data block is intact, the signer is who they say they are, and returns the CERTs of the signers  
bool openssl_pkey_export(mixed key, &mixed out [, string passphrase [, array config_args]])
 
     Gets an exportable representation of a key into a string or file  
bool openssl_pkey_export_to_file(mixed key, string outfilename [, string passphrase, array config_args)
 
     Gets an exportable representation of a key into a file  
void openssl_pkey_free(int key)
 
     Frees a key  
int openssl_pkey_get_private(string key [, string passphrase])
 
     Gets private keys  
int openssl_pkey_get_public(mixed cert)
 
     Gets public key from X.509 certificate  
resource openssl_pkey_new([array configargs])
 
     Generates a new private key  
bool openssl_private_decrypt(string data, string &decrypted, mixed key [, int padding])
 
     Decrypts data with private key  
bool openssl_private_encrypt(string data, string crypted, mixed key [, int padding])
 
     Encrypts data with private key  
bool openssl_public_decrypt(string data, string crypted, resource key [, int padding])
 
     Decrypts data with public key  
bool openssl_public_encrypt(string data, string crypted, mixed key [, int padding])
 
     Encrypts data with public key  
int openssl_seal(string data, &string sealdata, &array ekeys, array pubkeys)
 
     Seals data  
bool openssl_sign(string data, &string signature, mixed key)
 
     Signs data  
int openssl_verify(string data, string signature, mixed key)
 
     Verifys data  
bool openssl_x509_check_private_key(mixed cert, mixed key)
 
     Checks if a private key corresponds to a CERT  
int openssl_x509_checkpurpose(mixed x509cert, int purpose, array cainfo [, string untrustedfile])
 
     Checks the CERT to see if it can be used for the purpose in purpose. cainfo holds information about trusted CAs  
bool openssl_x509_export(mixed x509, string &out [, bool notext = true])
 
     Exports a CERT to file or a var  
bool openssl_x509_export_to_file(mixed x509, string outfilename [, bool notext = true])
 
     Exports a CERT to file or a var  
void openssl_x509_free(resource x509)
 
     Frees X.509 certificates  
array openssl_x509_parse(mixed x509 [, bool shortnames=true])
 
     Returns an array of the fields/values of the CERT  
resource openssl_x509_read(mixed cert)
 
     Reads X.509 certificates  
# php4/ext/oracle/oracle.c
 
    
int ora_bind(int cursor, string php_variable_name, string sql_parameter_name, int length [, int type])
 
     Bind a PHP variable to an Oracle parameter  
int ora_close(int cursor)
 
     Close an Oracle cursor  
string ora_columnname(int cursor, int column)
 
     Get the name of an Oracle result column  
int ora_columnsize(int cursor, int column)
 
     Return the size of the column  
string ora_columntype(int cursor, int column) 
 
     Get the type of an Oracle result column  
int ora_commit(int connection)
 
     Commit an Oracle transaction  
int ora_commitoff(int connection)
 
     Disable automatic commit  
int ora_commiton(int connection)
 
     Enable automatic commit  
int ora_do(int connection, int cursor)
 
     Parse and execute a statement and fetch first result row  
string ora_error(int cursor_or_connection)
 
     Get an Oracle error message  
int ora_errorcode(int cursor_or_connection)
 
     Get an Oracle error code  
int ora_exec(int cursor)
 
     Execute a parsed statement  
int ora_fetch(int cursor)
 
     Fetch a row of result data from a cursor  
int ora_fetch_into(int cursor, array result [, int flags])
 
     Fetch a row into the specified result array  
mixed ora_getcolumn(int cursor, int column)
 
     Get data from a fetched row  
int ora_logoff(int connection)
 
     Close an Oracle connection  
int ora_logon(string user, string password)
 
     Open an Oracle connection  
int ora_numcols(int cursor)
 
     Returns the numbers of columns in a result  
int ora_numrows(int cursor)
 
     Returns the number of rows in a result  
int ora_open(int connection)
 
     Open an Oracle cursor  
int ora_parse(int cursor, string sql_statement [, int defer])
 
     Parse an Oracle SQL statement  
int ora_plogon(string user, string password)
 
     Open a persistent Oracle connection  
int ora_rollback(int connection)
 
     Roll back an Oracle transaction  
# php4/ext/overload/overload.c
void overload(string class_entry)
 
      Enables property and method call overloading for a class.  
# php4/ext/ovrimos/ovrimos.c
int ovrimos_autocommit(int connection_id, int OnOff)
 
     Toggle autocommit mode
     There can be problems with pconnections! 
void ovrimos_close(int connection)
 
     Close a connection  
int ovrimos_commit(int connection_id)
 
     Commit an ovrimos transaction  
int ovrimos_connect(string host, string db, string user, string password)
 
     Connect to an Ovrimos database  
string ovrimos_cursor(int result_id)
 
     Get cursor name  
int ovrimos_exec(int connection_id, string query)
 
     Prepare and execute an SQL statement  
int ovrimos_execute(int result_id [, array parameters_array])
 
     Execute a prepared statement  
int ovrimos_fetch_into(int result_id, array result_array [, string how, [int rownumber]])
 
     Fetch one result row into an array
     how: 'Next' (default), 'Prev', 'First', 'Last', 'Absolute'
      
int ovrimos_fetch_row(int result_id [, int how, [int row_number]])
 
     how: 'Next' (default), 'Prev', 'First', 'Last', 'Absolute'
     Fetch a row  
int ovrimos_field_len(int result_id, int field_number)
 
     Get the length of a column  
string ovrimos_field_name(int result_id, int field_number)
 
     Get a column name  
int ovrimos_field_num(int result_id, string field_name)
 
     Return column number  
string ovrimos_field_type(int result_id, int field_number)
 
     Get the datatype of a column  
int ovrimos_free_result(int result_id)
 
     Free resources associated with a result  
int ovrimos_longreadlen(int result_id, int length)
 
     Handle LONG columns  
int ovrimos_num_fields(int result_id)
 
     Get number of columns in a result  
int ovrimos_num_rows(int result_id)
 
     Get number of rows in a result  
int ovrimos_prepare(int connection_id, string query)
 
     Prepares a statement for execution  
string ovrimos_result(int result_id, mixed field)
 
     Get result data  
int ovrimos_result_all(int result_id [, string format])
 
     Print result as HTML table  
int ovrimos_rollback(int connection_id)
 
     Rollback a transaction  
int ovrimos_setoption(int conn_id|result_id, int which, int option, int value)
 
     Sets connection or statement options  
# php4/ext/pcntl/pcntl.c
int pcntl_alarm(int seconds)
 
     Set an alarm clock for delivery of a signal 
bool pcntl_exec(string path [, array args [, array envs]])
 
     Executes specified program in current process space as defined by exec(2)  
int pcntl_fork(void)
 
     Forks the currently running process following the same behavior as the UNIX fork() system call 
bool pcntl_signal(long signo, mixed handle, [bool restart_syscalls])
 
     Assigns a system signal handler to a PHP function  
int pcntl_waitpid(long pid, long status, long options)
 
     Waits on or returns the status of a forked child as defined by the waitpid() system call  
int pcntl_wexitstatus(long status) 
 
     Returns the status code of a child's exit  
bool pcntl_wifexited(long status) 
 
     Returns true if the child status code represents a successful exit  
bool pcntl_wifsignaled(long status) 
 
     Returns true if the child status code represents a process that was terminated due to a signal  
bool pcntl_wifstopped(long status) 
 
     Returns true if the child status code represents a stopped process (WUNTRACED must have been used with waitpid)  
int pcntl_wstopsig(long status) 
 
     Returns the number of the signal that caused the process to stop who's status code is passed  
int pcntl_wtermsig(long status) 
 
     Returns the number of the signal that terminated the process who's status code is passed   
# php4/ext/pcre/php_pcre.c
array preg_grep(string regex, array input)
 
     Searches array and returns entries which match regex  
int preg_match(string pattern, string subject [, array subpatterns [, int flags [, int offset ]]])
 
     Perform a Perl-style regular expression match  
int preg_match_all(string pattern, string subject, array subpatterns [, int flags [, int offset]])
 
     Perform a Perl-style global regular expression match  
string preg_quote(string str, string delim_char)
 
     Quote regular expression characters plus an optional character  
string preg_replace(mixed regex, mixed replace, mixed subject [, int limit])
 
     Perform Perl-style regular expression replacement.  
string preg_replace_callback(mixed regex, mixed callback, mixed subject [, int limit])
 
     Perform Perl-style regular expression replacement using replacement callback.  
array preg_split(string pattern, string subject [, int limit [, int flags]]) 
 
     Split string into an array using a perl-style regular expression as a delimiter  
# php4/ext/pdf/pdf.c
void pdf_add_annotation(int pdfdoc, float xll, float yll, float xur, float xur, string title, string text)
 
     Sets annotation (depreciated use pdf_add_note instead)  
int pdf_add_bookmark(int pdfdoc, string text [, int parent, int open])
 
     Adds bookmark for current page  
void pdf_add_launchlink(int pdfdoc, float llx, float lly, float urx, float ury, string filename)
 
     Adds link to web resource  
void pdf_add_locallink(int pdfdoc, float llx, float lly, float urx, float ury, int page, string dest)
 
     Adds link to web resource  
void pdf_add_note(int pdfdoc, float llx, float lly, float urx, float ury, string contents, string title, string icon, int open)
 
     Sets annotation  
void pdf_add_pdflink(int pdfdoc, float llx, float lly, float urx, float ury, string filename, int page, string dest)
 
     Adds link to PDF document  
void pdf_add_thumbnail(int pdf, int image);
 
   * Add an existing image as thumbnail for the current page.  
void pdf_add_weblink(int pdfdoc, float llx, float lly, float urx, float ury, string url)
 
     Adds link to web resource  
void pdf_arc(int pdfdoc, float x, float y, float radius, float start, float end)
 
     Draws an arc  
void pdf_arcn(int pdf, float x, float y, float r, float alpha, float beta);
 
   * Draw a clockwise circular arc from alpha to beta degrees.  
void pdf_attach_file(int pdf, float lly, float lly, float urx, float ury, string filename, string description, string author, string mimetype, string icon)
 
     Adds a file attachment annotation at the rectangle specified by his lower left and upper right corners  
void pdf_begin_page(int pdfdoc, float width, float height)
 
     Starts page  
int pdf_begin_pattern(int pdf, float width, float height, float xstep, float ystep, int painttype);
 
   * Start a new pattern definition.  
int pdf_begin_template(int pdf, float width, float height);
 
   * Start a new template definition.  
void pdf_circle(int pdfdoc, float x, float y, float radius)
 
     Draws a circle  
void pdf_clip(int pdfdoc)
 
     Clips to current path  
void pdf_close(int pdfdoc)
 
     Closes the pdf document  
void pdf_close_image(int pdf, int pdfimage)
 
     Closes the PDF image  
void pdf_close_pdi(int pdf, int doc);
 
   * Close all open page handles, and close the input PDF document.  
void pdf_close_pdi_page(int pdf, int page);
 
   * Close the page handle, and free all page-related resources.  
void pdf_closepath(int pdfdoc)
 
     Close path  
void pdf_closepath_fill_stroke(int pdfdoc)
 
     Close, fill and stroke current path  
void pdf_closepath_stroke(int pdfdoc)
 
     Close path and draw line along path  
void pdf_concat(int pdf, float a, float b, float c, float d, float e, float f)
 
     Concatenates a matrix to the current transformation matrix for text and graphics  
void pdf_continue_text(int pdfdoc, string text)
 
     Output text in next line  
void pdf_curveto(int pdfdoc, float x1, float y1, float x2, float y2, float x3, float y3)
 
     Draws a curve  
bool pdf_delete(int pdfdoc)
 
     Deletes the PDF object  
void pdf_end_page(int pdfdoc)
 
     Ends page  
void pdf_end_pattern(int pdf);
 
   * Finish the pattern definition.  
void pdf_end_template(int pdf);
 
   * Finish the template definition.  
void pdf_endpath(int pdfdoc)
 
     Ends current path  
void pdf_fill(int pdfdoc)
 
     Fill current path  
void pdf_fill_stroke(int pdfdoc)
 
     Fill and stroke current path  
int pdf_findfont(int pdfdoc, string fontname, string encoding [, int embed])
 
     Prepares the font fontname for later use with pdf_setfont()  
int pdf_get_buffer(int pdfdoc)
 
     Fetches the full buffer containig the generated PDF data  
int pdf_get_font(int pdfdoc)
 
     Gets the current font  
string pdf_get_fontname(int pdfdoc)
 
     Gets the current font name  
float pdf_get_fontsize(int pdfdoc)
 
     Gets the current font size  
int pdf_get_image_height(int pdf, int pdfimage)
 
     Returns the height of an image  
int pdf_get_image_width(int pdf, int pdfimage)
 
     Returns the width of an image  
int pdf_get_majorversion()
 
     Returns the major version number of the PDFlib  
int pdf_get_minorversion()
 
     Returns the minor version number of the PDFlib  
string pdf_get_parameter(int pdfdoc, string key, mixed modifier)
 
     Gets arbitrary parameters  
string pdf_get_pdi_parameter(int pdf, string key, int doc, int page, int index);
 
   * Get the contents of some PDI document parameter with string type.  
float pdf_get_pdi_value(int pdf, string key, int doc, int page, int index);
 
   * Get the contents of some PDI document parameter with numerical type.  
float pdf_get_value(int pdfdoc, string key, float modifier)
 
     Gets arbitrary value  
void pdf_initgraphics(int pdf);
 
   * Reset all implicit color and graphics state parameters to their defaults.  
void pdf_lineto(int pdfdoc, float x, float y)
 
     Draws a line  
int pdf_makespotcolor(int pdf, string spotname);
 
   * Make a named spot color from the current color.  
void pdf_moveto(int pdfdoc, float x, float y)
 
     Sets current point  
int pdf_new()
 
     Creates a new PDF object  
int pdf_open([int filedesc])
 
     Opens a new pdf document. If filedesc is NULL, document is created in memory. This is the old interface, only for compatibility use pdf_new      pdf_open_file instead  
int pdf_open_ccitt(int pdf, string filename, int width, int height, int bitreverse, int k, int blackls1)
 
     Opens an image file with raw CCITT G3 or G4 compresed bitmap data  
int pdf_open_file(int pdfdoc [, char filename])
 
     Opens a new PDF document. If filename is NULL, document is created in memory. This is not yet fully supported  
int pdf_open_gif(int pdf, string giffile)
 
     Opens a GIF file and returns an image for placement in a pdf object  
int pdf_open_image(int pdf, string type, string source, string data, long length, int width, int height, int components, int bpc, string params)
 
     Opens an image of the given type and returns an image for placement in a PDF document  
int pdf_open_image_file(int pdf, string type, string file, string stringparam, int intparam)
 
     Opens an image file of the given type and returns an image for placement in a PDF document  
int pdf_open_jpeg(int pdf, string jpegfile)
 
     Opens a JPEG file and returns an image for placement in a PDF document  
int pdf_open_memory_image(int pdf, int image)
 
     Takes an GD image and returns an image for placement in a PDF document  
int pdf_open_pdi(int pdf, string filename, string stringparam, int intparam);
 
   * Open an existing PDF document and prepare it for later use.  
int pdf_open_pdi_page(int pdf, int doc, int page, string label);
 
   * Prepare a page for later use with PDF_place_image().  
int pdf_open_png(int pdf, string pngfile)
 
     Opens a PNG file and returns an image for placement in a PDF document  
int pdf_open_tiff(int pdf, string tifffile)
 
     Opens a TIFF file and returns an image for placement in a PDF document  
void pdf_place_image(int pdf, int pdfimage, float x, float y, float scale)
 
     Places image in the PDF document  
void pdf_place_pdi_page(int pdf, int page, float x, float y, float sx, float sy)
 
   * Place a PDF page with the lower left corner at (x, y), and scale it.  
void pdf_rect(int pdfdoc, float x, float y, float width, float height)
 
     Draws a rectangle  
void pdf_restore(int pdfdoc)
 
     Restores formerly saved enviroment  
void pdf_rotate(int pdfdoc, float angle)
 
     Sets rotation  
void pdf_save(int pdfdoc)
 
     Saves current enviroment  
void pdf_scale(int pdfdoc, float x_scale, float y_scale)
 
     Sets scaling  
void pdf_set_border_color(int pdfdoc, float red, float green, float blue)
 
     Sets color of box surounded all kinds of annotations and links  
void pdf_set_border_dash(int pdfdoc, float black, float white)
 
     Sets the border dash style of all kinds of annotations and links  
void pdf_set_border_style(int pdfdoc, string style, float width)
 
     Sets style of box surounding all kinds of annotations and link  
void pdf_set_char_spacing(int pdfdoc, float space)
 
     Sets character spacing  
void pdf_set_duration(int pdfdoc, float duration)
 
     Sets duration between pages  
void pdf_set_font(int pdfdoc, string font, float size, string encoding [, int embed])
 
     Select the current font face, size and encoding  
void pdf_set_horiz_scaling(int pdfdoc, float scale)
 
     Sets horizontal scaling of text  
bool pdf_set_info(int pdfdoc, string fieldname, string value)
 
     Fills an info field of the document  
bool pdf_set_info_author(int pdfdoc, string author)
 
     Fills the author field of the document  
bool pdf_set_info_creator(int pdfdoc, string creator)
 
     Fills the creator field of the document  
bool pdf_set_info_keywords(int pdfdoc, string keywords)
 
     Fills the keywords field of the document  
bool pdf_set_info_subject(int pdfdoc, string subject)
 
     Fills the subject field of the document  
bool pdf_set_info_title(int pdfdoc, string title)
 
     Fills the title field of the document  
void pdf_set_leading(int pdfdoc, float distance)
 
     Sets distance between text lines  
void pdf_set_parameter(int pdfdoc, string key, string value)
 
     Sets arbitrary parameters  
void pdf_set_text_pos(int pdfdoc, float x, float y)
 
     Sets the position of text for the next pdf_show call  
void pdf_set_text_rendering(int pdfdoc, int mode)
 
     Determines how text is rendered  
void pdf_set_text_rise(int pdfdoc, float value)
 
     Sets the text rise  
void pdf_set_transition(int pdfdoc, int transition)
 
     Sets transition between pages  
void pdf_set_value(int pdfdoc, string key, float value)
 
     Sets arbitrary value  
void pdf_set_word_spacing(int pdfdoc, float space)
 
     Sets spacing between words  
void pdf_setcolor(int pdf, string type, string colorspace, float c1 [, float c2 [, float c3 [, float c4]]]);
 
   * Set the current color space and color.  
void pdf_setdash(int pdfdoc, float black, float white)
 
     Sets dash pattern  
void pdf_setflat(int pdfdoc, float value)
 
     Sets flatness  
void pdf_setfont(int pdfdoc, int font, float fontsize)
 
     Sets the current font in the fiven fontsize  
void pdf_setgray(int pdfdoc, float value)
 
     Sets drawing and filling color to gray value  
void pdf_setgray_fill(int pdfdoc, float value)
 
     Sets filling color to gray value  
void pdf_setgray_stroke(int pdfdoc, float value)
 
     Sets drawing color to gray value  
void pdf_setlinecap(int pdfdoc, int value)
 
     Sets linecap parameter  
void pdf_setlinejoin(int pdfdoc, int value)
 
     Sets linejoin parameter  
void pdf_setlinewidth(int pdfdoc, float width)
 
     Sets line width  
void pdf_setmatrix(int pdf, float a, float b, float c, float d, float e, float f)
 
     Explicitly set the current transformation matrix.  
void pdf_setmiterlimit(int pdfdoc, float value)
 
     Sets miter limit  
void pdf_setpolydash(int pdfdoc, float darray)
 
     Sets more complicated dash pattern  
void pdf_setrgbcolor(int pdfdoc, float red, float green, float blue)
 
     Sets drawing and filling color to RGB color value  
void pdf_setrgbcolor_fill(int pdfdoc, float red, float green, float blue)
 
     Sets filling color to RGB color value  
void pdf_setrgbcolor_stroke(int pdfdoc, float red, float green, float blue)
 
     Sets drawing color to RGB color value  
void pdf_show(int pdfdoc, string text)
 
     Output text at current position  
int pdf_show_boxed(int pdfdoc, string text, float x_koor, float y_koor, float width, float height, string mode [, string feature])
 
     Output text formated in a boxed  
void pdf_show_xy(int pdfdoc, string text, float x_koor, float y_koor)
 
     Output text at position  
void pdf_skew(int pdfdoc, float xangle, float yangle)
 
     Skew the coordinate system  
float pdf_stringwidth(int pdfdoc, string text [, int font, float size])
 
     Returns width of text in current font  
void pdf_stroke(int pdfdoc)
 
     Draw line along path path  
void pdf_translate(int pdfdoc, float x, float y)
 
     Sets origin of coordinate system  
# php4/ext/pfpro/pfpro.c
void pfpro_cleanup()
 
     Shuts down the Payflow Pro library  
void pfpro_init()
 
     Initializes the Payflow Pro library  
array pfpro_process(array parmlist [, string hostaddress [, int port, [, int timeout [, string proxyAddress [, int proxyPort [, string proxyLogon [, string proxyPassword]]]]]]])
 
     Payflow Pro transaction processing using arrays  
string pfpro_process_raw(string parmlist [, string hostaddress [, int port, [, int timeout [, string proxyAddress [, int proxyPort [, string proxyLogon [, string proxyPassword]]]]]]])
 
     Raw Payflow Pro transaction processing  
string pfpro_version()
 
     Returns the version of the Payflow Pro library  
# php4/ext/pgsql/pgsql.c
int pg_affected_rows(resource result)
 
     Returns the number of affected tuples  
bool pg_cancel_query(resource connection)
 
     Cancel request  
string pg_client_encoding([resource connection])
 
     Get the current client encoding  
bool pg_close([resource connection])
 
     Close a PostgreSQL connection  
resource pg_connect(string connection_string[, int connect_type] | [string host, string port [, string options [, string tty,]]] string database)
 
     Open a PostgreSQL connection  
bool pg_connection_busy(resource connection)
 
     Get connection is busy or not  
bool pg_connection_reset(resource connection)
 
     Reset connection (reconnect)  
int pg_connection_status(resource connnection)
 
     Get connection status  
array pg_convert(resource db, string table, array values[, int options])
 
     Check and convert values for PostgreSQL SQL statement  
bool pg_copy_from(resource connection, string table_name , array rows [, string delimiter [, string null_as]])
 
     Copy table from array  
array pg_copy_to(resource connection, string table_name [, string delimiter [, string null_as]])
 
     Copy table to array  
string pg_dbname([resource connection])
 
     Get the database name  
mixed pg_delete(resource db, string table, array ids[, int options])
 
     Delete records has ids (id=>value)  
bool pg_end_copy([resource connection])
 
     Sync with backend. Completes the Copy command  
string pg_escape_bytea(string data)
 
     Escape binary for bytea type   
string pg_escape_string(string data)
 
     Escape string for text/char type  
array pg_fetch_all(resource result)
 
     Fetch all rows into array  
array pg_fetch_array(resource result [, int row [, int result_type]])
 
     Fetch a row as an array  
array pg_fetch_assoc(resource result [, int row])
 
     Fetch a row as an assoc array  
object pg_fetch_object(resource result [, int row])
 
     Fetch a row as an object  
mixed pg_fetch_result(resource result, [int row_number,] mixed field_name)
 
     Returns values from a result identifier  
array pg_fetch_row(resource result [, int row [, int result_type]])
 
     Get a row as an enumerated array  
int pg_field_is_null(resource result, [int row,] mixed field_name_or_number)
 
     Test if a field is NULL  
string pg_field_name(resource result, int field_number)
 
     Returns the name of the field  
int pg_field_num(resource result, string field_name)
 
     Returns the field number of the named field  
int pg_field_prtlen(resource result, [int row,] mixed field_name_or_number)
 
     Returns the printed length  
int pg_field_size(resource result, int field_number)
 
     Returns the internal size of the field  
string pg_field_type(resource result, int field_number)
 
     Returns the type name for the given field  
bool pg_free_result(resource result)
 
     Free result memory  
resource pg_get_notify([resource connection[, result_type]])
 
     Get asynchronous notification  
resource pg_get_pid([resource connection)
 
     Get backend(server) pid  
resource pg_get_result(resource connection)
 
     Get asynchronous query result  
string pg_host([resource connection])
 
     Returns the host name associated with the connection  
mixed pg_insert(resource db, string table, array values[, int options])
 
     Insert values (filed=>value) to table  
string pg_last_error([resource connection])
 
     Get the error message string  
string pg_last_notice(resource connection)
 
     Returns the last notice set by the backend  
string pg_last_oid(resource result)
 
     Returns the last object identifier  
bool pg_lo_close(resource large_object)
 
     Close a large object  
int pg_lo_create([resource connection])
 
     Create a large object  
bool pg_lo_export([resource connection, ] int objoid, string filename)
 
     Export large object direct to filesystem  
int pg_lo_import([resource connection, ] string filename)
 
     Import large object direct from filesystem  
resource pg_lo_open([resource connection,] int large_object_oid, string mode)
 
     Open a large object and return fd  
string pg_lo_read(resource large_object [, int len])
 
     Read a large object  
int pg_lo_read_all(resource large_object)
 
     Read a large object and send straight to browser  
bool pg_lo_seek(resource large_object, int offset [, int whence])
 
     Seeks position of large object  
int pg_lo_tell(resource large_object)
 
     Returns current position of large object  
bool pg_lo_unlink([resource connection,] string large_object_oid)
 
     Delete a large object  
int pg_lo_write(resource large_object, string buf [, int len])
 
     Write a large object  
array pg_meta_data(resource db, string table)
 
     Get meta_data  
int pg_num_fields(resource result)
 
     Return the number of fields in the result  
int pg_num_rows(resource result)
 
     Return the number of rows in the result  
string pg_options([resource connection])
 
     Get the options associated with the connection  
resource pg_pconnect(string connection_string | [string host, string port [, string options [, string tty,]]] string database)
 
     Open a persistent PostgreSQL connection  
bool pg_ping(resource connection)
 
     Ping database. If connection is bad, try to reconnect.  
int pg_port([resource connection])
 
     Return the port number associated with the connection  
bool pg_put_line([resource connection,] string query)
 
     Send null-terminated string to backend server 
resource pg_query([resource connection,] string query)
 
     Execute a query  
string pg_result_error(resource result)
 
     Get error message associated with result  
mixed pg_result_seek(resource result, int offset)
 
     Set internal row offset  
int pg_result_status(resource result[, long result_type])
 
     Get status of query result  
mixed pg_select(resource db, string table, array ids[, int options])
 
     Select records that has ids (id=>value)  
bool pg_send_query(resource connection, string qeury)
 
     Send asynchronous query  
int pg_set_client_encoding([resource connection,] string encoding)
 
     Set client encoding  
bool pg_trace(string filename [, string mode [, resource connection]])
 
     Enable tracing a PostgreSQL connection  
string pg_tty([resource connection])
 
     Return the tty name associated with the connection  
string pg_unescape_bytea(string data)
 
     Unescape binary for bytea type   
bool pg_untrace([resource connection])
 
     Disable tracing of a PostgreSQL connection  
mixed pg_update(resource db, string table, array fields, array ids[, int options])
 
     Update table using values (field=>value) and ids (id=>value)  
# php4/ext/posix/posix.c
string posix_ctermid(void)
 
     Generate terminal path name (POSIX.1, 4.7.1)  
int posix_get_last_error(void)
 
     Retrieve the error number set by the last posix function which failed.  
string posix_getcwd(void)
 
     Get working directory pathname (POSIX.1, 5.2.2)  
int posix_getegid(void)
 
     Get the current effective group id (POSIX.1, 4.2.1)  
int posix_geteuid(void)
 
     Get the current effective user id (POSIX.1, 4.2.1)  
int posix_getgid(void)
 
     Get the current group id (POSIX.1, 4.2.1)  
array posix_getgrgid(long gid) 
 
     Group database access (POSIX.1, 9.2.1)  
array posix_getgrnam(string groupname)
 
     Group database access (POSIX.1, 9.2.1)  
array posix_getgroups(void)
 
     Get supplementary group id's (POSIX.1, 4.2.3)  
string posix_getlogin(void) 
 
     Get user name (POSIX.1, 4.2.4)  
int posix_getpgid(void)
 
     Get the process group id of the specified process (This is not a POSIX function, but a SVR4ism, so we compile conditionally)  
int posix_getpgrp(void)
 
     Get current process group id (POSIX.1, 4.3.1)  
int posix_getpid(void)
 
     Get the current process id (POSIX.1, 4.1.1)  
int posix_getppid(void)
 
     Get the parent process id (POSIX.1, 4.1.1)  
array posix_getpwnam(string groupname) 
 
     User database access (POSIX.1, 9.2.2)  
array posix_getpwuid(long uid) 
 
     User database access (POSIX.1, 9.2.2)  
int posix_getrlimit(void)
 
     Get system resource consumption limits (This is not a POSIX function, but a BSDism and a SVR4ism. We compile conditionally)  
int posix_getsid(void)
 
     Get process group id of session leader (This is not a POSIX function, but a SVR4ism, so be compile conditionally)  
int posix_getuid(void)
 
     Get the current user id (POSIX.1, 4.2.1)  
bool posix_isatty(int fd)
 
     Determine if filedesc is a tty (POSIX.1, 4.7.1)  
bool posix_kill(int pid, int sig)
 
     Send a signal to a process (POSIX.1, 3.3.2)  
bool posix_mkfifo(string pathname, int mode)
 
     Make a FIFO special file (POSIX.1, 5.4.2)  
bool posix_setegid(long uid)
 
     Set effective group id  
bool posix_seteuid(long uid)
 
     Set effective user id  
bool posix_setgid(int uid)
 
     Set group id (POSIX.1, 4.2.2)  
bool posix_setpgid(int pid, int pgid)
 
     Set process group id for job control (POSIX.1, 4.3.3)  
int posix_setsid(void)
 
     Create session and set process group id (POSIX.1, 4.3.2)  
bool posix_setuid(long uid)
 
     Set user id (POSIX.1, 4.2.2)  
string posix_strerror(int errno)
 
     Retrieve the system error message associated with the given errno.  
array posix_times(void)
 
     Get process times (POSIX.1, 4.5.2)  
string posix_ttyname(int fd)
 
     Determine terminal device name (POSIX.1, 4.7.2)  
array posix_uname(void)
 
     Get system name (POSIX.1, 4.4.1)  
# php4/ext/pspell/pspell.c
int pspell_add_to_personal(int pspell, string word)
 
     Adds a word to a personal list  
int pspell_add_to_session(int pspell, string word)
 
     Adds a word to the current session  
int pspell_check(int pspell, string word)
 
     Returns true if word is valid  
int pspell_clear_session(int pspell)
 
     Clears the current session  
int pspell_config_create(string language [, string spelling [, string jargon [, string encoding]]])
 
     Create a new config to be used later to create a manager  
int pspell_config_ignore(int conf, int ignore)
 
     Ignore words <= n chars  
int pspell_config_mode(int conf, long mode)
 
     Select mode for config (PSPELL_FAST, PSPELL_NORMAL or PSPELL_BAD_SPELLERS)  
int pspell_config_personal(int conf, string personal)
 
     Use a personal dictionary for this config  
int pspell_config_repl(int conf, string repl)
 
     Use a personal dictionary with replacement pairs for this config  
int pspell_config_runtogether(int conf, bool runtogether)
 
     Consider run-together words as valid components  
int pspell_config_save_repl(int conf, bool save)
 
     Save replacement pairs when personal list is saved for this config  
int pspell_new(string language [, string spelling [, string jargon [, string encoding [, int mode]]]])
 
     Load a dictionary  
int pspell_new_config(int config)
 
     Load a dictionary based on the given config  
int pspell_new_personal(string personal, string language [, string spelling [, string jargon [, string encoding [, int mode]]]])
 
     Load a dictionary with a personal wordlist 
int pspell_save_wordlist(int pspell)
 
     Saves the current (personal) wordlist  
int pspell_store_replacement(int pspell, string misspell, string correct)
 
     Notify the dictionary of a user-selected replacement  
array pspell_suggest(int pspell, string word)
 
     Returns array of suggestions  
# php4/ext/qtdom/qtdom.c
string qdom_error()
 
     Returns the error string from the last QDOM operation or FALSE if no errors occured. 
object qdom_tree( string )
 
     creates a tree of an xml string  
# php4/ext/readline/readline.c
string readline([string prompt]) 
 
     Reads a line  
void readline_add_history([string prompt]) 
 
     Adds a line to the history  
void readline_clear_history(void) 
 
     Clears the history  
void readline_completion_function(string funcname) 
 
     Readline completion function?  
mixed readline_info([string varname] [, string newvalue]) 
 
     Gets/sets various internal readline variables.  
array readline_list_history(void) 
 
     Lists the history  
int readline_read_history([string filename] [, int from] [,int to]) 
 
     Reads the history  
int readline_write_history([string filename]) 
 
     Writes the history  
# php4/ext/recode/recode.c
bool recode_file(string request, resource input, resource output)
 
     Recode file input into file output according to request  
string recode_string(string request, string str)
 
     Recode string str according to request string  
# php4/ext/session/session.c
int session_cache_expire([int new_cache_expire])
 
     Return the current cache expire. If new_cache_expire is given, the current cache_expire is replaced with new_cache_expire  
string session_cache_limiter([string new_cache_limiter])
 
     Return the current cache limiter. If new_cache_limited is given, the current cache_limiter is replaced with new_cache_limiter  
bool session_decode(string data)
 
     Deserializes data and reinitializes the variables  
bool session_destroy(void)
 
     Destroy the current session and all data associated with it  
string session_encode(void)
 
     Serializes the current setup and returns the serialized representation  
array session_get_cookie_params(void)
 
     Return the session cookie parameters  
string session_id([string newid])
 
     Return the current session id. If newid is given, the session id is replaced with newid  
bool session_is_registered(string varname)
 
     Checks if a variable is registered in session  
string session_module_name([string newname])
 
     Return the current module name used for accessing session data. If newname is given, the module name is replaced with newname  
string session_name([string newname])
 
     Return the current session name. If newname is given, the session name is replaced with newname  
bool session_regenerate_id()
 
     Update the current session id with a newly generated one.  
bool session_register(mixed var_names [, mixed ...])
 
     Adds varname(s) to the list of variables which are freezed at the session end  
string session_save_path([string newname])
 
     Return the current save path passed to module_name. If newname is given, the save path is replaced with newname  
void session_set_cookie_params(int lifetime [, string path [, string domain [, bool secure]]])
 
     Set session cookie parameters  
void session_set_save_handler(string open, string close, string read, string write, string destroy, string gc)
 
     Sets user-level functions  
bool session_start(void)
 
     Begin session - reinitializes freezed variables, registers browsers etc  
bool session_unregister(string varname)
 
     Removes varname from the list of variables which are freezed at the session end  
void session_unset(void)
 
     Unset all registered variables  
void session_write_close(void)
 
     Write session data and end session  
# php4/ext/shmop/shmop.c
void shmop_close (int shmid)
 
     closes a shared memory segment  
bool shmop_delete (int shmid)
 
     mark segment for deletion  
int shmop_open (int key, string flags, int mode, int size)
 
     gets and attaches a shared memory segment  
string shmop_read (int shmid, int start, int count)
 
     reads from a shm segment  
int shmop_size (int shmid)
 
     returns the shm size  
int shmop_write (int shmid, string data, int offset)
 
     writes to a shared memory segment  
# php4/ext/skeleton/skeleton.c
string confirm_extname_compiled(string arg)
 
     Return a string to confirm that the module is compiled in  
# php4/ext/snmp/snmp.c
int netsnmp_session_gen_auth_key(struct snmp_session *s, char *pass)
 
     Make key from pass phrase in the snmpv3 session  
int netsnmp_session_gen_sec_key(struct snmp_session *s, u_char *pass)
 
     Make key from pass phrase in the snmpv3 session  
int netsnmp_session_set_auth_protocol(struct snmp_session *s, char *prot)
 
     Set the authentication protocol in the snmpv3 session  
int netsnmp_session_set_sec_level(struct snmp_session *s, char *level)
 
     Set the security level in the snmpv3 session  
int netsnmp_session_set_sec_name(struct snmp_session *s, char *name)
 
     Set the security name in the snmpv3 session  
int netsnmp_session_set_sec_protocol(struct snmp_session *s, char *prot)
 
     Set the security protocol in the snmpv3 session  
void php_snmpv3(INTERNAL_FUNCTION_PARAMETERS, int st)
 
  *
  * Generic SNMPv3 object fetcher
  * From here is passed on the the common internal object fetcher.
  *
  * st=1   snmp3_get() - query an agent and return a single value.
  * st=2   snmp3_walk() - walk the mib and return a single dimensional array 
  *                       containing the values.
  * st=3   snmp3_real_walk() - walk the mib and return an 
  *                            array of oid,value pairs.
  * st=11  snmp3_set() - query an agent and set a single value
  *
   
int snmp3_get(string host, string sec_name, string sec_level, string auth_protocol, string auth_passphrase, string priv_protocol, string priv_passphrase, string object_id [, int timeout [, int retries]])
 
     Fetch the value of a SNMP object  
int snmp3_real_walk(string host, string sec_name, string sec_level, string auth_protocol, string auth_passphrase, string priv_protocol, string priv_passphrase, string object_id [, int timeout [, int retries]])
 
     Fetch the value of a SNMP object  
int snmp3_set(string host, string sec_name, string sec_level, string auth_protocol, string auth_passphrase, string priv_protocol, string priv_passphrase, string object_id, string type, mixed value [, int timeout [, int retries]])
 
     Fetch the value of a SNMP object  
int snmp3_walk(string host, string sec_name, string sec_level, string auth_protocol, string auth_passphrase, string priv_protocol, string priv_passphrase, string object_id [, int timeout [, int retries]])
 
     Fetch the value of a SNMP object  
bool snmp_get_quick_print(void)
 
     Return the current status of quick_print  
int snmp_get_valueretrieval()
 
     Return the method how the SNMP values will be returned  
void snmp_set_enum_print(int enum_print)
 
     Return all values that are enums with their enum value instead of the raw integer  
void snmp_set_oid_numeric_print(int oid_numeric_print)
 
     Return all objects including their respective object id withing the specified one  
void snmp_set_quick_print(int quick_print)
 
     Return all objects including their respective object id withing the specified one  
int snmp_set_valueretrieval(int method)
 
     Specify the method how the SNMP values will be returned  
string snmpget(string host, string community, string object_id [, int timeout [, int retries]]) 
 
     Fetch a SNMP object  
array snmprealwalk(string host, string community, string object_id [, int timeout [, int retries]])
 
     Return all objects including their respective object id withing the specified one  
int snmpset(string host, string community, string object_id, string type, mixed value [, int timeout [, int retries]]) 
 
     Set the value of a SNMP object  
array snmpwalk(string host, string community, string object_id [, int timeout [, int retries]]) 
 
     Return all objects under the specified object id  
# php4/ext/sockets/sockets.c
resource socket_accept(resource socket)
 
     Accepts a connection on the listening socket fd  
bool socket_bind(resource socket, string addr [, int port])
 
     Binds an open socket to a listening port, port is only specified in AF_INET family.  
void socket_clear_error([resource socket])
 
     Clears the error on the socket or the last error code.  
void socket_close(resource socket)
 
     Closes a file descriptor  
bool socket_connect(resource socket, string addr [, int port])
 
     Opens a connection to addr:port on the socket specified by socket  
resource socket_create(int domain, int type, int protocol)
 
     Creates an endpoint for communication in the domain specified by domain, of type specified by type  
resource socket_create_listen(int port[, int backlog])
 
     Opens a socket on port to accept connections  
bool socket_create_pair(int domain, int type, int protocol, array &fd)
 
     Creates a pair of indistinguishable sockets and stores them in fds.  
mixed socket_get_option(resource socket, int level, int optname)
 
     Gets socket options for the socket  
bool socket_getpeername(resource socket, string &addr[, int &port])
 
     Queries the remote side of the given socket which may either result in host/port or in a UNIX filesystem path, dependent on its type.  
bool socket_getsockname(resource socket, string &addr[, int &port])
 
     Queries the remote side of the given socket which may either result in host/port or in a UNIX filesystem path, dependent on its type.  
bool socket_iovec_add(resource iovec, int iov_len)
 
     Adds a new vector to the scatter/gather array  
resource socket_iovec_alloc(int num_vectors [, int ...])
 
     Builds a 'struct iovec' for use with sendmsg, recvmsg, writev, and readv  
bool socket_iovec_delete(resource iovec, int iov_pos)
 
     Deletes a vector from an array of vectors  
string socket_iovec_fetch(resource iovec, int iovec_position)
 
     Returns the data held in the iovec specified by iovec_id[iovec_position]  
bool socket_iovec_free(resource iovec)
 
     Frees the iovec specified by iovec_id  
bool socket_iovec_set(resource iovec, int iovec_position, string new_val)
 
     Sets the data held in iovec_id[iovec_position] to new_val  
int socket_last_error([resource socket])
 
     Returns the last socket error (either the last used or the provided socket resource)  
bool socket_listen(resource socket[, int backlog])
 
     Sets the maximum number of connections allowed to be waited for on the socket specified by fd  
string socket_read(resource socket, int length [, int type])
 
     Reads a maximum of length bytes from socket  
bool socket_readv(resource socket, resource iovec_id)
 
     Reads from an fd, using the scatter-gather array defined by iovec_id  
int socket_recv(resource socket, string &buf, int len, int flags)
 
     Receives data from a connected socket  
int socket_recvfrom(resource socket, string &buf, int len, int flags, string &name [, int &port])
 
     Receives data from a socket, connected or not  
bool socket_recvmsg(resource socket, resource iovec, array &control, int &controllen, int &flags, string &addr [, int &port])
 
     Used to receive messages on a socket, whether connection-oriented or not  
int socket_select(array &read_fds, array &write_fds, &array except_fds, int tv_sec[, int tv_usec])
 
     Runs the select() system call on the sets mentioned with a timeout specified by tv_sec and tv_usec  
int socket_send(resource socket, string buf, int len, int flags)
 
     Sends data to a connected socket  
bool socket_sendmsg(resource socket, resource iovec, int flags, string addr [, int port])
 
     Sends a message to a socket, regardless of whether it is connection-oriented or not  
int socket_sendto(resource socket, string buf, int len, int flags, string addr [, int port])
 
     Sends a message to a socket, whether it is connected or not  
bool socket_set_block(resource socket)
 
     Sets blocking mode on a socket resource  
bool socket_set_nonblock(resource socket)
 
     Sets nonblocking mode on a socket resource  
bool socket_set_option(resource socket, int level, int optname, int|array optval)
 
     Sets socket options for the socket  
bool socket_shutdown(resource socket[, int how])
 
     Shuts down a socket for receiving, sending, or both.  
string socket_strerror(int errno)
 
     Returns a string describing an error  
int socket_write(resource socket, string buf[, int length])
 
     Writes the buffer to the socket resource, length is optional  
bool socket_writev(resource socket, resource iovec_id)
 
     Writes to a file descriptor, fd, using the scatter-gather array defined by iovec_id  
# php4/ext/standard/aggregation.c
void aggregate(object obj, string class)
 
      
void aggregate_methods(object obj, string class)
 
      
void aggregate_methods_by_list(object obj, string class, array method_list [, bool exclude])
 
      
void aggregate_methods_by_regexp(object obj, string class, string regexp [, bool exclude])
 
      
void aggregate_properties(object obj, string class)
 
      
void aggregate_properties_by_list(object obj, string class, array props_list [, bool exclude])
 
      
void aggregate_properties_by_regexp(object obj, string class, string regexp [, bool exclude])
 
      
array aggregation_info(object obj)
 
    
void deaggregate(object obj [, string class])
 
    
# php4/ext/standard/array.c
array array_change_key_case(array input [, int case=CASE_LOWER])
 
     Retuns an array with all string keys lowercased [or uppercased]  
array array_chunk(array input, int size [, bool preserve_keys])
 
     Split array into chunks  
array array_count_values(array input)
 
     Return the value as key and the frequency of that value in input as value  
array array_diff(array arr1, array arr2 [, array ...])
 
     Returns the entries of arr1 that have values which are not present in any of the others arguments  
array array_diff_assoc(array arr1, array arr2 [, array ...])
 
     Returns the entries of arr1 that have values which are not present in any of the others arguments but do additional checks whether the keys are equal  
array array_fill(int start_key, int num, mixed val)
 
     Create an array containing num elements starting with index start_key each initialized to val  
array array_filter(array input [, mixed callback])
 
     Filters elements from the array via the callback.  
array array_flip(array input)
 
     Return array with key <-> value flipped  
array array_intersect(array arr1, array arr2 [, array ...])
 
     Returns the entries of arr1 that have values which are present in all the other arguments  
array array_intersect_assoc(array arr1, array arr2 [, array ...])
 
     Returns the entries of arr1 that have values which are present in all the other arguments. Keys are used to do more restrctive check  
bool array_key_exists(mixed key, array search)
 
     Checks if the given key or index exists in the array  
array array_keys(array input [, mixed search_value])
 
     Return just the keys from the input array, optionally only for the specified search_value  
array array_map(mixed callback, array input1 [, array input2 ,...])
 
     Applies the callback to the elements in given arrays.  
array array_merge(array arr1, array arr2 [, array ...])
 
     Merges elements from passed arrays into one array  
array array_merge_recursive(array arr1, array arr2 [, array ...])
 
     Recursively merges elements from passed arrays into one array  
bool array_multisort(array ar1 [, SORT_ASC|SORT_DESC [, SORT_REGULAR|SORT_NUMERIC|SORT_STRING]] [, array ar2 [, SORT_ASC|SORT_DESC [, SORT_REGULAR|SORT_NUMERIC|SORT_STRING]], ...])
 
     Sort multiple arrays at once similar to how ORDER BY clause works in SQL  
array array_pad(array input, int pad_size, mixed pad_value)
 
     Returns a copy of input array padded with pad_value to size pad_size  
mixed array_pop(array stack)
 
     Pops an element off the end of the array  
int array_push(array stack, mixed var [, mixed ...])
 
     Pushes elements onto the end of the array  
mixed array_rand(array input [, int num_req])
 
     Return key/keys for random entry/entries in the array  
mixed array_reduce(array input, mixed callback [, int initial])
 
     Iteratively reduce the array to a single value via the callback.  
array array_reverse(array input [, bool preserve keys])
 
     Return input as a new array with the order of the entries reversed  
mixed array_search(mixed needle, array haystack [, bool strict])
 
     Searches the array for a given value and returns the corresponding key if successful  
mixed array_shift(array stack)
 
     Pops an element off the beginning of the array  
array array_slice(array input, int offset [, int length])
 
     Returns elements specified by offset and length  
array array_splice(array input, int offset [, int length [, array replacement]])
 
     Removes the elements designated by offset and length and replace them with supplied array  
mixed array_sum(array input)
 
     Returns the sum of the array entries  
array array_unique(array input)
 
     Removes duplicate values from array  
int array_unshift(array stack, mixed var [, mixed ...])
 
     Pushes elements onto the beginning of the array  
array array_values(array input)
 
     Return just the values from the input array  
bool array_walk(array input, string funcname [, mixed userdata])
 
     Apply a user function to every member of an array  
bool arsort(array array_arg [, int sort_flags])
 
     Sort an array in reverse order and maintain index association  
bool asort(array array_arg [, int sort_flags])
 
     Sort an array and maintain index association  
array compact(mixed var_names [, mixed ...])
 
     Creates a hash containing variables and their values  
int count(mixed var [, int mode])
 
     Count the number of elements in a variable (usually an array)  
mixed current(array array_arg)
 
     Return the element currently pointed to by the internal array pointer  
mixed end(array array_arg)
 
     Advances array argument's internal pointer to the last element and return it  
int extract(array var_array [, int extract_type [, string prefix]])
 
     Imports variables into symbol table from an array  
bool in_array(mixed needle, array haystack [, bool strict])
 
     Checks if the given value exists in the array  
mixed key(array array_arg)
 
     Return the key of the element currently pointed to by the internal array pointer  
bool krsort(array array_arg [, int sort_flags])
 
     Sort an array by key value in reverse order  
bool ksort(array array_arg [, int sort_flags])
 
     Sort an array by key  
mixed max(mixed arg1 [, mixed arg2 [, mixed ...]])
 
     Return the highest value in an array or a series of arguments  
mixed min(mixed arg1 [, mixed arg2 [, mixed ...]])
 
     Return the lowest value in an array or a series of arguments  
void natcasesort(array array_arg)
 
     Sort an array using case-insensitive natural sort  
void natsort(array array_arg)
 
     Sort an array using natural sort  
mixed next(array array_arg)
 
     Move array argument's internal pointer to the next element and return it  
mixed prev(array array_arg)
 
     Move array argument's internal pointer to the previous element and return it  
array range(mixed low, mixed high)
 
     Create an array containing the range of integers or characters from low to high (inclusive)  
mixed reset(array array_arg)
 
     Set array argument's internal pointer to the first element and return it  
bool rsort(array array_arg [, int sort_flags])
 
     Sort an array in reverse order  
bool shuffle(array array_arg)
 
     Randomly shuffle the contents of an array  
bool sort(array array_arg [, int sort_flags])
 
     Sort an array  
bool uasort(array array_arg, string cmp_function)
 
     Sort an array with a user-defined comparison function and maintain index association  
bool uksort(array array_arg, string cmp_function)
 
     Sort an array by keys using a user-defined comparison function  
bool usort(array array_arg, string cmp_function)
 
     Sort an array by values using a user-defined comparison function  
# php4/ext/standard/assert.c
int assert(string|bool assertion)
 
     Checks if assertion is false  
mixed assert_options(int what [, mixed value])
 
     Set/get the various assert flags  
# php4/ext/standard/base64.c
string base64_decode(string str)
 
     Decodes string using MIME base64 algorithm  
string base64_encode(string str)
 
     Encodes string using MIME base64 algorithm  
# php4/ext/standard/basic_functions.c
mixed call_user_func(string function_name [, mixed parmeter] [, mixed ...])
 
     Call a user function which is the first parameter  
mixed call_user_func_array(string function_name, array parameters)
 
     Call a user function which is the first parameter with the arguments contained in array  
mixed call_user_method(string method_name, mixed object [, mixed parameter] [, mixed ...])
 
     Call a user method on a specific object or class  
mixed call_user_method_array(string method_name, mixed object, array params)
 
     Call a user method on a specific object or class using a parameter array  
int connection_aborted(void)
 
     Returns true if client disconnected  
int connection_status(void)
 
     Returns the connection status bitfield  
mixed constant(string const_name)
 
     Given the name of a constant this function will return the constants associated value  
bool error_log(string message [, int message_type [, string destination [, string extra_headers]]])
 
     Send an error message somewhere  
void flush(void)
 
     Flush the output buffer  
string get_cfg_var(string option_name)
 
     Get the value of a PHP configuration option  
string get_current_user(void)
 
     Get the name of the owner of the current PHP script  
string get_include_path()
 
     Get the current include_path configuration option  
int get_magic_quotes_gpc(void)
 
     Get the current active configuration setting of magic_quotes_gpc  
int get_magic_quotes_runtime(void)
 
     Get the current active configuration setting of magic_quotes_runtime  
string getenv(string varname)
 
     Get the value of an environment variable  
array getopt(string options [, array longopts])
 
     Get options from the command line argument list  
int getprotobyname(string name)
 
     Returns protocol number associated with name as per /etc/protocols  
string getprotobynumber(int proto)
 
     Returns protocol name associated with protocol number proto  
int getservbyname(string service, string protocol)
 
     Returns port associated with service. Protocol must be "tcp" or "udp"  
string getservbyport(int port, string protocol)
 
     Returns service name associated with port. Protocol must be "tcp" or "udp"  
bool highlight_file(string file_name [, bool return] )
 
     Syntax highlight a source file  
bool highlight_string(string string [, bool return] )
 
     Syntax highlight a string or optionally return it  
int ignore_user_abort(bool value)
 
     Set whether we want to ignore a user abort event or not  
bool import_request_variables(string types [, string prefix])
 
     Import GET/POST/Cookie variables into the global scope  
string ini_get(string varname)
 
     Get a configuration option  
array ini_get_all([string extension])
 
     Get all configuration options  
void ini_restore(string varname)
 
     Restore the value of a configuration option specified by varname  
string ini_set(string varname, string newvalue)
 
     Set a configuration option, returns false on error and the old value of the configuration option on success  
int ip2long(string ip_address)
 
     Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address  
bool is_uploaded_file(string path)
 
     Check if file was created by rfc1867 upload   
string long2ip(int proper_address)
 
     Converts an (IPv4) Internet network address into a string in Internet standard dotted format  
bool move_uploaded_file(string path, string new_path)
 
     Move a file if and only if it was created by an upload  
array parse_ini_file(string filename [, bool process_sections])
 
     Parse configuration file  
bool print_r(mixed var [, bool return])
 
     Prints out or returns information about the specified variable  
bool putenv(string setting)
 
     Set the value of an environment variable  
void register_shutdown_function(string function_name)
 
     Register a user-level function to be called on request termination  
bool register_tick_function(string function_name [, mixed arg [, mixed ... ]])
 
     Registers a tick callback function  
void restore_include_path()
 
     Restore the value of the include_path configuration option  
string set_include_path(string varname, string newvalue)
 
     Sets the include_path configuration option  
bool set_magic_quotes_runtime(int new_setting)
 
     Set the current active configuration setting of magic_quotes_runtime and return previous  
void sleep(int seconds)
 
     Delay for a given number of seconds  
void unregister_tick_function(string function_name)
 
     Unregisters a tick callback function  
void usleep(int micro_seconds)
 
     Delay for a given number of micro seconds  
# php4/ext/standard/browscap.c
mixed get_browser([string browser_name [, bool return_array]])
 
     Get information about the capabilities of a browser. If browser_name is omitted
     or null, HTTP_USER_AGENT is used. Returns an object by default; if return_array
     is true, returns an array.  
# php4/ext/standard/crc32.c
string crc32(string str)
 
     Calculate the crc32 polynomial of a string  
# php4/ext/standard/crypt.c
string crypt(string str [, string salt])
 
     Encrypt a string  
# php4/ext/standard/cyr_convert.c
string convert_cyr_string(string str, string from, string to)
 
     Convert from one Cyrillic character set to another  
# php4/ext/standard/datetime.c
bool checkdate(int month, int day, int year)
 
     Returns true(1) if it is a valid date in gregorian calendar  
string date(string format [, int timestamp])
 
     Format a local time/date  
array getdate([int timestamp])
 
     Get date/time information  
string gmdate(string format [, int timestamp])
 
     Format a GMT/UTC date/time  
int gmmktime(int hour, int min, int sec, int mon, int day, int year)
 
     Get UNIX timestamp for a GMT date  
string gmstrftime(string format [, int timestamp])
 
     Format a GMT/UCT time/date according to locale settings  
array localtime([int timestamp [, bool associative_array]])
 
     Returns the results of the C system call localtime as an associative array if the associative_array argument is set to 1 other wise it is a regular array  
int mktime(int hour, int min, int sec, int mon, int day, int year)
 
     Get UNIX timestamp for a date  
string strftime(string format [, int timestamp])
 
     Format a local time/date according to locale settings  
int strtotime(string time, int now)
 
     Convert string representation of date and time to a timestamp  
int time(void)
 
     Return current UNIX timestamp  
# php4/ext/standard/dir.c
bool chdir(string directory)
 
     Change the current directory  
bool chroot(string directory)
 
     Change root directory  
void closedir([resource dir_handle])
 
     Close directory connection identified by the dir_handle  
object dir(string directory)
 
     Directory class with properties, handle and class and methods read, rewind and close  
mixed getcwd(void)
 
     Gets the current directory  
array glob(string pattern [, int flags])
 
     Find pathnames matching a pattern  
mixed opendir(string path)
 
     Open a directory and return a dir_handle  
string readdir([resource dir_handle])
 
     Read directory entry from dir_handle  
void rewinddir([resource dir_handle])
 
     Rewind dir_handle back to the start  
# php4/ext/standard/dl.c
int dl(string extension_filename)
 
     Load a PHP extension at runtime  
# php4/ext/standard/dns.c
int checkdnsrr(string host [, string type])
 
     Check DNS records corresponding to a given Internet host name or IP address  
string gethostbyaddr(string ip_address)
 
     Get the Internet host name corresponding to a given IP address  
string gethostbyname(string hostname)
 
     Get the IP address corresponding to a given Internet host name  
array gethostbynamel(string hostname)
 
     Return a list of IP addresses that a given hostname resolves to.  
int getmxrr(string hostname, array mxhosts [, array weight])
 
     Get MX records corresponding to a given Internet host name  
# php4/ext/standard/exec.c
string escapeshellarg(string arg)
 
     Quote and escape an argument for use in a shell command  
string escapeshellcmd(string command)
 
     Escape shell metacharacters  
string exec(string command [, array output [, int return_value]])
 
     Execute an external program  
void passthru(string command [, int return_value])
 
     Execute an external program and display raw output  
int proc_close(resource process)
 
     close a process opened by proc_open  
resource proc_open(string command, array descriptorspec, array &pipes)
 
     Run a process with more control over it's file descriptors  
string shell_exec(string cmd)
 
     Use pclose() for FILE* that has been opened via popen()  
int system(string command [, int return_value])
 
     Execute an external program and display output  
# php4/ext/standard/file.c
bool copy(string source_file, string destination_file)
 
     Copy a file  
bool fclose(resource fp)
 
     Close an open file pointer  
bool feof(resource fp)
 
     Test for end-of-file on a file pointer  
bool fflush(resource fp)
 
     Flushes output  
string fgetc(resource fp)
 
     Get a character from file pointer  
array fgetcsv(resource fp, int length [, string delimiter [, string enclosure]])
 
     Get line from file pointer and parse for CSV fields  
string fgets(resource fp[, int length])
 
     Get a line from file pointer  
string fgetss(resource fp, int length [, string allowable_tags])
 
     Get a line from file pointer and strip HTML tags  
array file(string filename [, bool use_include_path])
 
     Read entire file into an array  
string file_get_contents(string filename [, bool use_include_path])
 
     Read the entire file into a string  
bool flock(resource fp, int operation [, int &wouldblock])
 
     Portable file locking  
bool fnmatch(string pattern, string filename [, int flags])
 
     Match filename against pattern  
resource fopen(string filename, string mode [, bool use_include_path [, resource context]])
 
     Open a file or a URL and return a file pointer  
int fpassthru(resource fp)
 
     Output all remaining data from a file pointer  
string fread(resource fp, int length)
 
     Binary-safe file read  
mixed fscanf(resource stream, string format [, string ...])
 
     Implements a mostly ANSI compatible fscanf()  
int fseek(resource fp, int offset [, int whence])
 
     Seek on a file pointer  
int fstat(resource fp)
 
     Stat() on a filehandle  
int ftell(resource fp)
 
     Get file pointer's read/write position  
int ftruncate(resource fp, int size)
 
     Truncate file to 'size' length  
int fwrite(resource fp, string str [, int length])
 
     Binary-safe file write  
array get_meta_tags(string filename [, bool use_include_path])
 
     Extracts all meta tag content attributes from a file and returns an array  
bool mkdir(string pathname[, int mode])
 
     Create a directory  
int pclose(resource fp)
 
     Close a file pointer opened by popen()  
resource popen(string command, string mode)
 
     Execute a command and open either a read or a write pipe to it  
int readfile(string filename [, int use_include_path])
 
     Output a file or a URL  
string realpath(string path)
 
     Return the resolved path  
bool rename(string old_name, string new_name)
 
     Rename a file  
bool rewind(resource fp)
 
     Rewind the position of a file pointer  
bool rmdir(string dirname)
 
     Remove a directory  
bool set_socket_blocking(resource socket, int mode)
 
     Set blocking/non-blocking mode on a socket  
resource stream_context_create([array options])
 
     Create a file context and optionally set parameters  
array stream_context_get_options(resource context|resource stream)
 
     Retrieve options for a stream/wrapper/context  
bool stream_context_set_option(resource context|resource stream, string wrappername, string optionname, mixed value)
 
     Set an option for a wrapper  
bool stream_context_set_params(resource context|resource stream, array options)
 
     Set parameters for a file context  
bool stream_filter_append(resource stream, string filtername[, string filterparams])
 
     Append a filter to a stream  
bool stream_filter_prepend(resource stream, string filtername[, string filterparams])
 
     Prepend a filter to a stream  
resource stream_get_meta_data(resource fp)
 
     Retrieves header/meta data from streams/file pointers  
int stream_select(array &read_streams, array &write_streams, array &except_streams, int tv_sec[, int tv_usec])
 
     Runs the select() system call on the sets of streams with a timeout specified by tv_sec and tv_usec  
bool stream_set_blocking(resource socket, int mode)
 
     Set blocking/non-blocking mode on a socket or stream  
bool stream_set_timeout(resource stream, int seconds, int microseconds)
 
     Set timeout on stream read to seconds      microseonds  
int stream_set_write_buffer(resource fp, int buffer)
 
     Set file write buffer  
string tempnam(string dir, string prefix)
 
     Create a unique filename in a directory  
resource tmpfile(void)
 
     Create a temporary file that will be deleted automatically after use  
int umask([int mask])
 
     Return or change the umask  
bool unlink(string filename)
 
     Delete a file  
# php4/ext/standard/filestat.c
bool chgrp(string filename, mixed group)
 
     Change file group  
bool chmod(string filename, int mode)
 
     Change file mode  
bool chown (string filename, mixed user)
 
     Change file owner  
void clearstatcache(void)
 
     Clear file stat cache  
float disk_free_space(string path)
 
     Get free disk space for filesystem that path is on  
float disk_total_space(string path)
 
     Get total disk space for filesystem that path is on  
bool file_exists(string filename)
 
     Returns true if filename exists  
int fileatime(string filename)
 
     Get last access time of file  
int filectime(string filename)
 
     Get inode modification time of file  
int filegroup(string filename)
 
     Get file group  
int fileinode(string filename)
 
     Get file inode  
int filemtime(string filename)
 
     Get last modification time of file  
int fileowner(string filename)
 
     Get file owner  
int fileperms(string filename)
 
     Get file permissions  
int filesize(string filename)
 
     Get file size  
string filetype(string filename)
 
     Get file type  
bool is_dir(string filename)
 
     Returns true if file is directory  
bool is_executable(string filename)
 
     Returns true if file is executable  
bool is_file(string filename)
 
     Returns true if file is a regular file  
bool is_link(string filename)
 
     Returns true if file is symbolic link  
bool is_readable(string filename)
 
     Returns true if file can be read  
bool is_writable(string filename)
 
     Returns true if file can be written  
array lstat(string filename)
 
     Give information about a file or symbolic link  
array stat(string filename)
 
     Give information about a file  
bool touch(string filename [, int time [, int atime]])
 
     Set modification time of file  
# php4/ext/standard/formatted_print.c
int printf(string format [, mixed arg1 [, mixed ...]])
 
     Output a formatted string  
string sprintf(string format [, mixed arg1 [, mixed ...]])
 
     Return a formatted string  
int vprintf(string format, array args)
 
     Output a formatted string  
string vsprintf(string format, array args)
 
     Return a formatted string  
# php4/ext/standard/fsock.c
int fsockopen(string hostname, int port [, int errno [, string errstr [, float timeout [, resource context]]]])
 
     Open Internet or Unix domain socket connection  
int pfsockopen(string hostname, int port [, int errno [, string errstr [, float timeout [, resource context]]]])
 
     Open persistent Internet or Unix domain socket connection  
# php4/ext/standard/ftok.c
int ftok(string pathname, string proj)
 
     Convert a pathname and a project identifier to a System V IPC key  
# php4/ext/standard/head.c
void header(string header [, bool replace, [int http_response_code]])
 
     Sends a raw HTTP header  
bool headers_sent([string &$file [, int &$line]])
 
     Returns true if headers have already been sent, false otherwise  
bool setcookie(string name [, string value [, int expires [, string path [, string domain [, bool secure]]]]])
 
     Send a cookie  
# php4/ext/standard/html.c
array get_html_translation_table([int table [, int quote_style]])
 
     Returns the internal translation table used by htmlspecialchars and htmlentities  
string html_entity_decode(string string [, int quote_style][, string charset])
 
     Convert all HTML entities to their applicable characters  
string htmlentities(string string [, int quote_style][, string charset])
 
     Convert all applicable characters to HTML entities  
string htmlspecialchars(string string [, int quote_style][, string charset])
 
     Convert special characters to HTML entities  
# php4/ext/standard/image.c
array getimagesize(string imagefile [, array info])
 
     Get the size of an image as 4-element array  
string image_type_to_mime_type(int imagetype)
 
     Get Mime-Type for image-type returned by getimagesize, exif_read_data, exif_thumbnail, exif_imagetype  
# php4/ext/standard/info.c
string php_egg_logo_guid(void)
 
     Return the special ID used to request the PHP logo in phpinfo screens 
string php_ini_scanned_files(void)
 
     Return comma-separated string of .ini files parsed from the additional ini dir  
string php_logo_guid(void)
 
     Return the special ID used to request the PHP logo in phpinfo screens 
string php_sapi_name(void)
 
     Return the current SAPI module name  
string php_uname(void)
 
     Return information about the system PHP was built on  
void phpcredits([int flag])
 
     Prints the list of people who've contributed to the PHP project  
void phpinfo([int what])
 
     Output a page of useful information about PHP and the current request  
string phpversion([string extension])
 
     Return the current PHP version  
string zend_logo_guid(void)
 
     Return the special ID used to request the Zend logo in phpinfo screens 
# php4/ext/standard/iptc.c
array iptcembed(string iptcdata, string jpeg_file_name [, int spool])
 
     Embed binary IPTC data into a JPEG image.  
array iptcparse(string iptcdata)
 
     Parse binary IPTC-data into associative array  
# php4/ext/standard/lcg.c
float lcg_value()
 
     Returns a value from the combined linear congruential generator  
# php4/ext/standard/levenshtein.c
int levenshtein(string str1, string str2)
 
     Calculate Levenshtein distance between two strings  
# php4/ext/standard/link.c
int link(string target, string link)
 
     Create a hard link  
int linkinfo(string filename)
 
     Returns the st_dev field of the UNIX C stat structure describing the link  
string readlink(string filename)
 
     Return the target of a symbolic link  
int symlink(string target, string link)
 
     Create a symbolic link  
# php4/ext/standard/mail.c
int ezmlm_hash(string addr)
 
     Calculate EZMLM list hash value.  
int mail(string to, string subject, string message [, string additional_headers [, string additional_parameters]])
 
     Send an email message  
# php4/ext/standard/math.c
int abs(int number)
 
     Return the absolute value of the number  
float acos(float number)
 
     Return the arc cosine of the number in radians  
float acosh(float number)
 
     Returns the inverse hyperbolic cosine of the number, i.e. the value whose hyperbolic cosine is number  
float asin(float number)
 
     Returns the arc sine of the number in radians  
float asinh(float number)
 
     Returns the inverse hyperbolic sine of the number, i.e. the value whose hyperbolic sine is number  
float atan(float number)
 
     Returns the arc tangent of the number in radians  
float atan2(float y, float x)
 
     Returns the arc tangent of y/x, with the resulting quadrant determined by the signs of y and x  
float atanh(float number)
 
     Returns the inverse hyperbolic tangent of the number, i.e. the value whose hyperbolic tangent is number  
string base_convert(string number, int frombase, int tobase)
 
     Converts a number in a string from any base <= 36 to any base <= 36  
int bindec(string binary_number)
 
     Returns the decimal equivalent of the binary number  
float ceil(float number)
 
     Returns the next highest integer value of the number  
float cos(float number)
 
     Returns the cosine of the number in radians  
float cosh(float number)
 
     Returns the hyperbolic cosine of the number, defined as (exp(number)      exp(-number))/2  
string decbin(int decimal_number)
 
     Returns a string containing a binary representation of the number  
string dechex(int decimal_number)
 
     Returns a string containing a hexadecimal representation of the given number  
string decoct(int decimal_number)
 
     Returns a string containing an octal representation of the given number  
float deg2rad(float number)
 
     Converts the number in degrees to the radian equivalent  
float exp(float number)
 
     Returns e raised to the power of the number  
float expm1(float number)
 
     Returns exp(number) - 1, computed in a way that accurate even when the value of number is close to zero  
float floor(float number)
 
     Returns the next lowest integer value from the number  
float fmod(float x, float y)
 
     Returns the remainder of dividing x by y as a float  
int hexdec(string hexadecimal_number)
 
     Returns the decimal equivalent of the hexadecimal number  
float hypot(float num1, float num2)
 
     Returns sqrt(num1*num1      num2*num2)  
bool is_finite(float val)
 
     Returns whether argument is finite  
bool is_infinite(float val)
 
     Returns whether argument is infinite  
bool is_nan(float val)
 
     Returns whether argument is not a number  
float log(float number, [float base])
 
     Returns the natural logarithm of the number, or the base log if base is specified  
float log10(float number)
 
     Returns the base-10 logarithm of the number  
float log1p(float number)
 
     Returns log(1      number), computed in a way that accurate even when the value of number is close to zero  
string number_format(float number [, int num_decimal_places [, string dec_seperator, string thousands_seperator]])
 
     Formats a number with grouped thousands  
int octdec(string octal_number)
 
     Returns the decimal equivalent of an octal string  
float pi(void)
 
     Returns an approximation of pi  
number pow(number base, number exponent)
 
     Returns base raised to the power of exponent. Returns integer result when possible  
float rad2deg(float number)
 
     Converts the radian number to the equivalent number in degrees  
float round(float number [, int precision])
 
     Returns the number rounded to specified precision  
float sin(float number)
 
     Returns the sine of the number in radians  
float sinh(float number)
 
     Returns the hyperbolic sine of the number, defined as (exp(number) - exp(-number))/2  
float sqrt(float number)
 
     Returns the square root of the number  
float tan(float number)
 
     Returns the tangent of the number in radians  
float tanh(float number)
 
     Returns the hyperbolic tangent of the number, defined as sinh(number)/cosh(number)  
# php4/ext/standard/md5.c
string md5(string str)
 
     Calculate the md5 hash of a string  
string md5_file(string filename)
 
     Calculate the md5 hash of given filename  
# php4/ext/standard/metaphone.c
string metaphone(string text, int phones)
 
     Break english phrases down into their phonemes  
# php4/ext/standard/microtime.c
array getrusage([int who])
 
     Returns an array of usage statistics  
array gettimeofday(void)
 
     Returns the current time as array  
string microtime(void)
 
     Returns a string containing the current time in seconds and microseconds  
# php4/ext/standard/pack.c
string pack(string format, mixed arg1 [, mixed arg2 [, mixed ...]])
 
     Takes one or more arguments and packs them into a binary string according to the format argument  
array unpack(string format, string input)
 
     Unpack binary string into named array elements according to format argument  
# php4/ext/standard/pageinfo.c
int getlastmod(void)
 
     Get time of last page modification  
int getmygid(void)
 
     Get PHP script owner's GID  
int getmyinode(void)
 
     Get the inode of the current script being parsed  
int getmypid(void)
 
     Get current process ID  
int getmyuid(void)
 
     Get PHP script owner's UID  
# php4/ext/standard/quot_print.c
string quoted_printable_decode(string str)
 
     Convert a quoted-printable string to an 8 bit string  
# php4/ext/standard/rand.c
int getrandmax(void)
 
     Returns the maximum value a random number can have  
int mt_getrandmax(void)
 
     Returns the maximum value a random number from Mersenne Twister can have  
int mt_rand([int min, int max])
 
     Returns a random number from Mersenne Twister  
void mt_srand([int seed])
 
     Seeds Mersenne Twister random number generator  
int rand([int min, int max])
 
     Returns a random number  
void srand([int seed])
 
     Seeds random number generator  
# php4/ext/standard/reg.c
int ereg(string pattern, string string [, array registers])
 
     Regular expression match  
string ereg_replace(string pattern, string replacement, string string)
 
     Replace regular expression  
int eregi(string pattern, string string [, array registers])
 
     Case-insensitive regular expression match  
string eregi_replace(string pattern, string replacement, string string)
 
     Case insensitive replace regular expression  
array split(string pattern, string string [, int limit])
 
     Split string into array by regular expression  
array spliti(string pattern, string string [, int limit])
 
     Split string into array by regular expression case-insensitive  
string sql_regcase(string string)
 
     Make regular expression for case insensitive match  
# php4/ext/standard/sha1.c
string sha1(string str)
 
     Calculate the sha1 hash of a string  
string sha1_file(string filename)
 
     Calculate the sha1 hash of given filename  
# php4/ext/standard/soundex.c
string soundex(string str)
 
     Calculate the soundex key of a string  
# php4/ext/standard/string.c
string addcslashes(string str, string charlist)
 
     Escapes all chars mentioned in charlist with backslash. It creates octal representations if asked to backslash characters with 8th bit set or with ASCII<32 (except '\n', '\r', '\t' etc...)  
string addslashes(string str)
 
     Escapes single quote, double quotes and backslash characters in a string with backslashes  
string basename(string path [, string suffix])
 
     Returns the filename component of the path  
string bin2hex(string data)
 
     Converts the binary representation of data to hex  
string chr(int ascii)
 
     Converts ASCII code to a character  
string chunk_split(string str [, int chunklen [, string ending]])
 
     Returns split line  
mixed count_chars(string input [, int mode])
 
     Returns info about what characters are used in input  
string dirname(string path)
 
     Returns the directory name component of the path  
array explode(string separator, string str [, int limit])
 
     Splits a string on string separator and return array of components  
string hebrev(string str [, int max_chars_per_line])
 
     Converts logical Hebrew text to visual text  
string hebrevc(string str [, int max_chars_per_line])
 
     Converts logical Hebrew text to visual text with newline conversion  
string implode([string glue,] array pieces)
 
     Joins array elements placing glue string between items and return one string  
string join(array src, string glue)
 
     An alias for implode  
array localeconv(void)
 
     Returns numeric formatting information based on the current locale  
string ltrim(string str [, string character_mask])
 
     Strips whitespace from the beginning of a string  
string money_format(string format , float value)
 
     Convert monetary value(s) to string  
string nl2br(string str)
 
     Converts newlines to HTML line breaks  
string nl_langinfo(int item)
 
     Query language and locale information  
int ord(string character)
 
     Returns ASCII value of character  
void parse_str(string encoded_string [, array result])
 
     Parses GET/POST/COOKIE data and sets global variables  
array pathinfo(string path)
 
     Returns information about a certain string  
string quotemeta(string str)
 
     Quotes meta characters  
string rtrim(string str [, string character_mask])
 
     Removes trailing whitespace  
string setlocale(mixed category, string locale [, string ...])
 
     Set locale information  
int similar_text(string str1, string str2 [, float percent])
 
     Calculates the similarity between two strings  
mixed sscanf(string str, string format [, string ...])
 
     Implements an ANSI C compatible sscanf  
string str_pad(string input, int pad_length [, string pad_string [, int pad_type]])
 
     Returns input string padded on the left or right to specified length with pad_string  
string str_repeat(string input, int mult)
 
     Returns the input string repeat mult times  
mixed str_replace(mixed search, mixed replace, mixed subject)
 
     Replaces all occurrences of search in haystack with replace  
string str_rot13(string str)
 
     Perform the rot13 transform on a string  
void str_shuffle(string str)
 
     Shuffles string. One permutation of all possible is created  
mixed str_word_count(string str, [int format])
 
     	Counts the number of words inside a string. If format of 1 is specified,
     	then the function will return an array containing all the words
     	found inside the string. If format of 2 is specified, then the function
     	will return an associated array where the position of the word is the key
     	and the word itself is the value.
     	
     	For the purpose of this function, 'word' is defined as a locale dependent
     	string containing alphabetic characters, which also may contain, but not start
     	with "'" and "-" characters.
   
string strchr(string haystack, string needle)
 
     An alias for strstr  
int strcoll(string str1, string str2)
 
     Compares two strings using the current locale  
int strcspn(string str, string mask [, start [, len]])
 
     Finds length of initial segment consisting entirely of characters not found in mask. If start or/and length is provide works like strcspn(substr($s,$start,$len),$bad_chars)  
string strip_tags(string str [, string allowable_tags])
 
     Strips HTML and PHP tags from a string  
string stripcslashes(string str)
 
     Strips backslashes from a string. Uses C-style conventions  
string stripslashes(string str)
 
     Strips backslashes from a string  
string stristr(string haystack, string needle)
 
     Finds first occurrence of a string within another, case insensitive  
int strnatcasecmp(string s1, string s2)
 
     Returns the result of case-insensitive string comparison using 'natural' algorithm  
int strnatcmp(string s1, string s2)
 
     Returns the result of string comparison using 'natural' algorithm  
int strpos(string haystack, string needle [, int offset])
 
     Finds position of first occurrence of a string within another  
string strrchr(string haystack, string needle)
 
     Finds the last occurrence of a character in a string within another  
string strrev(string str)
 
     Reverse a string  
int strrpos(string haystack, string needle)
 
     Finds position of last occurrence of a character in a string within another  
int strspn(string str, string mask [, start [, len]])
 
     Finds length of initial segment consisting entirely of characters found in mask. If start or/and length is provided works like strspn(substr($s,$start,$len),$good_chars)  
string strstr(string haystack, string needle)
 
     Finds first occurrence of a string within another  
string strtok([string str,] string token)
 
     Tokenize a string  
string strtolower(string str)
 
     Makes a string lowercase  
string strtoupper(string str)
 
     Makes a string uppercase  
string strtr(string str, string from, string to)
 
     Translates characters in str using given translation tables  
string substr(string str, int start [, int length])
 
     Returns part of a string  
int substr_count(string haystack, string needle)
 
     Returns the number of times a substring occurs in the string  
string substr_replace(string str, string repl, int start [, int length])
 
     Replaces part of a string with another string  
string trim(string str [, string character_mask])
 
     Strips whitespace from the beginning and end of a string  
string ucfirst(string str)
 
     Makes a string's first character uppercase  
string ucwords(string str)
 
     Uppercase the first character of every word in a string  
string wordwrap(string str [, int width [, string break [, int cut]]])
 
     Wraps buffer to selected number of characters using string break char  
# php4/ext/standard/syslog.c
bool closelog(void)
 
     Close connection to system logger  
void define_syslog_variables(void)
 
     Initializes all syslog-related variables  
bool openlog(string ident, int option, int facility)
 
     Open connection to system logger  
bool syslog(int priority, string message)
 
     Generate a system log message  
# php4/ext/standard/type.c
float floatval(mixed var)
 
     Get the float value of a variable  
string gettype(mixed var)
 
     Returns the type of the variable  
int intval(mixed var [, int base])
 
     Get the integer value of a variable using the optional base for the conversion  
bool is_array(mixed var)
 
     Returns true if variable is an array  
bool is_bool(mixed var)
 
     Returns true if variable is a boolean  
bool is_callable(mixed var [, bool syntax_only [, string callable_name]]) 
 
     Returns true if var is callable.  
bool is_float(mixed var)
 
     Returns true if variable is float point 
bool is_long(mixed var)
 
     Returns true if variable is a long (integer)  
bool is_null(mixed var)
 
     Returns true if variable is null  
bool is_numeric(mixed value)
 
     Returns true if value is a number or a numeric string  
bool is_object(mixed var)
 
     Returns true if variable is an object  
bool is_resource(mixed var)
 
     Returns true if variable is a resource  
bool is_scalar(mixed value)
 
     Returns true if value is a scalar  
bool is_string(mixed var)
 
     Returns true if variable is a string  
bool settype(mixed var, string type)
 
     Set the type of the variable  
string strval(mixed var)
 
     Get the string value of a variable  
# php4/ext/standard/uniqid.c
string uniqid(string prefix [, bool more_entropy])
 
     Generates a unique ID  
# php4/ext/standard/url.c
array parse_url(string url)
 
     Parse a URL and return its components  
string rawurldecode(string str)
 
     Decodes URL-encodes string  
string rawurlencode(string str)
 
     URL-encodes string  
string urldecode(string str)
 
     Decodes URL-encoded string  
string urlencode(string str)
 
     URL-encodes string  
# php4/ext/standard/var.c
void debug_zval_dump(mixed var)
 
     Dumps a string representation of an internal zend value to output.  
int memory_get_usage()
 
      Returns the allocated by PHP memory  
string serialize(mixed variable)
 
     Returns a string representation of variable (which can later be unserialized)  
mixed unserialize(string variable_representation)
 
     Takes a string representation of variable and recreates it  
void var_dump(mixed var)
 
     Dumps a string representation of variable to output  
mixed var_export(mixed var [, bool return])
 
     Outputs or returns a string representation of a variable  
# php4/ext/standard/versioning.c
int version_compare(string ver1, string ver2 [, string oper])
 
    Compares two "PHP-standardized" version number strings  
# php4/ext/swf/swf.c
void swf_actiongeturl(string url, string target)
 
     Gets the specified url  
void swf_actiongotoframe(int frame_number)
 
     Causes the Flash movie to display the specified frame, frame_number, and then stop.  
void swf_actiongotolabel(string label)
 
     Causes the flash movie to display the frame with the given label and then stop  
void swf_actionnextframe(void)
 
     Goes foward one frame  
void swf_actionplay(void)
 
     Starts playing the Flash movie from the current frame  
void swf_actionprevframe(void)
 
     Goes backward one frame  
void swf_actionsettarget(string target)
 
     Sets the context for actions  
void swf_actionstop(void)
 
     Stops playing the Flash movie at the current frame  
void swf_actiontogglequality(void)
 
     Toggles between high and low quality  
void swf_actionwaitforframe(int frame, int skipcount)
 
     If the specified frame has not been loaded, skip the specified number of actions in the action list  
void swf_addbuttonrecord(int state, int objid, int depth)
 
     Controls the location, appearance and active area of the current button  
void swf_addcolor(float r, float g, float b, float a)
 
     Set the global add color to the rgba value specified  
void swf_closefile(void)
 
     Close a Shockwave flash file that was opened with swf_openfile  
void swf_definebitmap(int objid, string imgname)
 
     Defines a bitmap given the name of a .gif .rgb .jpeg or .fi image. The image will be converted into Flash jpeg or Flash color map format  
void swf_definefont(int fontid, string name)
 
     Defines a font. name specifies the PostScript name of the font to use. This font also becomes the current font.   
void swf_defineline(int objid, float x1, float y1, float x2, float y2, float width)
 
     Create a line with object id, objid, starting from x1, y1 and going to x2, y2 with width, width  
void swf_definepoly(int obj_id, array coords, int npoints, float width)
 
     Define a Polygon from an array of x,y coordinates, coords.  
void swf_definerect(int objid, float x1, float y1, float x2, float y2, float width)
 
     Create a rectangle with object id, objid, the upper lefthand coordinate is given by x1, y1 the bottom right coordinate is x2, y2 and with is the width of the line  
void swf_definetext(int objid, string str, int docCenter)
 
     defines a text string using the current font, current fontsize and current font slant. If docCenter is 1, the word is centered in x  
void swf_endbutton(void)
 
     Complete the definition of the current button  
void swf_enddoaction(void)
 
     Ends the list of actions to perform for the current frame  
void swf_endshape(void)
 
     Completes the definition of the current shape  
void swf_endsymbol(void)
 
     End the current symbol  
void swf_fontsize(float height)
 
     Sets the current font's height to the value specified by height  
void swf_fontslant(float slant)
 
     Set the current font slant to the angle indicated by slant  
void swf_fonttracking(track)
 
     Sets the current font tracking to the specified value, track  
array swf_getbitmapinfo(int bitmapid)
 
     Returns an array of information about a bitmap specified by bitmapid  
array swf_getfontinfo(void)
 
     Get information about the current font  
int swf_getframe(void)
 
     Returns the current frame  
void swf_labelframe(string name)
 
     Adds string name to the current frame  
void swf_lookat(float vx, float vy, float vz, float px, float py, float pz, float twist)
 
     Defines a viewing transformation by giving the view position vx, vy, vz, and the coordinates of a reference point in the scene at px, py, pz. Twist controls a rotation along the viewer's z axis  
void swf_modifyobject(int depth, int how)
 
     Updates the position and/or color of the object  
void swf_mulcolor(float r, float g, float b, float a)
 
     Sets the global multiply color to the rgba value specified  
int swf_nextid(void)
 
     Returns a free objid  
void swf_oncondition(int transitions)
 
     Describes a transition used to trigger an action list  
void swf_openfile(string name, float xsize, float ysize, float framerate, float r, float g, float b)
 
     Create a Shockwave Flash file given by name, with width xsize and height ysize at a frame rate of framerate and a background color specified by a red value of r, green value of g and a blue value of b  
void swf_ortho(float xmin, float xmax, float ymin, float ymax, float zmin, float zmax)
 
     Defines an orthographic mapping of user coordinates onto the current viewport  
void swf_ortho2(float xmin, float xmax, float ymin, float ymax)
 
     Defines a 2-D orthographic mapping of user coordinates onto the current viewport  
void swf_perspective(float fovy, float aspect, float near, float far)
 
     Define a perspective projection transformation.  
void swf_placeobject(int objid, int depth)
 
     Places the object, objid, in the current frame at depth, depth  
void swf_polarview(float dist, float azimuth, float incidence, float twist)
 
     Defines he viewer's position in polar coordinates  
void swf_popmatrix(void)
 
     Restore a previous transformation matrix  
void swf_posround(int doit)
 
     This enables or disables rounding of the translation when objects are places or moved  
void swf_pushmatrix(void)
 
     Push the current transformation matrix onto the stack  
void swf_removeobject(int depth)
 
     Removes the object at the specified depth  
void swf_rotate(float angle, string axis)
 
     Rotate the current transformation by the given angle about x, y, or z axis. The axis may be 'x', 'y', or 'z'  
void swf_scale(float x, float y, float z)
 
     Scale the current transformation  
void swf_setfont(int fontid)
 
     Sets fontid to the current font  
void swf_setframe(int frame_number)
 
     Set the current frame number to the number given by frame_number  
void swf_shapearc(float x, float y, float r, float ang1, float ang2)
 
     Draws a circular arc from ang1 to ang2. The center of the circle is given by x, and y. r specifies the radius of the arc  
void swf_shapecurveto(float x1, float y1, float x2, float y2)
 
     Draws a quadratic bezier curve starting at the current position using x1, y1 as an off curve control point and using x2, y2 as the end point. The current position is then set to x2, y2.  
void swf_shapecurveto3(float x1, float y1, float x2, float y2, float x3, float y3)
 
     Draws a cubic bezier curve starting at the current position using x1, y1 and x2, y2 as off curve control points and using x3,y3 as the end point.  The current position is then sent to x3, y3  
void swf_shapefillbitmapclip(int bitmapid)
 
     Sets the current fill mode to clipped bitmap fill. Pixels from the previously defined bitmapid will be used to fill areas  
void swf_shapefillbitmaptile(int bitmapid)
 
     Sets the current fill mode to tiled bitmap fill. Pixels from the previously defined bitmapid will be used to fill areas  
void swf_shapefilloff(void)
 
     Turns off filling  
void swf_shapefillsolid(float r, float g, float b, float a)
 
     Sets the current fill style to a solid fill with the specified rgba color  
void swf_shapelinesolid(float r, float g, float b, float a, float width)
 
     Create a line with color defined by rgba, and a width of width  
void swf_shapelineto(float x, float y)
 
     Draws a line from the current position to x,y, the current position is then set to x,y  
void swf_shapemoveto(float x, float y)
 
     swf_shapemoveto moves the current position to the given x,y.  
void swf_showframe(void)
 
     Finish the current frame  
void swf_startbutton(int objid, int type)
 
     Start a button with an object id, objid and a type of either TYPE_MENUBUTTON or TYPE_PUSHBUTTON  
void swf_startdoaction(void)
 
     Starts the description of an action list for the current frame  
void swf_startshape(int objid)
 
     Initialize a new shape with object id, objid  
void swf_startsymbol(int objid)
 
     Create a new symbol with object id, objid  
void swf_textwidth(string str)
 
     Calculates the width of a string, str, using the current fontsize & current font  
void swf_translate(float x, float y, float z)
 
     Translate the current transformation  
void swf_viewport(float xmin, float xmax, float ymin, float ymax)
 
     Selects an area on the drawing surface for future drawing  
# php4/ext/sybase/php_sybase_db.c
int sybase_affected_rows([int link_id])
 
      Get number of affected rows in last query  
bool sybase_close([int link_id])
 
     Close Sybase connection  
int sybase_connect([string host [, string user [, string password [, string charset [, string appname]]]]])
 
     Open Sybase server connection  
bool sybase_data_seek(int result, int offset)
 
     Move internal row pointer  
array sybase_fetch_array(int result)
 
     Fetch row as array  
object sybase_fetch_field(int result [, int offset])
 
     Get field information  
object sybase_fetch_object(int result)
 
     Fetch row as object  
array sybase_fetch_row(int result)
 
     Get row as enumerated array  
bool sybase_field_seek(int result, int offset)
 
     Set field offset  
bool sybase_free_result(int result)
 
     Free result memory  
string sybase_get_last_message(void)
 
     Returns the last message from server (over min_message_severity)  
void sybase_min_error_severity(int severity)
 
     Sets the minimum error severity  
void sybase_min_message_severity(int severity)
 
     Sets the minimum message severity  
int sybase_num_fields(int result)
 
     Get number of fields in result  
int sybase_num_rows(int result)
 
     Get number of rows in result  
int sybase_pconnect([string host [, string user [, string password [, string charset [, string appname]]]]])
 
     Open persistent Sybase connection  
int sybase_query(string query [, int link_id])
 
     Send Sybase query  
string sybase_result(int result, int row, mixed field)
 
     Get result data  
bool sybase_select_db(string database [, int link_id])
 
     Select Sybase database  
# php4/ext/sybase_ct/php_sybase_ct.c
int sybase_affected_rows([int link_id])
 
     Get number of affected rows in last query  
bool sybase_close([int link_id])
 
     Close Sybase connection  
int sybase_connect([string host [, string user [, string password [, string charset [, string appname]]]]])
 
     Open Sybase server connection  
bool sybase_data_seek(int result, int offset)
 
     Move internal row pointer  
void sybase_deadlock_retry_count(int retry_count)
 
     Sets deadlock retry count  
array sybase_fetch_array(int result)
 
     Fetch row as array  
array sybase_fetch_assoc(int result)
 
     Fetch row as array without numberic indices  
object sybase_fetch_field(int result [, int offset])
 
     Get field information  
object sybase_fetch_object(int result [, mixed object])
 
     Fetch row as object  
array sybase_fetch_row(int result)
 
     Get row as enumerated array  
bool sybase_field_seek(int result, int offset)
 
     Set field offset  
bool sybase_free_result(int result)
 
     Free result memory  
string sybase_get_last_message(void)
 
     Returns the last message from server (over min_message_severity)  
void sybase_min_client_severity(int severity)
 
     Sets minimum client severity  
void sybase_min_server_severity(int severity)
 
     Sets minimum server severity  
int sybase_num_fields(int result)
 
     Get number of fields in result  
int sybase_num_rows(int result)
 
     Get number of rows in result  
int sybase_pconnect([string host [, string user [, string password [, string charset [, string appname]]]]])
 
     Open persistent Sybase connection  
int sybase_query(string query [, int link_id])
 
     Send Sybase query  
string sybase_result(int result, int row, mixed field)
 
     Get result data  
bool sybase_select_db(string database [, int link_id])
 
     Select Sybase database  
bool sybase_set_message_handler(mixed error_func)
 
     Set the error handler, to be called when a server message is raised. 
     If error_func is NULL the handler will be deleted  
int sybase_unbuffered_query(string query [, int link_id])
 
     Send Sybase query  
# php4/ext/sysvmsg/sysvmsg.c
resource msg_get_queue(long key [, long perms])
 
     Attach to a message queue  
mixed msg_receive(resource queue, long desiredmsgtype, long &msgtype, long maxsize, mixed message [[, bool unserialize=true][, long flags=0[, long errorcode]]]
 
     Send a message of type msgtype (must be > 0) to a message queue  
bool msg_remove_queue(resource queue)
 
     Destroy the queue  
bool msg_send(resource queue, long msgtype, mixed message [[, bool serialize=true][, bool blocking=true][, long errorcode]])
 
     Send a message of type msgtype (must be > 0) to a message queue  
array msg_set_queue(resource queue, array data)
 
     Set information for a message queue  
array msg_stat_queue(resource queue)
 
     Returns information about a message queue  
# php4/ext/sysvsem/sysvsem.c
int sem_acquire(int id)
 
     Acquires the semaphore with the given id, blocking if necessary  
int sem_get(int key [, int max_acquire [, int perm [, int auto_release]])
 
     Return an id for the semaphore with the given key, and allow max_acquire (default 1) processes to acquire it simultaneously  
int sem_release(int id)
 
     Releases the semaphore with the given id  
int sem_remove(int id)
 
     Removes semaphore from Unix systems  
# php4/ext/sysvshm/sysvshm.c
int shm_attach(int key [, int memsize [, int perm]])
 
     Creates or open a shared memory segment  
int shm_detach(int shm_identifier)
 
     Disconnects from shared memory segment  
mixed shm_get_var(int id, int variable_key)
 
     Returns a variable from shared memory  
int shm_put_var(int shm_identifier, int variable_key, mixed variable)
 
     Inserts or updates a variable in shared memory  
int shm_remove(int shm_identifier)
 
     Removes shared memory from Unix systems  
int shm_remove_var(int id, int variable_key)
 
     Removes variable from shared memory  
# php4/ext/tokenizer/tokenizer.c
array token_get_all(string source)
 
    
string token_name(int type)
 
    
# php4/ext/w32api/w32api.c
 
   *	Creates an exact clone of the object.
    
 
   *	Creates an instance of type TypeName
    
 
   *	Decreases the reference count on a variable
    
 
   *	Defines a C Like Type for use.
    
 
   *	Registers a callback type
    
 
   *	Registers and Loads a function from an underlying Dll 
    
 
   *	Returns the size of a registered type
    
 
   *	Unregisters a previously loaded function
    
# php4/ext/wddx/wddx.c
int wddx_add_vars(int packet_id,  mixed var_names [, mixed ...])
 
     Serializes given variables and adds them to packet given by packet_id  
mixed wddx_deserialize(string packet) 
 
     Deserializes given packet and returns a PHP value  
string wddx_packet_end(int packet_id)
 
     Ends specified WDDX packet and returns the string containing the packet  
int wddx_packet_start([string comment])
 
     Starts a WDDX packet with optional comment and returns the packet id  
string wddx_serialize_value(mixed var [, string comment])
 
     Creates a new packet and serializes the given value  
string wddx_serialize_vars(mixed var_name [, mixed ...])
 
     Creates a new packet and serializes given variables into a struct  
# php4/ext/xml/xml.c
string utf8_decode(string data) 
 
     Converts a UTF-8 encoded string to ISO-8859-1  
string utf8_encode(string data) 
 
     Encodes an ISO-8859-1 string to UTF-8  
string xml_error_string(int code)
 
     Get XML parser error string  
int xml_get_current_byte_index(resource parser) 
 
     Get current byte index for an XML parser  
int xml_get_current_column_number(resource parser)
 
     Get current column number for an XML parser  
int xml_get_current_line_number(resource parser) 
 
     Get current line number for an XML parser  
int xml_get_error_code(resource parser) 
 
     Get XML parser error code  
int xml_parse(resource parser, string data [, int isFinal]) 
 
     Start parsing an XML document  
int xml_parse_into_struct(resource parser, string data, array &struct, array &index) 
 
     Parsing a XML document  
resource xml_parser_create([string encoding]) 
 
     Create an XML parser  
resource xml_parser_create_ns([string encoding [, string sep]]) 
 
     Create an XML parser  
int xml_parser_free(resource parser) 
 
     Free an XML parser  
int xml_parser_get_option(resource parser, int option) 
 
     Get options from an XML parser  
int xml_parser_set_option(resource parser, int option, mixed value) 
 
     Set options in an XML parser  
int xml_set_character_data_handler(resource parser, string hdl) 
 
     Set up character data handler  
int xml_set_default_handler(resource parser, string hdl) 
 
     Set up default handler  
int xml_set_element_handler(resource parser, string shdl, string ehdl) 
 
     Set up start and end element handlers  
int xml_set_end_namespace_decl_handler(resource parser, string hdl) 
 
     Set up character data handler  
int xml_set_external_entity_ref_handler(resource parser, string hdl) 
 
     Set up external entity reference handler  
int xml_set_notation_decl_handler(resource parser, string hdl) 
 
     Set up notation declaration handler  
int xml_set_object(resource parser, object &obj) 
 
     Set up object which should be used for callbacks  
int xml_set_processing_instruction_handler(resource parser, string hdl) 
 
     Set up processing instruction (PI) handler  
int xml_set_start_namespace_decl_handler(resource parser, string hdl) 
 
     Set up character data handler  
int xml_set_unparsed_entity_decl_handler(resource parser, string hdl) 
 
     Set up unparsed entity declaration handler  
# php4/ext/xmlrpc/xmlrpc-epi-php.c
array xmlrpc_decode(string xml [, string encoding])
 
     Decodes XML into native PHP types  
array xmlrpc_decode_request(string xml, string& method [, string encoding])
 
     Decodes XML into native PHP types  
string xmlrpc_encode(mixed value)
 
     Generates XML for a PHP value  
string xmlrpc_encode_request(string method, mixed params)
 
     Generates XML for a method request  
string xmlrpc_get_type(mixed value)
 
     Gets xmlrpc type for a PHP value. Especially useful for base64 and datetime strings  
string xmlrpc_is_fault(array)
 
     Determines if an array value represents an XMLRPC fault.  
array xmlrpc_parse_method_descriptions(string xml)
 
     Decodes XML into a list of method descriptions  
int xmlrpc_server_add_introspection_data(handle server, array desc)
 
     Adds introspection documentation   
mixed xmlrpc_server_call_method(handle server, string xml, mixed user_data [, array output_options])
 
     Parses XML requests and call methods  
handle xmlrpc_server_create(void)
 
     Creates an xmlrpc server  
void xmlrpc_server_destroy(handle server)
 
     Destroys server resources  
bool xmlrpc_server_register_introspection_callback(handle server, string function)
 
     Register a PHP function to generate documentation  
bool xmlrpc_server_register_method(handle server, string method_name, string function)
 
     Register a PHP function to handle method matching method_name  
bool xmlrpc_set_type(string value, string type)
 
     Sets xmlrpc type, base64 or datetime, for a PHP string value  
# php4/ext/xslt/sablot.c
string xslt_backend_info()
 
     Returns the information on the compilation settings of the backend  
string xslt_backend_name()
 
     Returns the name of the Backend (here "Sablotron") 
string xslt_backend_version()
 
     Returns the version number of Sablotron (if available)  
resource xslt_create(void) 
 
     Create a new XSLT processor  
int xslt_errno(resource processor)
 
     Error number  
string xslt_error(resource processor)
 
     Error string  
void xslt_free(resource processor)
 
     Free the xslt processor up  
int xslt_getopt(resource processor)
 
     Get options on a given xsl processor  
string xslt_process(resource processor, string xml, string xslt[, mixed result[, array args[, array params]]])
 
     Perform the xslt transformation  
void xslt_set_base(resource processor, string base)
 
     Sets the base URI for all XSLT transformations  
void xslt_set_encoding(resource processor, string encoding)
 
     Set the output encoding for the current stylesheet  
void xslt_set_error_handler(resource processor, mixed error_func)
 
     Set the error handler, to be called when an XSLT error happens  
void xslt_set_log(resource processor, string logfile)
 
     Set the log file to write the errors to (defaults to stderr)  
int xslt_set_object(resource parser, object obj)
 
     sets the object in which to resolve callback functions  
void xslt_set_sax_handlers(resource processor, array handlers)
 
     Set the SAX handlers to be called when the XML document gets processed  
void xslt_set_scheme_handlers(resource processor, array handlers)
 
     Set the scheme handlers for the XSLT processor  
int xslt_setopt(resource processor, int newmask)
 
     Set options on a given xsl processor  
# php4/ext/yaz/php_yaz.c
string yaz_addinfo(int id)
 
     Return additional info for last error (empty string if none)  
int yaz_ccl_conf(int id, array package)
 
     Configure CCL package  
int yaz_ccl_parse(int id, string query, array res)
 
     Parse a CCL query  
int yaz_close(int id)
 
     Destory and close target  
int yaz_connect(string zurl [ array options])
 
     Create target with given zurl. Returns positive id if successful.  
int yaz_database (int id, string databases)
 
     Specify the databases within a session  
int yaz_element(int id, string elementsetname)
 
     Set Element-Set-Name for retrieval  
int yaz_errno(int id)
 
     Return last error number (>0 for bib-1 diagnostic, <0 for other error, 0 for no error  
string yaz_error(int id)
 
     Return last error message  
int yaz_es_result(int id)
 
     Inspects Extended Services Result  
int yaz_hits(int id)
 
     Return number of hits (result count) for last search  
int yaz_itemorder(int id, array package)
 
     Sends Item Order request  
int yaz_present(int id)
 
     Retrieve records  
int yaz_range(int id, int start, int number)
 
     Set result set start point and number of records to request  
string yaz_record(int id, int pos, string type)
 
     Return record information at given result set position  
int yaz_scan(int id, type, query [, flags])
 
     Sends Scan Request  
int yaz_scan_result(int id, array options)
 
     Inspects Scan Result  
int yaz_schema(int id, string schema)
 
     Set Schema for retrieval  
int yaz_search(int id, string type, string query)
 
     Specify query of type for search - returns true if successful  
int yaz_sort(int id, string sortspec)
 
     Set result set sorting criteria  
int yaz_syntax(int id, string syntax)
 
     Set record syntax for retrieval  
int yaz_wait([array options])
 
     Process events.  
# php4/ext/yp/yp.c
void yp_all(string domain, string map, string callback)
 
     Traverse the map and call a function on each entry  
array yp_cat(string domain, string map)
 
     Return an array containing the entire map  
string yp_err_string(int errorcode)
 
     Returns the corresponding error string for the given error code  
int yp_errno()
 
     Returns the error code from the last call or 0 if no error occured  
array yp_first(string domain, string map)
 
     Returns the first key as array with $var[$key] and the the line as the value  
string yp_get_default_domain(void)
 
     Returns the domain or false  
string yp_master(string domain, string map)
 
     Returns the machine name of the master  
string yp_match(string domain, string map, string key)
 
     Returns the matched line or false  
array yp_next(string domain, string map, string key)
 
     Returns an array with $var[$key] and the the line as the value  
int yp_order(string domain, string map)            
 
     Returns the order number or false  
# php4/ext/zip/zip.c
void zip_close(resource zip)
 
     Close a Zip archive  
void zip_entry_close(resource zip_ent)
 
     Close a zip entry  
int zip_entry_compressedsize(resource zip_entry)
 
     Return the compressed size of a ZZip entry  
string zip_entry_compressionmethod(resource zip_entry)
 
     Return a string containing the compression method used on a particular entry  
int zip_entry_filesize(resource zip_entry)
 
     Return the actual filesize of a ZZip entry  
string zip_entry_name(resource zip_entry)
 
     Return the name given a ZZip entry  
bool zip_entry_open(resource zip_dp, resource zip_entry, string mode)
 
     Open a Zip File, pointed by the resource entry  
string zip_entry_read(resource zip_ent)
 
     Read X bytes from an opened zip entry  
resource zip_open(string filename)
 
     Open a new zip archive for reading  
resource zip_read(resource zip)
 
     Returns the next file in the archive  
# php4/ext/zlib/zlib.c
string gzcompress(string data [, int level]) 
 
     Gzip-compress a string  
string gzdeflate(string data [, int level]) 
 
     Gzip-compress a string  
string gzencode(string data [, int level [, int encoding_mode]])
 
     GZ encode a string  
array gzfile(string filename [, int use_include_path])
 
     Read und uncompress entire .gz-file into an array  
string gzinflate(string data [, int length]) 
 
     Unzip a gzip-compressed string  
int gzopen(string filename, string mode [, int use_include_path])
 
     Open a .gz-file and return a .gz-file pointer  
string gzuncompress(string data [, int length]) 
 
     Unzip a gzip-compressed string  
string ob_gzhandler(string str, int mode)
 
     Encode str based on accept-encoding setting - designed to be called from ob_start()  
int readgzfile(string filename [, int use_include_path])
 
     Output a .gz-file  
# php4/main/main.c
bool set_time_limit(int seconds)
 
     Sets the maximum time a script can run  
# php4/main/output.c
bool ob_clean(void)
 
     Clean (delete) the current output buffer  
bool ob_end_clean(void)
 
     Clean the output buffer, and delete current output buffer  
bool ob_end_flush(void)
 
     Flush (send) the output buffer, and delete current output buffer  
bool ob_flush(void)
 
     Flush (send) contents of the output buffer. The last buffer content is sent to next buffer  
bool ob_get_clean(void)
 
     Get current buffer contents and delete current output buffer  
string ob_get_contents(void)
 
     Return the contents of the output buffer  
bool ob_get_flush(void)
 
     Get current buffer contents, flush (send) the output buffer, and delete current output buffer  
string ob_get_length(void)
 
     Return the length of the output buffer  
int ob_get_level(void)
 
     Return the nesting level of the output buffer  
false|array ob_get_status([bool full_status])
 
     Return the status of the active or all output buffers  
void ob_implicit_flush([int flag])
 
     Turn implicit flush on/off and is equivalent to calling flush() after every output call  
false|array ob_list_handlers()
 
   *  List all output_buffers in an array 
    
bool ob_start([ string|array user_function [, int chunk_size [, bool erase]]])
 
     Turn on Output Buffering (specifying an optional output handler).  
bool output_add_rewrite_var(string name, string value)
 
     Add URL rewriter values  
bool output_reset_rewrite_vars(void)
 
     Reset(clear) URL rewriter values  
# php4/main/user_streams.c
bool stream_register_wrapper(string protocol, string classname)
 
     Registers a custom URL protocol handler class  
# php4/sapi/apache/mod_php4.c
# php4/sapi/apache/php_apache.c
bool apache_child_terminate(void)
 
     Terminate apache process after this request  
object apache_lookup_uri(string URI)
 
     Perform a partial request of the given URI to obtain information about it  
string apache_note(string note_name [, string note_value])
 
     Get and set Apache request notes  
array apache_request_headers(void)
 
     Fetch all HTTP request headers  
array apache_response_headers(void)
 
     Fetch all HTTP response headers  
bool apache_setenv(string variable, string value [, bool walk_to_top])
 
     Set an Apache subprocess_env variable  
array getallheaders(void)
 
     Alias for apache_request_headers()  
bool virtual(string filename)
 
     Perform an Apache sub-request  
# php4/sapi/apache2filter/php_functions.c
bool apache_getenv(string variable [, bool walk_to_top])
 
     Get an Apache subprocess_env variable  
string apache_note(string note_name [, string note_value])
 
     Get and set Apache request notes  
array apache_response_headers(void)
 
     Fetch all HTTP response headers  
bool apache_setenv(string variable, string value [, bool walk_to_top])
 
     Set an Apache subprocess_env variable  
array getallheaders(void)
 
     Fetch all HTTP request headers  
bool virtual(string uri)
 
   Perform an apache sub-request  
# php4/sapi/apache2handler/php_functions.c
array apache_get_modules(void)
 
     Get a list of loaded Apache modules  
string apache_get_version(void)
 
     Fetch Apache version  
bool apache_getenv(string variable [, bool walk_to_top])
 
     Get an Apache subprocess_env variable  
string apache_note(string note_name [, string note_value])
 
     Get and set Apache request notes  
array apache_response_headers(void)
 
     Fetch all HTTP response headers  
bool apache_setenv(string variable, string value [, bool walk_to_top])
 
     Set an Apache subprocess_env variable  
array getallheaders(void)
 
     Fetch all HTTP request headers  
bool virtual(string uri)
 
   Perform an apache sub-request  
# php4/sapi/nsapi/nsapi.c
array nsapi_request_headers(void)
 
     Get all headers from the request  
array nsapi_response_headers(void)
 
     Get all headers from the response  
bool nsapi_virtual(string uri)
 
     Perform an NSAPI sub-request  
