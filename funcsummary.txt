# php4/ext/aspell/aspell.c
int aspell_check(aspell int, string word) 
     Return if word is valid  
int aspell_check_raw(aspell int, string word) 
     Return if word is valid, ignoring case or trying to trim it in any way  
int aspell_new(string master [, string personal]) 
     Load a dictionary  
array aspell_suggest(aspell int, string word) 
     Return array of Suggestions  
# php4/ext/bcmath/bcmath.c
string bcadd(string left_operand, string right_operand [, int scale]) 
     Returns the sum of two arbitrary precision numbers  
string bccomp(string left_operand, string right_operand [, int scale]) 
     Compares two arbitrary precision numbers  
string bcdiv(string left_operand, string right_operand [, int scale]) 
     Returns the quotient of two arbitrary precision numbers (division)  
string bcmod(string left_operand, string right_operand) 
     Returns the modulus of the two arbitrary precision operands  
string bcmul(string left_operand, string right_operand [, int scale]) 
     Returns the multiplication of two arbitrary precision numbers  
string bcpow(string x, string y [, int scale]) 
     Returns the value of an arbitrary precision number raised to the power of another  
string bcscale(int scale) 
     Sets default scale parameter for all bc math functions  
string bcsqrt(string operand [, int scale]) 
     Returns the square root of an arbitray precision number  
string bcsub(string left_operand, string right_operand [, int scale]) 
     Returns the difference between two arbitrary precision numbers  
# php4/ext/bz2/bz2.c
int bzclose(int bz) 
     Close a BZip2 stream  
string bzcompress(string source[, int blockSize100k[, int workFactor]]) 
     Compress a string into BZip2 encoded data  
string bzdecompress(string source[, int small]) 
     Decompress BZip2 compressed data  
int bzerrno(int bz) 
     Return the error number  
array bzerror(int bz) 
     Return the error number and error string in an associative array  
string bzerrstr(int bz) 
     Return the error string  
int bzflush(int bz) 
     Flush a BZip2 stream  
int bzopen(string|int file|fp, string mode) 
     Open a new BZip2 stream  
string bzread(int bz[, int len]) 
     Read len bytes from the BZip2 stream given by bz  
int bzwrite(int bz, string data[, int len]) 
     Write data to the BZip2 stream given by bz  
# php4/ext/calendar/cal_unix.c
int jdtounix(int jday) 
     Convert Julian Day to UNIX timestamp  
int unixtojd([int timestamp]) 
     Convert UNIX timestamp to Julian Day  
# php4/ext/calendar/calendar.c
int frenchtojd(int month, int day, int year) 
     Convert a french republic calendar date to julian day count  
int gregoriantojd(int month, int day, int year) 
     Convert a gregorian calendar date to julian day count  
mixed jddayofweek(int juliandaycount [, int mode]) 
     Returns name or number of day of week from julian day count  
string jdmonthname(int juliandaycount, int mode) 
     Returns name of month for julian day count  
string jdtofrench(int juliandaycount) 
     Convert a julian day count to a french republic calendar date  
string jdtogregorian(int juliandaycount) 
     Convert a julian day count to a gregorian calendar date  
string jdtojewish(int juliandaycount) 
     Convert a julian day count to a jewish calendar date  
string jdtojulian(int juliandaycount) 
     Convert a julian day count to a julian calendar date  
int jewishtojd(int month, int day, int year) 
     Convert a jewish calendar date to a julian day count  
int juliantojd(int month, int day, int year) 
     Convert a julian calendar date to julian day count  
# php4/ext/calendar/easter.c
int easter_date([int year]) 
     Return the timestamp of midnight on Easter of a given year (defaults to current year)  
int easter_days([int year]) 
     Return the number of days after March 21 that Easter falls on for a given year (defaults to current year)  
# php4/ext/ccvs/ccvs.c
string ccvs_add(string session, string invoice, string argtype, string argval) 
   ???  
string ccvs_auth(string session, string invoice) 
   ???  
string ccvs_command(string session, string type, string argval) 
   ???  
int ccvs_count(string session, string type) 
   ???  
string ccvs_delete(string session, string invoice) 
   ???  
string ccvs_done(string sess) 
   ???  
string ccvs_init(string name) 
   ???  
string ccvs_lookup(string session, string invoice, int inum) 
   ???  
string ccvs_new(string session, string invoice) 
   ???  
string ccvs_report(string session, string type) 
   ???  
string ccvs_return(string session, string invoice) 
   ???  
string ccvs_reverse(string session, string invoice) 
   ???  
string ccvs_sale(string session, string invoice) 
   ???  
string ccvs_status(string session, string invoice) 
   ???  
string ccvs_textvalue(string session) 
   ???  
string ccvs_void(string session, string invoice) 
   ???  
# php4/ext/com/COM.c
mixed com_invoke(int module, string handler_name [, mixed arg [, ...]]) 
     Invokes a COM module  
int com_load(string module_name [, string remote_host [, int codepage]]) 
     Loads a COM module  
mixed com_propget(int module, string property_name) 
     Gets properties from a COM module  
bool com_propput(int module, string property_name, mixed value) 
     Puts the properties for a module  
# php4/ext/cpdf/cpdf.c
void cpdf_add_annotation(int pdfdoc, double xll, double yll, double xur, double xur, string title, string text [, int mode]) 
     Sets annotation  
int cpdf_add_outline(int pdfdoc, int lastoutline, int sublevel, int open, int pagenr, string title) 
     Add outline  
void cpdf_arc(int pdfdoc, double x, double y, double radius, double start, double end [, int mode]) 
     Draws an arc  
void cpdf_begin_text(int pdfdoc) 
     Starts text section  
void cpdf_circle(int pdfdoc, double x, double y, double radius [, int mode]) 
     Draws a circle  
void cpdf_clip(int pdfdoc) 
     Clips to current path  
void cpdf_close(int pdfdoc) 
     Closes the pdf document  
void cpdf_closepath_fill_stroke(int pdfdoc) 
     Close, fill and stroke current path  
void cpdf_closepath(int pdfdoc) 
     Close path  
void cpdf_closepath_stroke(int pdfdoc) 
     Close path and draw line along path  
void cpdf_continue_text(int pdfdoc, string text) 
     Output text in next line  
void cpdf_curveto(int pdfdoc, double x1, double y1, double x2, double y2, double x3, double y3 [, int mode]) 
     Draws a curve  
void cpdf_end_text(int pdfdoc) 
     Ends text section  
void cpdf_fill(int pdfdoc) 
     Fill current path  
void cpdf_fill_stroke(int pdfdoc) 
     Fill and stroke current path  
array cpdf_finalize(int pdfdoc) 
     Creates pdf doc in memory  
void cpdf_finalize_page(int pdfdoc, int pagenr) 
     Ends the page to save memory  
void cpdf_global_set_document_limits(int maxPages, int maxFonts, int maxImages, int maxAnnots, int maxObjects) 
     Sets document settings for all documents  
void cpdf_import_jpeg(int pdfdoc, string filename, double x, double y, double angle, double width, double height, double x-scale, double y-scale, int gsave [, int mode]) 
     Includes jpeg image  
void cpdf_lineto(int pdfdoc, double x, double y [, int mode]) 
     Draws a line  
void cpdf_moveto(int pdfdoc, double x, double y [, int mode]) 
     Sets current point  
void cpdf_newpath(int pdfdoc) 
     Starts new path  
int cpdf_open(int compression [, string filename [, array doc_limits]]) 
     Opens a new pdf document  
array cpdf_output_buffer(int pdfdoc) 
     Returns the internal memory stream as string  
void cpdf_page_init(int pdfdoc, int pagenr, int orientation, int height, int width [, double unit]) 
     Starts page  
void cpdf_place_inline_image(int pdfdoc, int gdimage, double x, double y, double angle, fload width, float height, int gsave [, int mode]) 
     Includes image  
void cpdf_rect(int pdfdoc, double x, double y, double width, double height [, int mode]) 
     Draws a rectangle  
void cpdf_restore(int pdfdoc) 
     Restores formerly saved enviroment  
void cpdf_rlineto(int pdfdoc, double x, double y [, int mode]) 
     Draws a line relative to current point  
void cpdf_rmoveto(int pdfdoc, double x, double y [, int mode]) 
     Sets current point  
void cpdf_rotate(int pdfdoc, double angle) 
     Sets rotation  
void cpdf_rotate_text(int pdfdoc, double angle) 
     Sets character spacing  
void cpdf_save(int pdfdoc) 
     Saves current enviroment  
array cpdf_save_to_file(int pdfdoc, string filename) 
     Saves the internal memory stream to a file  
void cpdf_scale(int pdfdoc, double x-scale, double y-scale) 
     Sets scaling  
void cpdf_set_action_url(int pdfdoc, double xll, double yll, double xur, double xur, string url [, int mode]) 
     Sets Hyperlink  
void cpdf_set_char_spacing(int pdfdoc, double space) 
     Sets character spacing  
bool cpdf_set_creator(int pdfdoc, string creator) 
     Sets the creator field  
void cpdf_set_current_page(int pdfdoc, int pagenr) 
     Sets page for output  
void cpdf_setdash(int pdfdoc, long white, long black) 
     Sets dash pattern  
void cpdf_setflat(int pdfdoc, double value) 
     Sets flatness  
void cpdf_set_font_directories(int pdfdoc, string pfmdir, string pfbdir) 
     Set directories to search when using external fonts.  
void cpdf_set_font(int pdfdoc, string font, double size, string encoding) 
     Select the current font face, size and encoding  
void cpdf_set_font_map_file(int pdfdoc, string filename) 
     Set fontname to filename translation map when using external fonts.  
void cpdf_setgray_fill(int pdfdoc, double value) 
     Sets filling color to gray value  
void cpdf_setgray(int pdfdoc, double value) 
     Sets drawing and filling color to gray value  
void cpdf_setgray_stroke(int pdfdoc, double value) 
     Sets drawing color to gray value  
void cpdf_set_horiz_scaling(int pdfdoc, double scale) 
     Sets horizontal scaling of text  
bool cpdf_set_keywords(int pdfptr, string keywords) 
     Fills the keywords field of the info structure  
void cpdf_set_leading(int pdfdoc, double distance) 
     Sets distance between text lines  
void cpdf_setlinecap(int pdfdoc, int value) 
     Sets linecap parameter  
void cpdf_setlinejoin(int pdfdoc, int value) 
     Sets linejoin parameter  
void cpdf_setlinewidth(int pdfdoc, double width) 
     Sets line width  
void cpdf_setmiterlimit(int pdfdoc, double value) 
     Sets miter limit  
void cpdf_set_page_animation(int pdfdoc, int transition, double duration, double direction, int orientation, int inout) 
     Sets transition between pages  
void cpdf_setrgbcolor_fill(int pdfdoc, double red, double green, double blue) 
     Sets filling color to rgb color value  
void cpdf_setrgbcolor(int pdfdoc, double red, double green, double blue) 
     Sets drawing and filling color to rgb color value  
void cpdf_setrgbcolor_stroke(int pdfdoc, double red, double green, double blue) 
     Sets drawing color to rgb color value  
bool cpdf_set_subject(int pdfptr, string subject) 
     Fills the subject field of the info structure  
void cpdf_set_text_matrix(int pdfdoc, arry matrix) 
     Sets the text matrix  
void cpdf_set_text_pos(int pdfdoc, double x, double y [, int mode]) 
     Set the position of text for the next cpdf_show call  
void cpdf_set_text_rendering(int pdfdoc, int rendermode) 
     Determines how text is rendered  
void cpdf_set_text_rise(int pdfdoc, double value) 
     Sets the text rise  
bool cpdf_set_title(int pdfptr, string title) 
     Fills the title field of the info structure  
void cpdf_set_viewer_preferences(int pdfdoc, array preferences) 
     How to show the document in the viewer  
void cpdf_set_word_spacing(int pdfdoc, double space) 
     Sets spacing between words  
void cpdf_show(int pdfdoc, string text) 
     Output text at current position  
void cpdf_show_xy(int pdfdoc, string text, double x-koor, double y-koor [, int mode]) 
     Output text at position  
double cpdf_stringwidth(int pdfdoc, string text) 
     Returns width of text in current font  
void cpdf_stroke(int pdfdoc) 
     Draw line along path path  
void cpdf_text(int pdfdoc, string text [, double x-koor, double y-koor [, int mode [, double orientation [, int alignmode]]]]) 
     Output text  
void cpdf_translate(int pdfdoc, double x, double y) 
     Sets origin of coordinate system  
# php4/ext/crack/crack.c
string crack_check([int dictionary,] string password) 
     Performs an obscure check with the given password  
string crack_closedict([int link_identifier]) 
     Closes an open cracklib dictionary.  
string crack_getlastmessage() 
     Returns the message from the last obscure check.  
string crack_opendict(string dictionary) 
     Opens a new cracklib dictionary  
# php4/ext/ctype/ctype.c
bool isalnum(mixed c) 
      Check for alphanumeric character(s)  
bool isalpha(mixed c) 
      Check for alphabetic character(s)  
bool iscntrl(mixed c) 
      Check for control character(s)  
bool isdigit(mixed c) 
     Check for numeric character(s)  
bool isgraph(mixed c) 
      Check for any printable character(s) except space  
bool islower(mixed c) 
     Check for lowercase character(s)   
bool isprint(mixed c) 
      Check for printable character(s)  
bool ispunct(mixed c) 
      Check for any printable character which is not a space or an alphanumeric character  
bool isspace(mixed c) 
      Check for whitespace character(s) 
bool isupper(mixed c) 
      Check for uppercase character(s)  
bool isxdigit(mixed c) 
      Check for character(s) representing a hexadecimal digit  
# php4/ext/curl/curl.c
void curl_close(int ch) 
     Close a CURL session  
int curl_errno(int ch) 
     Return an integer containing the last error number  
string curl_error(int ch) 
     Return a string contain the last error for the current session  
bool curl_exec(int ch) 
     Perform a CURL session  
string curl_getinfo(int ch, int opt) 
     Get information regarding a specific transfer  
int curl_init([string url]) 
     Initialize a CURL session  
bool curl_setopt(int ch, string option, mixed value) 
     Set an option for a CURL transfer  
string curl_version(void) 
     Return the CURL version string.  
# php4/ext/db/db.c
string dblist(void) 
     Describes the dbm-compatible library being used  
bool dbmclose(int dbm_identifier) 
     Closes a dbm database  
int dbmdelete(int dbm_identifier, string key) 
     Deletes the value for a key from a dbm database  
int dbmexists(int dbm_identifier, string key) 
     Tells if a value exists for a key in a dbm database  
string dbmfetch(int dbm_identifier, string key) 
     Fetches a value for a key from a dbm database  
string dbmfirstkey(int dbm_identifier) 
     Retrieves the first key from a dbm database  
int dbminsert(int dbm_identifier, string key, string value) 
     Inserts a value for a key in a dbm database  
string dbmnextkey(int dbm_identifier, string key) 
     Retrieves the next key from a dbm database  
int dbmopen(string filename, string mode) 
     Opens a dbm database  
int dbmreplace(int dbm_identifier, string key, string value) 
     Replaces the value for a key in a dbm database  
# php4/ext/dba/dba.c
void dba_close(int handle) 
     Closes database  
bool dba_delete(string key, int handle) 
     Deletes the entry associated with key  
bool dba_exists(string key, int handle) 
     Checks, if the specified key exists  
string dba_fetch(string key, int handle) 
     Fetches the data associated with key  
string dba_firstkey(int handle) 
     Resets the internal key pointer and returns the first key  
bool dba_insert(string key, string value, int handle) 
     Inserts value as key, returns false, if key exists already  
string dba_nextkey(int handle) 
     Returns the next key  
int dba_open(string path, string mode, string handlername [, string ...]) 
     Opens path using the specified handler in mode 
bool dba_optimize(int handle) 
     Optimizes (e.g. clean up, vacuum) database  
int dba_popen(string path, string mode, string handlername [, string ...]) 
     Opens path using the specified handler in mode persistently  
bool dba_replace(string key, string value, int handle) 
     Inserts value as key, replaces key, if key exists already  
bool dba_sync(int handle) 
     Synchronizes database  
# php4/ext/dbase/dbase.c
bool dbase_add_record(int identifier, array data) 
     Adds a record to the database  
bool dbase_close(int identifier) 
     Closes an open dBase-format database file  
bool dbase_create(string filename, array fields) 
     Creates a new dBase-format database file  
bool dbase_delete_record(int identifier, int record) 
     Marks a record to be deleted  
array dbase_get_record(int identifier, int record) 
     Returns an array representing a record from the database  
array dbase_get_record_with_names(int identifier, int record) 
     Returns an associative array representing a record from the database  
int dbase_numfields(int identifier) 
     Returns the number of fields (columns) in the database  
int dbase_numrecords(int identifier) 
     Returns the number of records in the database  
int dbase_open(string name, int mode) 
     Opens a dBase-format database file  
bool dbase_pack(int identifier) 
     Packs the database (deletes records marked for deletion)  
bool dbase_replace_record(int identifier, array data, int recnum) 
     Replaces a record to the database  
# php4/ext/domxml/php_domxml.c
object domxml_add_root(string name) 
     Adds root node to document  
array domxml_attr_name() 
     Returns list of attribute names  
array domxml_attr_specified() 
     Returns list of attribute names  
array domxml_attr_value() 
     Returns list of attribute names  
array domxml_cdata_length() 
     Returns list of attribute names  
object domxml_doc_create_attribute(string name) 
     Creates new attribute node  
object domxml_doc_create_comment(string name) 
     Creates new comment node  
object domxml_doc_create_element(string name) 
     Creates new element node  
object domxml_doc_create_processing_instruction(string name) 
     Creates new processing_instruction node  
object domxml_doc_create_text_node(string name) 
     Creates new text node  
object domxml_doc_doctype() 
     Returns DomDocumentType  
array domxml_doc_document_element() 
     Returns root node of document  
object domxml_doc_implementation() 
     Returns DomeDOMImplementation  
object domxml_doc_imported_node(int node, bool recursive) 
     Creates new element node  
array domxml_doctype_name() 
     Return name of DocumentType  
object domxml_dtd([int doc_handle]) 
     Returns DTD of document  
string domxml_dumpmem([int doc_handle]) 
     Dumps document into string  
object domxml_element(string name) 
     Constructor of DomElement  
string domxml_elem_get_attribute_node(string attrname) 
     Returns value of given attribute  
string domxml_elem_get_attribute(string attrname) 
     Returns value of given attribute  
string domxml_elem_get_element_by_tagname(string tagname) 
     Returns element for given attribute  
string domxml_elem_remove_attribute(string attrname) 
     Remove given attribute  
bool domxml_elem_set_attribute_node(int attr) 
     Sets value of given attribute  
bool domxml_elem_set_attribute(string attrname, string value) 
     Sets value of given attribute  
string domxml_elem_tagname() 
     Returns tag name of element node  
object domxml_new_child(string name, string content) 
     Adds child node to parent node  
object domxml_new_xmldoc(string version) 
     Creates new xmldoc  
object domxml_node_add_child(int domnode) 
     Adds existing node to parent node  
object domxml_node_append_child(int domnode) 
     Adds node to list of children  
array domxml_node_attributes() 
     Returns list of attributes of node  
array domxml_node_children() 
     Returns list of children nodes  
object domxml_node_first_child() 
     Returns first child from list of children  
object domxml_node_has_attributes() 
     Returns true if node has attributes  
object domxml_node_has_child_nodes() 
     Returns true if node has children  
object domxml_node_insert_before(int newnode, int refnode) 
     Adds node in list of nodes before given node  
object domxml_node_last_child() 
     Returns last child from list of children  
object domxml_node_name() 
     Returns name of node  
object domxml_node_next_sibling() 
     Returns next child from list of children  
object domxml_node_owner_document() 
     Returns document this node belongs to  
object domxml_node_parent() 
     Returns parent of node  
object domxml_node_prefix() 
     Returns namespace prefix of node  
object domxml_node_previous_sibling() 
     Returns previous child from list of children  
bool domxml_node_set_content(string content) 
     Set content of a node  
bool domxml_node_set_name(string name) 
     Sets name of a node  
object domxml_node(string name) 
     Creates node  
bool domxml_node_text_concat(string content) 
     Add string tocontent of a node  
object domxml_node_unlink_node() 
     Deletes node  
object domxml_node_value() 
     Returns name of value  
string domxml_notation_public_id() 
     Returns public id of notation node  
string domxml_notation_system_id() 
     Returns system id of notation node  
array domxml_pi_data() 
     Returns data of pi  
array domxml_pi_target() 
     Returns target of pi  
int domxml_test(int id) 
     Unity function for testing  
string domxml_version() 
     Dumps document into string  
int node_attributes(zval **attributes, int node) 
     Returns list of children nodes  
int node_children([int node]) 
     Returns list of children nodes  
int node_namespace([int node]) 
     Returns list of namespaces  
object xmldocfile(string filename) 
     Creates DOM object of XML document in file 
object xmldoc(string xmldoc) 
     Creates DOM object of XML document  
object xmltree(string xmltree) 
     Create a tree of PHP objects from an XML document  
int xpath_eval_expression([int xpathctx_handle,] string str) 
     Evaluate the XPath Location Path in the given string  
int xpath_eval([int xpathctx_handle,] string str) 
     Evaluate the XPath Location Path in the given string  
bool xpath_init(void) 
     Initializing XPath environment  
string xpath_new_context([int doc_handle]) 
     Create new XPath context  
int xptr_eval([int xpathctx_handle,] string str) 
     Evaluate the XPtr Location Path in the given string  
string xptr_new_context([int doc_handle]) 
     Create new XPath context  
# php4/ext/exif/exif.c
string read_exif_data(string filename) 
     Reads the EXIF header data from a JPEG file  
# php4/ext/fdf/fdf.c
bool fdf_add_template(int fdfdoc, int newpage, string filename, string template, int rename) 
     Adds a template into the FDF document  
bool fdf_close(int fdfdoc) 
     Closes the FDF document  
int fdf_create(void) 
     Creates a new FDF document  
string fdf_get_file(int fdfdoc) 
     Gets the value of /F key  
string fdf_get_status(int fdfdoc) 
     Gets the value of /Status key  
string fdf_get_value(int fdfdoc, string fieldname) 
     Gets the value of a field as string  
string fdf_next_field_name(int fdfdoc [, string fieldname]) 
     Gets the name of the next field name or the first field name  
int fdf_open(string filename) 
     Opens a new FDF document  
bool fdf_save(int fdfdoc, string filename) 
     Writes out the FDF file  
bool fdf_set_ap(int fdfdoc, string fieldname, int face, string filename, int pagenr) 
     Sets the appearence of a field  
bool fdf_set_file(int fdfdoc, string filename) 
     Sets the value of /F key  
bool fdf_set_flags(int fdfdoc, string fieldname, int whichflags, int newflags) 
     Sets flags for a field in the FDF document  
bool fdf_set_javascript_action(int fdfdoc, string fieldname, int whichtrigger, string script) 
     Sets the javascript action for a field  
bool fdf_set_opt(int fdfdoc, string fieldname, int element, string value, string name) 
     Sets a value in the opt array for a field  
bool fdf_set_status(int fdfdoc, string status) 
     Sets the value of /Status key  
bool fdf_set_submit_form_action(int fdfdoc, string fieldname, int whichtrigger, string url, int flags) 
     Sets the submit form action for a field  
bool fdf_set_value(int fdfdoc, string fieldname, string value, int isname) 
     Sets the value of a field  
# php4/ext/filepro/filepro.c
int filepro_fieldcount(void) 
     Find out how many fields are in a filePro database  
string filepro_fieldname(int fieldnumber) 
     Gets the name of a field  
string filepro_fieldtype(int field_number) 
     Gets the type of a field  
int filepro_fieldwidth(int field_number) 
     Gets the width of a field  
string filepro_retrieve(int row_number, int field_number) 
     Retrieves data from a filePro database  
int filepro_rowcount(void) 
     Find out how many rows are in a filePro database  
bool filepro(string directory) 
     Read and verify the map file  
# php4/ext/fribidi/fribidi.c
string fribidi_log2vis(string str, string direction, int charset) 
     Convert a logical string to a visual one  
# php4/ext/ftp/php_ftp.c
int ftp_cdup(int stream) 
     Changes to the parent directory  
int ftp_chdir(int stream, string directory) 
     Changes directories  
int ftp_connect(string host [, int port]) 
     Opens a FTP stream  
int ftp_delete(int stream, string path) 
     Deletes a file  
int ftp_exec(int stream, string command) 
     Changes directories  
int ftp_fget(int stream, int fp, string remote_file, int mode) 
     Retrieves a file from the FTP server and writes it to an open file  
int ftp_fput(int stream, string local_file, string remote_file, int mode) 
     Stores a file from an open file to the FTP server  
int ftp_get(int stream, string local_file, string remote_file, int mode) 
     Retrieves a file from the FTP server and writes it to a local file  
int ftp_login(int stream, string username, string password) 
     Logs into the FTP server  
int ftp_mdtm(int stream, string path) 
     Returns the last modification time of the file, or -1 on error  
string ftp_mkdir(int stream, string directory) 
     Creates a directory  
array ftp_nlist(int stream, string directory) 
     Returns an array of filenames in the given directory  
int ftp_pasv(int stream, int pasv) 
     Turns passive mode on or off  
int ftp_put(int stream, string remote_file, string local_file, int mode) 
     Stores a file on the FTP server  
string ftp_pwd(int stream) 
     Returns the present working directory  
int ftp_quit(int stream) 
     Closes the FTP stream  
array ftp_rawlist(int stream, string directory) 
     Returns a detailed listing of a directory as an array of output lines  
int ftp_rename(int stream, string src, string dest) 
     Renames the given file to a new path  
int ftp_rmdir(int stream, string directory) 
     Removes a directory  
int ftp_site(int stream, string cmd) 
     Sends a SITE command to the server  
int ftp_size(int stream, string path) 
     Returns the size of the file, or -1 on error  
string ftp_systype(int stream) 
     Returns the system type identifier  
# php4/ext/gd/gd.c
int image2wbmp(int im [, string filename [, int threshold]]) 
     Output WBMP image to browser or file  
void imagealphablending(resource im, bool on) 
     Turn alpha blending mode on or off for the given image  
int imagearc(int im, int cx, int cy, int w, int h, int s, int e, int col) 
     Draw a partial ellipse  
int imagechar(int im, int font, int x, int y, string c, int col) 
     Draw a character  
int imagecharup(int im, int font, int x, int y, string c, int col) 
     Draw a character rotated 90 degrees counter-clockwise  
int imagecolorallocate(int im, int red, int green, int blue) 
     Allocate a color for an image  
int imagecolorat(int im, int x, int y) 
     Get the index of the color of a pixel  
int imagecolorclosestalpha(resource im, int red, int green, int blue, int alpha) 
  	Find the closest matching colour with alpha transparency  
int imagecolorclosesthwb(int im, int red, int green, int blue) 
     Get the index of the color which has the hue, white and blackness nearest to the given color  
int imagecolorclosest(int im, int red, int green, int blue) 
     Get the index of the closest color to the specified color  
int imagecolordeallocate(int im, int index) 
     De-allocate a color for an image  
int imagecolorexactalpha(resource im, int red, int green, int blue, int alpha) 
  	Find exact match for colour with transparency  
int imagecolorexact(int im, int red, int green, int blue) 
     Get the index of the specified color  
int imagecolorresolvealpha(resource im, int red, int green, int blue, int alpha) 
     Resolve/Allocate a colour with an alpha level.  Works for true colour and palette based images  
int imagecolorresolve(int im, int red, int green, int blue) 
     Get the index of the specified color or its closest possible alternative  
int imagecolorset(int im, int col, int red, int green, int blue) 
     Set the color for the specified palette index  
array imagecolorsforindex(int im, int col) 
     Get the colors for an index  
int imagecolorstotal(int im) 
     Find out the number of colors in an image's palette  
int imagecolortransparent(int im [, int col]) 
     Define a color as transparent  
int imagecopy(int dst_im, int src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h) 
     Copy part of an image  
int imagecopymergegray(int src_im, int dst_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct) 
     Merge one part of an image with another  
int imagecopymerge(int src_im, int dst_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct) 
     Merge one part of an image with another  
int imagecopyresampled(int dst_im, int src_im, int dst_x, int dst_y, int src_x, int src_y, int dst_w, int dst_h, int src_w, int src_h) 
     Copy and resize part of an image using resampling to help ensure clarity  
int imagecopyresized(int dst_im, int src_im, int dst_x, int dst_y, int src_x, int src_y, int dst_w, int dst_h, int src_w, int src_h) 
     Copy and resize part of an image  
int imagecreatefromgif(string filename) 
     Create a new image from GIF file or URL  
int imagecreatefromjpeg(string filename) 
     Create a new image from JPEG file or URL  
int imagecreatefrompng(string filename) 
     Create a new image from PNG file or URL  
int imagecreatefromstring(string image) 
     Create a new image from the image stream in the string  
int imagecreatefromwbmp(string filename) 
     Create a new image from WBMP file or URL  
int imagecreatefromxbm(string filename) 
     Create a new image from XBM file or URL  
int imagecreate(int x_size, int y_size) 
     Create a new image  
int imagecreatetruecolor(int x_size, int y_size) 
     Create a new true color image  
int imagedashedline(int im, int x1, int y1, int x2, int y2, int col) 
     Draw a dashed line  
int imagedestroy(int im) 
     Destroy an image  
void imageellipse(resource im, int cx, int cy, int w, int h, int color) 
  	Draw an ellipse  
int imagefilledarc(int im, int cx, int cy, int w, int h, int s, int e, int col, int style) 
     Draw a filled partial ellipse  
void imagefilledellipse(resource im, int cx, int cy, int w, int h, int color) 
  	Draw an ellipse  
int imagefilledpolygon(int im, array point, int num_points, int col) 
     Draw a filled polygon  
int imagefilledrectangle(int im, int x1, int y1, int x2, int y2, int col) 
     Draw a filled rectangle  
int imagefill(int im, int x, int y, int col) 
     Flood fill  
int imagefilltoborder(int im, int x, int y, int border, int col) 
     Flood fill to specific color  
int imagefontheight(int font) 
     Get font height  
int imagefontwidth(int font) 
     Get font width  
int imagegammacorrect(int im, double inputgamma, double outputgamma) 
     Apply a gamma correction to a GD image  
int imagegif(int im [, string filename]) 
     Output GIF image to browser or file  
int imageinterlace(int im [, int interlace]) 
     Enable or disable interlace  
int imagejpeg(int im [, string filename [, int quality]]) 
     Output JPEG image to browser or file  
int imageline(int im, int x1, int y1, int x2, int y2, int col) 
     Draw a line  
int imageloadfont(string filename) 
     Load a new font  
int imagepalettecopy(int dst, int src) 
     Copy the palette from the src image onto the dst image  
int imagepng(int im [, string filename]) 
     Output PNG image to browser or file  
int imagepolygon(int im, array point, int num_points, int col) 
     Draw a polygon  
array imagepsbbox(string text, int font, int size [, int space, int tightness, int angle]) 
     Return the bounding box needed by a string if rasterized  
bool imagepsencodefont(int font_index, string filename) 
     To change a fonts character encoding vector  
bool imagepsextendfont(int font_index, double extend) 
     Extend or or condense (if extend < 1) a font  
bool imagepsfreefont(int font_index) 
     Free memory used by a font  
int imagepsloadfont(string pathname) 
     Load a new font from specified file  
bool imagepsslantfont(int font_index, double slant) 
     Slant a font  
array imagepstext(int image, string text, int font, int size, int xcoord, int ycoord [, int space, int tightness, double angle, int antialias]) 
     Rasterize a string over an image  
int imagerectangle(int im, int x1, int y1, int x2, int y2, int col) 
     Draw a rectangle  
int imagesetbrush(resource image, resource brush) 
  	Set the brush image to $brush when filling $image with the "IMG_COLOR_BRUSHED" color  
int imagesetpixel(int im, int x, int y, int col) 
     Set a single pixel  
void imagesetstyle(resource im, array styles) 
  	Set the line drawing styles for use with imageline and IMG_COLOR_STYLED.  
void imagesetthickness(resource im, int thickness) 
  	Set line thickness for drawing lines, ellipses, rectangles, polygons etc.  
int imagesettile(resource image, resource tile) 
  	Set the tile image to $tile when filling $image with the "IMG_COLOR_TILED" color  
int imagestring(int im, int font, int x, int y, string str, int col) 
     Draw a string horizontally  
int imagestringup(int im, int font, int x, int y, string str, int col) 
     Draw a string vertically - rotated 90 degrees counter-clockwise  
int imagesx(int im) 
     Get image width  
int imagesy(int im) 
     Get image height  
array imagettfbbox(int size, int angle, string font_file, string text) 
     Give the bounding box of a text using TrueType fonts  
array imagettftext(int im, int size, int angle, int x, int y, int col, string font_file, string text) 
     Write text to the image using a TrueType font  
int imagetypes(void) 
     Return the types of images supported in a bitfield - 1=GIF, 2=JPEG, 4=PNG, 8=WBMP  
int imagewbmp(int im [, string filename, [, int foreground]]) 
     Output WBMP image to browser or file  
void jpeg2wbmp (string f_org, string f_dest, int d_height, int d_width) 
     Convert JPEG image to WBMP image  
void png2wbmp (string f_org, string f_dest, int d_height, int d_width) 
     Convert PNG image to WBMP image  
# php4/ext/gd/gdt1.c
array imagepsbbox(string text, int font, int size [, int space, int tightness, int angle]) 
     Return the bounding box needed by a string if rasterized  
bool imagepsencodefont(int font_index, string filename) 
     To change a fonts character encoding vector  
bool imagepsextendfont(int font_index, double extend) 
     Extend or or condense (if extend < 1) a font  
bool imagepsfreefont(int font_index) 
     Free memory used by a font  
int imagepsloadfont(string pathname) 
     Load a new font from specified file  
bool imagepsslantfont(int font_index, double slant) 
     Slant a font  
array imagepstext(int image, string text, int font, int size, int xcoord, int ycoord [, int space, int tightness, double angle, int antialias]) 
     Rasterize a string over an image  
# php4/ext/gettext/gettext.c
string bindtextdomain(string domain_name, string dir) 
     Bind to the text domain domain_name, looking for translations in dir. Returns the current domain  
string dcgettext(string domain_name, string msgid, long category) 
     Return the translation of msgid for domain_name and category, or msgid unaltered if a translation does not exist  
string dgettext(string domain_name, string msgid) 
     Return the translation of msgid for domain_name, or msgid unaltered if a translation does not exist  
string gettext(string msgid) 
     Return the translation of msgid for the current domain, or msgid unaltered if a translation does not exist  
string textdomain(string domain) 
     Set the textdomain to "domain". Returns the current domain  
# php4/ext/gmp/gmp.c
resource gmp_abs(resource a) 
     Calculates absolute value  
resource gmp_add(resource a, resource b) 
     Add a and b  
resource gmp_and(resource a, resource b) 
     Calculates logical AND of a and b  
void gmp_clrbit(resource &a, int index) 
     Clears bit in a  
int gmp_cmp(resource a, resource b) 
     Compares two numbers  
resource gmp_com(resource a) 
     Calculates one's complement of a  
resource gmp_divexact(resource a, resource b) 
     Divide a by b using exact division algorithm  
resource gmp_div_q(resource a, resource b [, int round]) 
     Divide a by b, returns quotient only  
array gmp_div_qr(resource a, resource b [, int round]) 
     Divide a by b, returns quotient and reminder  
resource gmp_div_r(resource a, resource b [, int round]) 
     Divide a by b, returns reminder only  
resource gmp_fact(int a) 
     Calculates factorial function  
array gmp_gcdext(resource a, resource b) 
     Computes G, S, and T, such that AS + BT = G = `gcd' (A, B)  
resource gmp_gcd(resource a, resource b) 
     Computes greatest common denominator (gcd) of a and b  
int gmp_hamdist(resource a, resource b) 
     Calculates hamming distance between a and b  
resource gmp_init(mixed number) 
     Initializes GMP number  
int gmp_intval(resource gmpnumber) 
     Gets signed long value of GMP number  
resource gmp_invert(resource a, resource b) 
     Computes the inverse of a modulo b  
int gmp_jacobi(resource a, resource b) 
     Computes Jacobi symbol  
int gmp_legendre(resource a, resource b) 
     Computes Legendre symbol  
resource gmp_mod(resource a, resource b) 
     Computes a modulo b  
resource gmp_mul(resource a, resource b) 
     Multiply a and b  
resource gmp_neg(resource a) 
     Negates a number  
resource gmp_or(resource a, resource b) 
     Calculates logical OR of a and b  
bool gmp_perfect_square(resource a) 
     Checks if a is an exact square  
int gmp_popcount(resource a) 
     Calculates the population count of a  
resource gmp_powm(resource base, resource exp, resource mod) 
     Raise base to power exp and take result modulo mod  
resource gmp_pow(resource base, int exp) 
     Raise base to power exp  
int gmp_prob_prime(resource a[, int reps]) 
     Checks if a is "probably prime"  
resource gmp_random([int limiter]) 
     Gets random number  
int gmp_scan0(resource a, int start) 
     Finds first zero bit  
int gmp_scan1(resource a, int start) 
     Finds first non-zero bit  
void gmp_setbit(resource &a, int index[, bool set_clear]) 
     Sets or clear bit in a  
int gmp_sign(resource a) 
     Gets the sign of the number  
array gmp_sqrtrem(resource a) 
     Takes integer part of square root of a  
resource gmp_sqrt(resource a) 
     Takes integer part of square root of a  
string gmp_strval(resource gmpnumber [, int base]) 
     Gets string representation of GMP number   
resource gmp_sub(resource a, resource b) 
     Subtract b from a  
resource gmp_xor(resource a, resource b) 
     Calculates logical exclusive OR of a and b  
# php4/ext/hyperwave/hw.c
string hw_array2objrec(array objarr) 
     Returns object record of object array  
void hw_changeobject(int link, int objid, array attributes) 
     Changes attributes of an object (obsolete)  
array hw_children(int link, int objid) 
     Returns array of children object ids  
array hw_childrenobj(int link, int objid) 
     Returns array of children object records  
void hw_close(int link) 
     Close connection to Hyperwave server  
void hw_connection_info(int link) 
     Prints information about the connection to Hyperwave server  
int hw_connect(string host, int port [string username [, string password]]) 
     Connect to the Hyperwave server  
void hw_cp(int link, array objrec, int dest) 
     Copies object  
void hw_deleteobject(int link, int objid) 
     Deletes object  
int hw_docbyanchor(int link, int anchorid) 
     Returns objid of document belonging to anchorid  
array hw_docbyanchorobj(int link, int anchorid) 
     Returns object record of document belonging to anchorid  
string hw_documentattributes(hwdoc doc) 
     An alias for hw_document_attributes  
string hw_document_attributes(hwdoc doc) 
     Returns object record of document  
string hw_documentbodytag(hwdoc doc [, string prefix]) 
     An alias for hw_document_bodytag  
string hw_document_bodytag(hwdoc doc [, string prefix]) 
     Return bodytag prefixed by prefix  
string hw_document_content(hwdoc doc) 
     Returns content of document  
int hw_document_setcontent(hwdoc doc, string content) 
     Sets/replaces content of document  
int hw_documentsize(hwdoc doc) 
     An alias for hw_document_size  
int hw_document_size(hwdoc doc) 
     Returns size of document  
string hw_dummy(int link, int id, int msgid) 
     Hyperwave dummy function  
void hw_edittext(int link, hwdoc doc) 
     Modifies text document  
int hw_error(int link) 
     Returns last error number  
string hw_errormsg(int link) 
     Returns last error message  
void hw_free_document(hwdoc doc) 
     Frees memory of document  
array hw_getanchors(int link, int objid) 
     Return all anchors of object  
array hw_getanchorsobj(int link, int objid) 
     Return all object records of anchors of object  
string hw_getandlock(int link, int objid) 
     Returns object record and locks object  
hwdoc hw_getcgi(int link, int objid) 
     Returns the output of a CGI script  
array hw_getchildcoll(int link, int objid) 
     Returns array of child collection object ids  
array hw_getchildcollobj(int link, int objid) 
     Returns array of child collection object records  
array hw_getchilddoccoll(int link, int objid) 
     Returns all children ids which are documents  
array hw_getchilddoccollobj(int link, int objid) 
     Returns all children object records which are documents  
array hw_getobjectbyftquerycoll(int link, int collid, string query, int maxhits) 
     Search for fulltext query in collection and return maxhits objids  
array hw_getobjectbyftquerycollobj(int link, int collid, string query, int maxhits) 
     Search for fulltext query in collection and return maxhits object records  
array hw_getobjectbyftquery(int link, string query, int maxhits) 
     Search for query as fulltext and return maxhits objids  
array hw_getobjectbyftqueryobj(int link, string query, int maxhits) 
     Search for query as fulltext and return maxhits object records  
array hw_getobjectbyquerycoll(int link, int collid, string query, int maxhits) 
     Search for query in collection and return maxhits objids  
array hw_getobjectbyquerycollobj(int link, int collid, string query, int maxhits) 
     Search for query in collection and return maxhits object records  
array hw_getobjectbyquery(int link, string query, int maxhits) 
     Search for query and return maxhits objids  
array hw_getobjectbyqueryobj(int link, string query, int maxhits) 
     Search for query and return maxhits object records  
string hw_getobject(int link, int objid [, string query]) 
     Returns object record   
array hw_getparents(int link, int objid) 
     Returns array of parent object ids  
array hw_getparentsobj(int link, int objid) 
     Returns array of parent object records  
string hw_getrellink(int link, int rootid, int sourceid, int destid) 
     Get link from source to dest relative to rootid  
[array|int] hw_getremotechildren(int link, string objrec) 
     Returns the remote document or an array of object records  
int hw_getremote(int link, int objid) 
     Returns the content of a remote document  
int hw_getsrcbydestobj(int link, int destid) 
     Returns object id of source docuent by destination anchor  
hwdoc hw_gettext(int link, int objid [, int rootid]) 
     Returns text document. Links are relative to rootid if given  
string hw_getusername(int link) 
     Returns the current user name  
void hw_identify(int link, string username, string password) 
     Identifies at Hyperwave server  
array hw_incollections(int link, array objids, array collids, int para) 
     Returns object ids which are in collections  
void hw_info(int link) 
     Outputs info string  
void hw_inscoll(int link, int parentid, array objarr) 
     Inserts collection  
void hw_insdoc(int link, int parentid, string objrec [, string text]) 
     Inserts document  
string hw_insertanchors(int hwdoc, array anchorecs, array dest [, array urlprefixes]) 
     Inserts only anchors into text  
void hw_insertdocument(int link, int parentid, hwdoc doc)  
     Insert new document  
int hw_insertobject(int link, string objrec, string parms) 
     Inserts an object  
int hw_mapid(int link, int serverid, int destid) 
     Returns virtual object id of document on remote Hyperwave server  
void hw_modifyobject(int link, int objid, array remattributes, array addattributes [, int mode]) 
     Modifies attributes of an object  
void hw_mv(int link, array objrec, int from, int dest) 
     Moves object  
hwdoc hw_new_document_from_file(string objrec, string filename) 
     Create a new document from a file  
hwdoc hw_new_document(string objrec, string data, int size) 
     Create a new document  
array hw_objrec2array(string objrec, [array format]) 
     Returns object array of object record  
void hw_outputdocument(hwdoc doc) 
     An alias for hw_output_document  
void hw_output_document(hwdoc doc) 
     Prints document  
int hw_pconnect(string host, int port [, string username [, string password]]) 
     Connect to the Hyperwave server persistent  
hwdoc hw_pipecgi(int link, int objid) 
     Returns output of CGI script  
hwdoc hw_pipedocument(int link, int objid [, array urlprefixes]) 
     Returns document with links inserted. Optionally a array with five urlprefixes may be passed, which will be inserted for the different types of anchors. This should be a named array with the following keys: HW_DEFAULT_LINK, HW_IMAGE_LINK, HW_BACKGROUND_LINK, HW_INTAG_LINK, and HW_APPLET_LINK  
hwdoc hw_pipedocument(int link, int objid) 
     Returns document  
int hw_root(void) 
     Returns object id of root collection  
void hw_setlinkroot(int link, int rootid) 
     Set the id to which links are calculated  
string hw_stat(int link) 
     Returns status string  
void hw_unlock(int link, int objid) 
     Unlocks object  
array hw_who(int link) 
     Returns names and info of users loged in  
# php4/ext/icap/php_icap.c
int icap_close(int stream_id [, int options]) 
     Close an ICAP stream  
string icap_create_calendar(int stream_id, string calendar) 
     Create a new calendar 
string icap_delete_calendar(int stream_id, int uid) 
     Delete event 
string icap_delete_calendar(int stream_id, string calendar) 
     Delete calendar  
string icap_delete_event(int stream_id, int uid) 
     Delete event  
int icap_expunge(int stream_id) 
     Delete all messages marked for deletion  
int icap_fetch_event(int stream_id, int eventid [, int options]) 
     Fetch an event  
int icap_list_alarms(int stream_id, array date, array time) 
     List alarms for a given time  
array icap_list_events(int stream_id, int begindate [, int enddate]) 
     Returns list of UIDs for that day or range of days  
int icap_open(string calendar, string user, string password [, int options]) 
     Open an ICAP stream to a calendar  
string icap_rename_calendar(int stream_id, string src_calendar, string dest_calendar) 
     Rename a calendar 
int icap_reopen(int stream_id, string calendar [, int options]) 
     Reopen ICAP stream to new calendar  
string icap_snooze(int stream_id, int uid) 
     Snooze an alarm  
string icap_store_event(int stream_id, object event) 
     Store an event  
# php4/ext/iconv/iconv.c
array iconv_get_encoding([string type]) 
     Get internal encoding and output encoding for ob_iconv_handler()  
bool iconv_set_encoding(string type, string charset) 
     Sets internal encoding and output encoding for ob_iconv_handler()  
string iconv(string in_charset, string out_charset, string str) 
     Returns str converted to the out_charset character set  
string ob_iconv_handler(string contents) 
     Returns str in output buffer converted to the iconv.output_encoding character set  
# php4/ext/iisfunc/setup.c
int iis_AddServer(string Path, string Comment, string ServerIP, int ServerPort, string HostName, int ServerRights, int StartServer) 
     Creates a new virtual web server 
int iis_DirectorySecurity(int ServerInstance, string VirtualPath) 
     Gets Directory Security 
int iis_GetScriptMap(int ServerInstance, string VirtualPath) 
     Gets script mapping on a virtual directory for a specific extention 
int iis_GetServerByComment(string Comment) 
     Return the instance number associated with the Comment 
int iis_GetServerByPath(string Path) 
     Return the instance number associated with the Path 
int iis_GetServerRights(int ServerInstance, string VirtualPath) 
     Gets Directory Security 
int iis_GetServiceState(string ServiceId) 
     Returns teh state for the service defined by ServiceId 
int iis_RemoveServer(int ServerInstance) 
     Removes the virtual web server indicated by ServerInstance 
int iis_SetAppSetings(int ServerInstance, string VirtualPath, string Name) 
     Creates application scope for a virtual directory 
int iis_SetDirectorySecurity(int ServerInstance, string VirtualPath, int DirectoryFlags) 
     Sets Directory Security 
int iis_SetScriptMap(int ServerInstance, string VirtualPath, string EnginePath, int AllowScripting) 
     Sets script mapping on a virtual directory 
int iis_SetServerRights(int ServerInstance, string VirtualPath, int ServerFlags) 
     Sets server rights 
int iis_StartServer(int ServerInstance) 
     Starts the virtual web server 
int iis_StartService(string ServiceId) 
     Starts the service defined by ServiceId 
int iis_StopServer(int ServerInstance) 
     Stops the virtual web server 
int iis_StopService(string ServiceId) 
     Stops the service defined by ServiceId 
# php4/ext/imap/php_imap.c
string imap_8bit(string text) 
     Convert an 8-bit string to a quoted-printable string  
array imap_alerts(void) 
     Returns an array of all IMAP alerts that have been generated since the last page load or since the last imap_alerts() call, whichever came last. The alert stack is cleared after imap_alerts() is called.  
int imap_append(int stream_id, string folder, string message [, string flags]) 
     Append a new message to a specified mailbox  
string imap_base64(string text) 
     Decode BASE64 encoded text  
string imap_binary(string text) 
     Convert an 8bit string to a base64 string  
string imap_body(int stream_id, int msg_no [, int options]) 
     Read the message body  
object imap_bodystruct(int stream_id, int msg_no, int section) 
     Read the structure of a specified body section of a specific message  
object imap_check(int stream_id) 
     Get mailbox properties  
int imap_clearflag_full(int stream_id, string sequence, string flag [, int options]) 
     Clears flags on messages  
int imap_close(int stream_id [, int options]) 
     Close an IMAP stream  
int imap_createmailbox(int stream_id, string mailbox) 
     Create a new mailbox  
int imap_delete(int stream_id, int msg_no [, int flags]) 
     Mark a message for deletion  
int imap_deletemailbox(int stream_id, string mailbox) 
     Delete a mailbox  
array imap_errors(void) 
     Returns an array of all IMAP errors generated since the last  page load, or since the last imap_errors() call, whichever came last. The error stack is cleared after imap_errors() is called.  
int imap_expunge(int stream_id) 
     Permanently delete all messages marked for deletion  
string imap_fetchbody(int stream_id, int msg_no, int section [, int options]) 
     Get a specific body section  
string imap_fetchheader(int stream_id, int msg_no [, int options]) 
     Get the full unfiltered header for a message  
array imap_fetch_overview(int stream_id, int msg_no) 
     Read an overview of the information in the headers of the given message sequence  
object imap_fetchstructure(int stream_id, int msg_no [, int options]) 
     Read the full structure of a message  
string imap_fetchtext_full(int stream_id, int msg_no [, int options]) 
     Read the full text of a message  
array imap_getmailboxes(int stream_id, string ref, string pattern) 
     Reads the list of mailboxes and returns a full array of objects containing name, attributes, and delimiter  
array imap_get_quota(int stream_id, string qroot) 
  	Returns the quota set to the mailbox account qroot  
array imap_getsubscribed(int stream_id, string ref, string pattern) 
     Return a list of subscribed mailboxes, in the same format as imap_getmailboxes()  
object imap_headerinfo(int stream_id, int msg_no [, int from_length [, int subject_length [, string default_host]]]) 
     Read the headers of the message  
array imap_headers(int stream_id) 
     Returns headers for all messages in a mailbox  
string imap_last_error(void)  
     Returns the last error that was generated by an IMAP function. The error stack is NOT cleared after this call.  
array imap_list(int stream_id, string ref, string pattern) 
     Read the list of mailboxes  
array imap_lsub(int stream_id, string ref, string pattern) 
     Return a list of subscribed mailboxes  
object imap_mailboxmsginfo(int stream_id) 
     Returns info about the current mailbox  
string imap_mail_compose(array envelope, array body) 
     Create a MIME message based on given envelope and body sections  
int imap_mail_copy(int stream_id, int msg_no, string mailbox [, int options]) 
     Copy specified message to a mailbox  
int imap_mail_move(int stream_id, int msg_no, string mailbox [, int options]) 
     Move specified message to a mailbox  
int imap_mail(string to, string subject, string message [, string additional_headers [, string cc [, string bcc [, string rpath]]]]) 
     Send an email message  
array imap_mime_header_decode(string str) 
     Decode mime header element in accordance with RFC 2047 and return array of objects containing 'charset' encoding and decoded 'text'  
int imap_msgno(int stream_id, int unique_msg_id) 
     Get the sequence number associated with a UID  
int imap_num_msg(int stream_id) 
     Gives the number of messages in the current mailbox  
int imap_num_recent(int stream_id) 
     Gives the number of recent messages in current mailbox  
int imap_open(string mailbox, string user, string password [, int options]) 
     Open an IMAP stream to a mailbox  
int imap_ping(int stream_id) 
     Check if the IMAP stream is still active  
int imap_popen(string mailbox, string user, string password [, int options]) 
     Open a persistant IMAP stream to a mailbox  
string imap_qprint(string text) 
     Convert a quoted-printable string to an 8-bit string  
int imap_renamemailbox(int stream_id, string old_name, string new_name) 
     Rename a mailbox  
int imap_reopen(int stream_id, string mailbox [, int options]) 
     Reopen an IMAP stream to a new mailbox  
array imap_rfc822_parse_adrlist(string address_string, string default_host) 
     Parses an address string  
object imap_rfc822_parse_headers(string headers [, string default_host]) 
     Parse a set of mail headers contained in a string, and return an object similar to imap_headerinfo()  
string imap_rfc822_write_address(string mailbox, string host, string personal) 
     Returns a properly formatted email address given the mailbox, host, and personal info  
array imap_scan(int stream_id, string ref, string pattern, string content) 
     Read list of mailboxes containing a certain string  
array imap_search(int stream_id, string criteria [, long flags]) 
     Return a list of messages matching the given criteria  
int imap_setflag_full(int stream_id, string sequence, string flag [, int options]) 
     Sets flags on messages  
int imap_set_quota(int stream_id, string qroot, int mailbox_size) 
     Will set the quota for qroot mailbox  
array imap_sort(int stream_id, int criteria, int reverse [, int options [, string search_criteria]]) 
     Sort an array of message headers, optionally including only messages that meet specified criteria.  
object imap_status(int stream_id, string mailbox, int options) 
     Get status info from a mailbox  
int imap_subscribe(int stream_id, string mailbox) 
     Subscribe to a mailbox  
int imap_uid(int stream_id, int msg_no) 
     Get the unique message id associated with a standard sequential message number  
int imap_undelete(int stream_id, int msg_no) 
     Remove the delete flag from a message  
int imap_unsubscribe(int stream_id, string mailbox) 
     Unsubscribe from a mailbox  
string imap_utf7_decode(string buf) 
     Decode a modified UTF-7 string  
string imap_utf7_encode(string buf) 
     Encode a string in modified UTF-7  
string imap_utf8(string string) 
     Convert a string to UTF-8  
# php4/ext/informix/ifx.ec
int ifx_affected_rows(int resultid) 
     Returns the number of rows affected by query identified by resultid  
void ifx_blobinfile_mode(int mode) 
     Sets the default blob-mode for all select-queries   
void ifx_byteasvarchar(int mode) 
     Sets the default byte-mode for all select-queries   
int ifx_close(int connid) 
     Close informix connection  
int ifx_connect([string database [, string userid [, string password]]]) 
     Connects to database using userid/password, returns connection id  
int ifx_copy_blob(int bid) 
     Duplicates the given blob-object  
int ifx_create_blob(int type, int mode, string param) 
     Creates a blob-object  
int ifx_create_char(string param) 
     Creates a char-object  
int ifx_do(int resultid) 
     Executes a previously prepared query or opens a cursor for it  
string ifx_error([int connection_id]) 
     Returns the Informix error codes (SQLSTATE & SQLCODE)  
string ifx_errormsg([int errorcode]) 
     Returns the Informix errormessage associated with   
array ifx_fetch_row(int resultid [, mixed position]) 
     Fetches the next row or <position> row if using a scroll cursor  
array ifx_fieldproperties(int resultid) 
     Returns an associative for query <resultid> array with fieldnames as key  
array ifx_fieldtypes(int resultid) 
     Returns an associative array with fieldnames as key for query <resultid>  
int ifx_free_blob(int bid) 
     Deletes the blob-object  
int ifx_free_char(int bid) 
     Deletes the char-object  
int ifx_free_result(int resultid) 
     Releases resources for query associated with resultid  
string ifx_get_blob(int bid) 
     Returns the content of the blob-object  
string ifx_get_char(int bid) 
     Returns the content of the char-object  
int ifx_getsqlca(int resultid) 
     Returns the sqlerrd[] fields of the sqlca struct for query resultid  
int ifx_htmltbl_result(int resultid [, string htmltableoptions]) 
     Formats all rows of the resultid query into a html table  
void ifx_nullformat(int mode) 
     Sets the default return value of a NULL-value on a fetch-row   
int ifx_num_fields(int resultid) 
     Returns the number of columns in query resultid  
int ifx_num_rows(int resultid) 
     Returns the number of rows already fetched for query identified by resultid  
int ifx_pconnect([string database [, string userid [, string password]]]) 
     Connects to database using userid/password, returns connection id  
int ifx_prepare(string query, int connid [, int cursortype] [, array idarray]) 
     Prepare a query on a given connection  
int ifx_query(string query, int connid [, int cursortype] [, array idarray]) 
     Perform a query on a given connection  
void ifx_textasvarchar(int mode) 
     Sets the default text-mode for all select-queries  
int ifx_update_blob(int bid, string content) 
     Updates the content of the blob-object  
int ifx_update_char(int bid, string content) 
     Updates the content of the char-object  
int ifxus_close_slob(int bid) 
     Deletes the slob-object  
int ifxus_create_slob(int mode) 
     Creates a slob-object and opens it  
int ifxus_free_slob(int bid) 
     Deletes the slob-object  
int ifxus_open_slob(long bid, int mode) 
     Opens an slob-object  
int ifxus_read_slob(long bid, long nbytes) 
     Reads nbytes of the slob-object  
int ifxus_seek_slob(long bid, int mode, long offset) 
     Sets the current file or seek position of an open slob-object  
int ifxus_tell_slob(long bid) 
     Returns the current file or seek position of an open slob-object  
int ifxus_write_slob(long bid, string content) 
     Writes a string into the slob-object  
# php4/ext/ingres_ii/ii.c
bool ingres_autocommit([resource link]) 
     Switch autocommit on or off  
bool ingres_close([resource link]) 
     Close an Ingres II database connection  
bool ingres_commit([resource link]) 
     Commit a transaction  
resource ingres_connect([string database [, string username [, string password]]]) 
     Open a connection to an Ingres II database the syntax of database is [node_id::]dbname[/svr_class]  
array ingres_fetch_array([int result_type [, resource link]]) 
     Fetch a row of result into an array result_type can be II_NUM for enumerated array, II_ASSOC for associative array, or II_BOTH (default)  
array ingres_fetch_object([int result_type [, resource link]]) 
     Fetch a row of result into an object result_type can be II_NUM for enumerated object, II_ASSOC for associative object, or II_BOTH (default)  
array ingres_fetch_row([resource link]) 
     Fetch a row of result into an enumerated array  
string ingres_field_length(int index [, resource link]) 
     Return the length of a field in a query result index must be >0 and <= ingres_num_fields()  
string ingres_field_name(int index [, resource link]) 
     Return the name of a field in a query result index must be >0 and <= ingres_num_fields()  
string ingres_field_nullable(int index [, resource link]) 
     Return true if the field is nullable and false otherwise index must be >0 and <= ingres_num_fields()  
string ingres_field_precision(int index [, resource link]) 
     Return the precision of a field in a query result index must be >0 and <= ingres_num_fields()  
string ingres_field_scale(int index [, resource link]) 
     Return the scale of a field in a query result index must be >0 and <= ingres_num_fields()  
string ingres_field_type(int index [, resource link]) 
     Return the type of a field in a query result index must be >0 and <= ingres_num_fields()  
int ingres_num_fields([resource link]) 
     Return the number of fields returned by the last query  
int ingres_num_rows([resource link]) 
     Return the number of rows affected/returned by the last query  
resource ingres_pconnect([string database [, string username [, string password]]]) 
     Open a persistent connection to an Ingres II database the syntax of database is [node_id::]dbname[/svr_class]  
bool ingres_query(string query [, resource link]) 
     Send a SQL query to Ingres II  
bool ingres_rollback([resource link]) 
     Roll back a transaction  
# php4/ext/interbase/interbase.c
int ibase_blob_add(int blob_id, string data) 
     Add data into created blob  
int ibase_blob_cancel(int blob_id) 
     Cancel creating blob  
int ibase_blob_close(int blob_id) 
     Close blob  
int ibase_blob_create([int link_identifier]) 
     Create blob for adding data  
int ibase_blob_echo(string blob_id_str) 
     Output blob contents to browser  
string ibase_blob_get(int blob_id, int len) 
     Get len bytes data from open blob  
string ibase_blob_import([link_identifier,] int file_id) 
     Create blob, copy file in it, and close it  
object ibase_blob_info(string blob_id_str) 
     Return blob length and other useful info  
int ibase_blob_open(string blob_id) 
     Open blob for retriving data parts  
int ibase_close([int link_identifier]) 
     Close an InterBase connection  
int ibase_commit([int link_identifier,] int trans_number) 
     Commit transaction  
int ibase_connect(string database [, string username] [, string password] [, string charset] [, int buffers] [, int dialect] [, string role]) 
     Open a connection to an InterBase database  
string ibase_errmsg(void)  
     Return error message  
int ibase_execute(int query [, int bind_args [, int ...]]) 
     Execute a previously prepared query  
object ibase_fetch_object(int result [, int blob_flag]) 
     Fetch a object from the results of a query  
array ibase_fetch_row(int result [, int blob_flag]) 
     Fetch a row  from the results of a query  
array ibase_field_info(int result, int field_number) 
     Get information about a field  
int ibase_free_query(int query) 
     Free memory used by a query  
int ibase_free_result(int result) 
     Free the memory used by a result  
int ibase_num_fields(int result) 
     Get the number of fields in result  
int ibase_pconnect(string database [, string username] [, string password] [, string charset] [, int buffers] [, int dialect] [, string role]) 
     Open a persistent connection to an InterBase database  
int ibase_prepare([int link_identifier,] string query) 
     Prepare a query for later execution  
int ibase_query([int link_identifier,] string query [, int bind_args]) 
     Execute a query  
int ibase_rollback([int link_identifier,] int trans_number) 
     Roolback transaction  
int ibase_timefmt(string format) 
     Sets the format of timestamp, date and time columns returned from queries  
int ibase_trans([int trans_args [, int link_identifier]]) 
     Start transaction  
# php4/ext/ircg/ircg.c
string confirm_ircg_compiled(string arg) 
     Return a string to confirm that the module is compiled in  
# php4/ext/ldap/ldap.c
string ldap_8859_to_t61(string value) 
     Translate 8859 characters to t61 characters  
int ldap_add(int link, string dn, array entry) 
     Add entries to LDAP directory  
int ldap_bind(int link [, string dn, string password]) 
     Bind to LDAP directory  
int ldap_compare(int link, string dn, string attr, string value) 
     Determine if an entry has a specific value for one of its attributes  
int ldap_connect([string host [, int port]]) 
     Connect to an LDAP server  
int ldap_count_entries(int link, int result) 
     Count the number of entries in a search result  
int ldap_delete(int link, string dn) 
     Delete an entry from a directory  
string ldap_dn2ufn(string dn) 
     Convert DN to User Friendly Naming format  
string ldap_err2str(int errno) 
     Convert error number to error string  
int ldap_errno(int link) 
     Get the current ldap error number  
string ldap_error(int link) 
     Get the current ldap error string  
array ldap_explode_dn(string dn, int with_attrib) 
     Splits DN into its component parts  
string ldap_first_attribute(int link, int result, int ber) 
     Return first attribute  
int ldap_first_entry(int link, int result) 
     Return first result id  
int ldap_first_reference(int link, int result) 
     Return first reference  
int ldap_free_result(int result) 
     Free result memory  
array ldap_get_attributes(int link, int result) 
     Get attributes from a search result entry  
string ldap_get_dn(int link, int result) 
     Get the DN of a result entry  
array ldap_get_entries(int link, int result) 
     Get all result entries  
boolean ldap_get_option(int link, int option, mixed retval) 
     Get the current value of various session-wide parameters  
array ldap_get_values(int link, int result, string attribute) 
     Get all values from a result entry  
array ldap_get_values_len(int link, int result, string attribute) 
     Get all values with lengths from a result entry  
int ldap_list(int link, string base_dn, string filter [, array attrs [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]]) 
     Single-level search  
int ldap_mod_add(int link, string dn, array entry) 
     Add attribute values to current  
int ldap_mod_del(int link, string dn, array entry) 
     Delete attribute values  
int ldap_modify(int link, string dn, array entry) 
     Modify an LDAP entry  
int ldap_mod_replace(int link, string dn, array entry) 
     Replace attribute values with new ones  
string ldap_next_attribute(int link, int result, int ber) 
     Get the next attribute in result  
int ldap_next_entry(int link, int entry) 
     Get next result entry  
int ldap_next_reference(int link, int entry) 
     Get next reference  
boolean ldap_parse_reference(int link, int entry, array referrals) 
     Extract information from reference entry  
boolean ldap_parse_result(int link, int result, int errcode, string matcheddn, string errmsg, array referrals) 
     Extract information from result  
int ldap_read(int link, string base_dn, string filter [, array attrs [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]]) 
     Read an entry  
boolean ldap_rename(int link, string dn, string newrdn, string newparent, boolean deleteoldrdn); 
     Modify the name of an entry  
int ldap_search(int link, string base_dn, string filter [, array attrs [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]]) 
     Search LDAP tree under base_dn  
boolean ldap_set_option(int link, int option, mixed newval) 
     Set the value of various session-wide parameters  
string ldap_t61_to_8859(string value) 
     Translate t61 characters to 8859 characters  
int ldap_unbind(int link) 
     Unbind from LDAP directory  
# php4/ext/mcal/php_mcal.c
string mcal_append_event(int stream_id) 
     Append a new event to the calendar stream  
int mcal_close(int stream_id [, int options]) 
     Close an MCAL stream  
string mcal_create_calendar(int stream_id, string calendar) 
     Create a new calendar  
int mcal_date_compare(int ayear, int amonth, int aday, int byear, int bmonth, int bday) 
     Returns <0, 0, >0 if a<b, a==b, a>b respectively  
bool mcal_date_valid(int year, int month, int day) 
     Returns true if the date is a valid date  
int mcal_day_of_week(int year, int month, int day) 
     Returns the day of the week of the given date  
int mcal_day_of_year(int year, int month, int day) 
     Returns the day of the year of the given date  
int mcal_days_in_month(int month, bool leap_year) 
     Returns the number of days in the given month, needs to know if the year is a leap year or not  
string mcal_delete_calendar(int stream_id, string calendar) 
     Delete calendar  
string mcal_delete_event(int stream_id, int event_id) 
     Delete an event  
string mcal_event_add_attribute(int stream_id, string attribute, string value) 
     Add an attribute and value to an event  
int mcal_event_init(int stream_id) 
     Initialize a streams global event  
int mcal_event_set_alarm(int stream_id, int alarm) 
     Add an alarm to the streams global event  
string mcal_event_set_category(int stream_id, string category) 
     Attach a category to an event  
int mcal_event_set_class(int stream_id, int class) 
     Add an class to the streams global event  
string mcal_event_set_description(int stream_id, string description) 
     Attach a description to an event  
string mcal_event_set_end(int stream_id, int year,int month, int day [[[, int hour], int min], int sec]) 
     Attach an end datetime to an event  
string mcal_event_set_recur_daily(int stream_id, int year, int month, int day, int interval) 
     Create a daily recurrence  
string mcal_event_set_recur_monthly_mday(int stream_id, int year, int month, int day, int interval) 
     Create a monthly by day recurrence  
string mcal_event_set_recur_monthly_wday(int stream_id, int year, int month, int day, int interval) 
     Create a monthly by week recurrence  
string mcal_event_set_recur_none(int stream_id) 
     Create a daily recurrence  
string mcal_event_set_recur_weekly(int stream_id, int year, int month, int day, int interval, int weekdays) 
     Create a weekly recurrence  
string mcal_event_set_recur_yearly(int stream_id, int year, int month, int day, int interval) 
     Create a yearly recurrence  
string mcal_event_set_start(int stream_id, int year,int month, int day [[[, int hour], int min], int sec]) 
     Attach a start datetime to an event  
string mcal_event_set_title(int stream_id, string title) 
     Attach a title to an event  
int mcal_expunge(int stream_id) 
     Delete all events marked for deletion  
object mcal_fetch_current_stream_event(int stream_id) 
     Fetch the current event stored in the stream's event structure  
int mcal_fetch_event(int stream_id, int eventid [, int options]) 
     Fetch an event  
bool mcal_is_leap_year(int year) 
     Returns true if year is a leap year, false if not  
bool mcal_list_alarms(int stream_id, int year, int month, int day, int hour, int min, int sec) 
     List alarms for a given time  
array mcal_list_events(int stream_id, object begindate [, object enddate]) 
     Returns list of UIDs for that day or range of days  
object mcal_next_recurrence(int stream_id, int weekstart, array next) 
     Returns an object filled with the next date the event occurs, on or after the supplied date.  Returns empty date field if event does not occur or something is invalid.  
int mcal_open(string calendar, string user, string password [, int options]) 
     Open an MCAL stream to a calendar  
string mcal_popen(string calendar, string user, string password [, int options]) 
     Open a persistent MCAL stream to a calendar  
string mcal_rename_calendar(int stream_id, string src_calendar, string dest_calendar) 
     Rename a calendar  
int mcal_reopen(int stream_id, string calendar [, int options]) 
     Reopen MCAL stream to a new calendar  
string mcal_snooze(int stream_id, int uid) 
     Snooze an alarm  
string mcal_store_event(int stream_id) 
     Store changes to an event  
bool mcal_time_valid(int hour, int min, int sec) 
     Returns true if the time is a valid time  
int mcal_week_of_year(int day, int month, int year) 
     Returns the week number of the given date  
# php4/ext/mcrypt/mcrypt.c
string mcrypt_cbc(int cipher, string key, string data, int mode, string iv) 
     CBC crypt/decrypt data using key key with cipher cipher starting with iv  
string mcrypt_cbc(int cipher, string key, string data, int mode [, string iv]) 
     CBC crypt/decrypt data using key key with cipher cipher using optional iv  
string mcrypt_cfb(int cipher, string key, string data, int mode, string iv) 
     CFB crypt/decrypt data using key key with cipher cipher starting with iv  
string mcrypt_cfb(int cipher, string key, string data, int mode, string iv) 
     CFB crypt/decrypt data using key key with cipher cipher starting with iv  
string mcrypt_create_iv(int size, int source) 
     Create an initializing vector (IV)  
string mcrypt_decrypt(string cipher, string key, string data, string mode, string iv) 
     OFB crypt/decrypt data using key key with cipher cipher starting with iv  
string mcrypt_ecb(int cipher, string key, string data, int mode) 
     ECB crypt/decrypt data using key key with cipher cipher  
string mcrypt_ecb(int cipher, string key, string data, int mode, string iv) 
     ECB crypt/decrypt data using key key with cipher cipher starting with iv  
string mcrypt_enc_get_algorithms_name(resource td) 
     Returns the name of the algorithm specified by the descriptor td  
int mcrypt_enc_get_block_size(resource td) 
     Returns the block size of the cipher specified by the descriptor td  
int mcrypt_enc_get_iv_size(resource td) 
     Returns the size of the IV in bytes of the algorithm specified by the descriptor td  
int mcrypt_enc_get_key_size(resource td) 
     Returns the maximum supported key size in bytes of the algorithm specified by the descriptor td  
string mcrypt_enc_get_modes_name(resource td) 
     Returns the name of the mode specified by the descriptor td  
int mcrypt_enc_get_supported_key_sizes(resource td) 
     This function decrypts the crypttext  
bool mcrypt_enc_is_block_algorithm_mode(resource td) 
     Returns TRUE if the mode is for use with block algorithms  
bool mcrypt_enc_is_block_algorithm(resource td) 
     Returns TRUE if the alrogithm is a block algorithms  
bool mcrypt_enc_is_block_mode(resource td) 
     Returns TRUE if the mode outputs blocks  
string mcrypt_encrypt(string cipher, string key, string data, string mode, string iv) 
     OFB crypt/decrypt data using key key with cipher cipher starting with iv  
int mcrypt_enc_self_test(resource td) 
     This function runs the self test on the algorithm specified by the descriptor td  
bool mcrypt_generic_end(resource td) 
     This function terminates encrypt specified by the descriptor td  
int mcrypt_generic_init(resource td, string key, string iv) 
     This function initializes all buffers for the specific module  
string mcrypt_generic(resource td, string data) 
     This function encrypts the plaintext  
int mcrypt_get_block_size(int cipher) 
     Get the block size of cipher  
int mcrypt_get_block_size(string cipher, string module) 
     Get the key size of cipher  
string mcrypt_get_cipher_name(int cipher) 
     Get the name of cipher  
string mcrypt_get_cipher_name(string cipher) 
     Get the key size of cipher  
int mcrypt_get_iv_size(string cipher, string module) 
     Get the IV size of cipher (Usually the same as the blocksize)  
int mcrypt_get_key_size(int cipher) 
     Get the key size of cipher  
int mcrypt_get_key_size(string cipher, string module) 
     Get the key size of cipher  
array mcrypt_list_algorithms([string lib_dir]) 
     List all algorithms in "module_dir"  
array mcrypt_list_modes([string lib_dir]) 
     List all modes "module_dir"  
int mcrypt_module_get_algo_block_size(string algorithm [, string lib_dir]) 
     Returns the block size of the algorithm  
int mcrypt_module_get_algo_key_size(string algorithm [, string lib_dir]) 
     Returns the maximum supported key size of the algorithm  
int mcrypt_module_get_supported_key_sizes(string algorithm [, string lib_dir]) 
     This function decrypts the crypttext  
bool mcrypt_module_is_block_algorithm_mode(string mode [, string lib_dir]) 
     Returns TRUE if the mode is for use with block algorithms  
bool mcrypt_module_is_block_algorithm(string algorithm [, string lib_dir]) 
     Returns TRUE if the algorithm is a block algorithm  
bool mcrypt_module_is_block_mode(string mode [, string lib_dir]) 
     Returns TRUE if the mode outputs blocks of bytes  
resource mcrypt_module_open(string cipher, string cipher_directory, string mode, string mode_directory) 
     Opens the module of the algorithm and the mode to be used  
bool mcrypt_module_self_test(string algorithm [, string lib_dir]) 
     Does a self test of the module "module"  
string mcrypt_ofb(int cipher, string key, string data, int mode, string iv) 
     OFB crypt/decrypt data using key key with cipher cipher starting with iv  
string mcrypt_ofb(int cipher, string key, string data, int mode, string iv) 
     OFB crypt/decrypt data using key key with cipher cipher starting with iv  
string mdecrypt_generic(resource td, string data) 
     This function decrypts the plaintext  
# php4/ext/mhash/mhash.c
int mhash_count(void) 
     Gets the number of available hashes  
int mhash_get_block_size(int hash) 
     Gets the block size of hash  
string mhash_get_hash_name(int hash) 
     Gets the name of hash  
string mhash(int hash, string data [, string key]) 
     Hash data with hash  
string mhash_keygen_s2k(int hash, string input_password, string salt, int bytes) 
     Generates a key using hash functions  
# php4/ext/ming/ming.c
PHP_MINFO_FUNCTION(ming) 
   
PHP_MINIT_FUNCTION(ming) 
   
object swfaction_init(string) 
     returns a new SWFAction object, compiling the given script  
void swfbitmap_getHeight() 
     Returns the height of this bitmap  
void swfbitmap_getWidth() 
     Returns the width of this bitmap  
class swfbitmap_init(file, [maskfile]) 
     Returns a new SWFBitmap object from jpg (with optional mask) or dbl file  
void swfbutton_addAction(SWFAction action, int flags) 
     sets the action to perform when conditions described in flags is met  
void swfbutton_addShape(SWFCharacter character, int flags) 
     sets the character to display for the condition described in flags  
object swfbutton_init(void) 
     returns a new SWFButton object  
int SWFBUTTON_KEYPRESS(char) 
     returns the action flag for keyPress(char)  
void swfbutton_setAction(SWFAction) 
     sets the action to perform when button is pressed  
void swfbutton_setDown(SWFCharacter) 
     sets the character for this button's down state  
void swfbutton_setHit(SWFCharacter) 
     sets the character for this button's hit test state  
void swfbutton_setOver(SWFCharacter) 
     sets the character for this button's over state  
void swfbutton_setUp(SWFCharacter) 
     sets the character for this button's up state  
void swfdisplayitem_addColor(int r, int g, int b [, int a]) 
     Sets the add color part of this SWFDisplayItem's CXform to (r,g,b,[a]).     a defaults to 0  
void swfdisplayitem_move(int dx, int dy) 
     Displaces this SWFDisplayItem by (dx,dy) in movie coordinates.  
void swfdisplayitem_moveTo(int x, int y) 
     Moves this SWFDisplayItem to movie coordinates (x,y)  
void swfdisplayitem_multColor(float r, float g, float b, [float a]) 
     Sets the multiply color part of this SWFDisplayItem's CXform to (r,g,b,[a]).     a defaults to 1.0  
void swfdisplayitem_rotate(float degrees) 
     Rotates this SWFDisplayItem the given (clockwise) degrees from its current     orientation  
void swfdisplayitem_rotateTo(float degrees) 
     Rotates this SWFDisplayItem the given (clockwise) degrees from its original     orientation  
void swfdisplayitem_scale(float xScale, float yScale) 
     Multiplies this SWFDisplayItem's current x scale by xScale,     its y scale by yScale  
void swfdisplayitem_scaleTo(float xScale, [float yScale]) 
     Scales this SWFDisplayItem by xScale in the x direction, yScale in the y,     or both to xScale if only one arg.  
void swfdisplayitem_setDepth(int depth) 
     Sets this SWFDisplayItem's z-depth to depth.  Items with higher depth     values are drawn on top of those with lower values  
void swfdisplayitem_setMatrix(float a, float b, float c, float d, float x, float y) 
     Sets the item's transform matrix  
void swfdisplayitem_setName(string name) 
     Sets this SWFDisplayItem's name to name.  
void swfdisplayitem_setRatio(float ratio) 
     Sets this SWFDisplayItem's ratio to ratio.  Obviously only does anything     if displayitem was created from an SWFMorph  
void swfdisplayitem_skewX(float xSkew) 
     Adds xSkew to this SWFDisplayItem's x skew value  
void swfdisplayitem_skewXTo(float xSkew) 
     Sets this SWFDisplayItem's x skew value to xSkew  
void swfdisplayitem_skewY(float ySkew) 
     Adds ySkew to this SWFDisplayItem's y skew value  
void swfdisplayitem_skewYTo(float ySkew) 
     Sets this SWFDisplayItem's y skew value to ySkew  
class swffill_init(void) 
     Returns a new SWFFill object  
void swffill_moveTo(int x, int y) 
     Moves this SWFFill to shape coordinates (x,y)  
void swffill_rotateTo(float degrees) 
     Rotates this SWFFill the given (clockwise) degrees from its original     orientation  
void swffill_scaleTo(float xScale, [float yScale]) 
     Scales this SWFFill by xScale in the x direction, yScale in the y,     or both to xScale if only one arg.  
void swffill_skewXTo(float xSkew) 
     Sets this SWFFill's x skew value to xSkew  
void swffill_skewYTo(float ySkew) 
     Sets this SWFFill's y skew value to ySkew  
int swffont_getAscent() 
     returns the ascent of the font, or 0 if not available  
int swffont_getDescent() 
     returns the descent of the font, or 0 if not available  
int swffont_getLeading() 
     returns the leading of the font, or 0 if not available  
int swffont_getWidth(string) 
     calculates the width of the given string in this font at full height  
class swffont_init(string filename) 
     Returns a new SWFFont object from given file  
void swfgradient_addEntry(float ratio, byte r, byte g, byte b [, byte a] 
     add given entry to the gradient  
class swfgradient_init(void) 
     Returns a new SWFGradient object  
SWFShape swfmorph_getShape1() 
     return's this SWFMorph's start shape  
SWFShape swfmorph_getShape2() 
     return's this SWFMorph's start shape  
object swfmorph_init() 
     returns a new SWFMorph object  
int swfshape_addfill(fill, flags) 
     Returns a fill object, for use with swfshape_setleftfill and     swfshape_setrightfill  
void swfshape_drawarc(int r, float startAngle, float endAngle) 
     Draws an arc of radius r centered at the current location, from angle     startAngle to angle endAngle measured counterclockwise from 12 o'clock  
void swfshape_drawcircle(int r) 
     Draws a circle of radius r centered at the current location,     in a counter-clockwise fashion  
void swfshape_drawcubic(double bx, double by, double cx, double cy, double dx, double dy) 
     Draws a cubic bezier curve using the current position and the three given     points as control points  
void swfshape_drawcubic(double bx, double by, double cx, double cy, double dx, double dy) 
     Draws a cubic bezier curve using the current position and the three given     points as control points  
void swfshape_drawcurve(double adx, double ady, double bdx, double bdy [, double cdx, double cdy]) 
     Draws a curve from the current pen position (x,y) to the point (x+bdx,y+bdy)     in the current line style, using point (x+adx,y+ady) as a control point     Or draws a cubic bezier to point (x+cdx,x+cdy) with control points     (x+adx,y+ady) and (x+bdx,y+bdy)   
void swfshape_drawcurveto(double ax, double ay, double bx, double by [, double dx, double dy]) 
     Draws a curve from the current pen position (x,y) to the point (bx,by)     in the current line style, using point (ax,ay) as a control point.     Or draws a cubic bezier to point (dx,dy) with control points (ax,ay) and (bx,by)   
void swfshape_drawglyph(SWFFont font, string character) 
     Draws the first character in the given string into the shape using the     glyph definition from the given font  
void swfshape_drawline(double dx, double dy) 
     Draws a line from the current pen position (x,y) to the point (x+dx,y+dy)     in the current line style  
void swfshape_drawlineto(double x, double y) 
     Draws a line from the current pen position to shape coordinates (x,y)     in the current line style  
class swfshape_init(void) 
     Returns a new SWFShape object  
void swfshape_movepen(double x, double y) 
     Moves the pen from its current location by vector (x,y)  
void swfshape_movepento(double x, double y) 
     Moves the pen to shape coordinates (x,y)  
void swfshape_setleftfill(SWFFill fill) 
     Sets the left side fill style to fill  
void swfshape_setline(int width, int r, int g, int b [, int a]) 
     Sets the current line style for this SWFShape  
void swfshape_setrightfill(SWFFill fill) 
     Sets the right side fill style to fill  
SWFDisplayItem swfsprite_add(SWFCharacter) 
     Adds the character to the sprite, returns a displayitem  
class swfsprite_init() 
     Returns a new SWFSprite object  
void swfsprite_nextFrame() 
     moves the sprite to the next frame  
void swfsprite_remove(SWFDisplayItem) 
     Remove the named character from the sprite's display list  
void swfsprite_setFrames(int) 
     sets the number of frames in this SWFSprite  
void swftext_addString(string text) 
     Writes the given text into this SWFText object at the current pen position,     using the current font, height, spacing, and color  
void swftextfield_addString(string) 
     adds the given string to this textfield  
void swftextfield_align(alignment) 
     sets the alignment of this textfield  
object swftextfield_init(void) 
     returns a new SWFTextField object  
void swftextfield_setBounds(double width, double height) 
     sets the width and height of this textfield  
void swftextfield_setColor(int r, int g, int b [, int a]) 
     sets the color of this textfield  
void swftextfield_setFont 
     set the font for this textfield  
void swftextfield_setHeight(double height) 
     sets the font height of this textfield  
void swftextfield_setIndentation(double) 
     sets the indentation of the first line of this textfield  
void swftextfield_setLeftMargin(double) 
     sets the left margin of this textfield  
void swftextfield_setLineSpacing(double) 
     sets the line spacing of this textfield  
void swftextfield_setMargins(double left, double right) 
     sets both margins of this textfield  
void swftextfield_setName(string) 
     sets the variable name of this textfield  
void swftextfield_setRightMargin(double) 
     sets the right margin of this textfield  
double swftext_getAscent() 
     returns the ascent of the current font at its current size, or 0 if not available  
double swftext_getDescent() 
     returns the descent of the current font at its current size, or 0 if not available  
double swftext_getLeading() 
     returns the leading of the current font at its current size, or 0 if not available  
double swftext_getWidth(string) 
     calculates the width of the given string in this text objects current font and size  
class swftext_init(void) 
     Returns new SWFText object  
void swftext_moveTo(double x, double y) 
     Moves this SWFText object's current pen position to (x,y) in text     coordinates  
void swftext_setColor(int r, int g, int b, [int a]) 
     Sets this SWFText object's current color to the given color  
void swftext_setFont(class font) 
     Sets this SWFText object's current font to given font  
void swftext_setHeight(double height) 
     Sets this SWFText object's current height to given height  
void swftext_setSpacing(float spacing) 
     Sets this SWFText object's current letterspacing to given spacing  
# php4/ext/mnogosearch/php_mnogo.c
int udm_add_search_limit(int agent, int var, string val) 
     Add mnoGoSearch search restrictions  
int udm_alloc_agent(string dbaddr [, string dbmode]) 
     Allocate mnoGoSearch session  
int udm_api_version() 
     Get mnoGoSearch API version  
int udm_clear_search_limits(int agent) 
     Clear all mnoGoSearch search restrictions  
int udm_errno(int agent) 
     Get mnoGoSearch error number  
string udm_error(int agent) 
     Get mnoGoSearch error message  
int udm_find(int agent, string query) 
     Perform search  
int udm_free_agent(int agent) 
     Free mnoGoSearch session  
int udm_free_ispell_data(int agent) 
     Free memory allocated for ispell data  
int udm_free_res(int res) 
     mnoGoSearch free result  
int udm_get_doc_count(int agent) 
     Get total number of documents in database  
string udm_get_res_field(int res, int row, int field) 
     Fetch mnoGoSearch result field  
string udm_get_res_param(int res, int param) 
     Get mnoGoSearch result parameters  
int udm_load_ispell_data(int agent, int var, string val1, string val2, int flag) 
     Load ispell data  
int udm_set_agent_param(int agent, int var, string val) 
     Set mnoGoSearch agent session parameters  
# php4/ext/msql/php_msql.c
int msql_affected_rows(int query) 
     Return number of affected rows  
int msql_close([int link_identifier]) 
     Close an mSQL connection  
int msql_connect([string hostname[:port]] [, string username] [, string password]) 
     Open a connection to an mSQL Server  
int msql_create_db(string database_name [, int link_identifier]) 
     Create an mSQL database  
int msql_data_seek(int query, int row_number) 
     Move internal result pointer  
int msql_db_query(string database_name, string query [, int link_identifier]) 
     Send an SQL query to mSQL  
int msql_drop_db(string database_name [, int link_identifier]) 
     Drop (delete) an mSQL database  
string msql_error([int link_identifier]) 
     Returns the text of the error message from previous mSQL operation  
array msql_fetch_array(int query [, int result_type]) 
     Fetch a result row as an associative array  
object msql_fetch_field(int query [, int field_offset]) 
     Get column information from a result and return as an object  
object msql_fetch_object(int query [, int result_type]) 
     Fetch a result row as an object  
array msql_fetch_row(int query) 
     Get a result row as an enumerated array  
string msql_field_flags(int query, int field_offset) 
     Get the flags associated with the specified field in a result  
int msql_field_len(int query, int field_offet) 
     Returns the length of the specified field  
string msql_field_name(int query, int field_index) 
     Get the name of the specified field in a result  
int msql_field_seek(int query, int field_offset) 
     Set result pointer to a specific field offset  
string msql_field_table(int query, int field_offset) 
     Get name of the table the specified field is in  
string msql_field_type(int query, int field_offset) 
     Get the type of the specified field in a result  
int msql_free_result(int query) 
     Free result memory  
int msql_list_dbs([int link_identifier]) 
     List databases available on an mSQL server  
int msql_list_fields(string database_name, string table_name [, int link_identifier]) 
     List mSQL result fields  
int msql_list_tables(string database_name [, int link_identifier]) 
     List tables in an mSQL database  
int msql_num_fields(int query) 
     Get number of fields in a result  
int msql_num_rows(int query) 
     Get number of rows in a result  
int msql_pconnect([string hostname[:port]] [, string username] [, string password]) 
     Open a persistent connection to an mSQL Server  
int msql_query(string query [, int link_identifier]) 
     Send an SQL query to mSQL  
int msql_result(int query, int row [, mixed field]) 
     Get result data  
int msql_select_db(string database_name [, int link_identifier]) 
     Select an mSQL database  
# php4/ext/mssql/php_mssql.c
int mssql_close([int connectionid]) 
     Closes a connection to a MS-SQL server  
int mssql_connect([string servername [, string username [, string password]]]) 
     Establishes a connection to a MS-SQL server  
int mssql_data_seek(int result_id, int offset) 
     Moves the internal row pointer of the MS-SQL result associated with the specified result identifier to pointer to the specified row number  
array mssql_fetch_array(int result_id) 
     Returns an associative array of the current row in the result set specified by result_id  
int mssql_fetch_batch(string result_index) 
     Returns the next batch of records  
object mssql_fetch_field(int result_id [, int offset]) 
     Gets information about certain fields in a query result  
object mssql_fetch_object(int result_id) 
     Returns a psuedo-object of the current row in the result set specified by result_id  
array mssql_fetch_row(int result_id) 
     Returns an array of the current row in the result set specified by result_id  
int mssql_field_length(int result_id [, int offset]) 
     Get the length of a MS-SQL field  
string mssql_field_name(int result_id [, int offset]) 
     Returns the name of the field given by offset in the result set given by result_id  
bool mssql_field_seek(int result_id, int offset) 
     Seeks to the specified field offset  
string mssql_field_type(int result_id [, int offset]) 
     Returns the type of a field  
int mssql_free_result(string result_index) 
     Free a MS-SQL result index  
string mssql_get_last_message(void) 
     Gets the last message from the MS-SQL server  
void mssql_min_error_severity(int severity) 
     Sets the lower error severity  
void mssql_min_message_severity(int severity) 
     Sets the lower message severity  
string mssql_next_result(int result_id) 
     Move the internal result pointer to the next result  
int mssql_num_fields(int mssql_result_index) 
     Returns the number of fields fetched in from the result id specified  
int mssql_num_rows(int mssql_result_index) 
     Returns the number of rows fetched in from the result id specified  
int mssql_pconnect([string servername [, string username [, string password]]]) 
     Establishes a persistent connection to a MS-SQL server  
int mssql_query(string query [, int conn_id [, int batch_size]]) 
     Perform an SQL query on a MS-SQL server database  
string mssql_result(int result_id, int row, mixed field) 
     Returns the contents of one cell from a MS-SQL result set  
int mssql_rows_affected(int conn_id) 
     Returns the number of records affected by the query  
bool mssql_select_db(string database_name [, int conn_id]) 
     Select a MS-SQL database  
# php4/ext/muscat/muscat.c
int muscat_close(resource muscat_handle) 
     Shuts down the muscat session and releases any memory back to php. [Not back to the system, note!]  
string muscat_get(resource muscat_handle) 
     Gets a line back from the core muscat api.  Returns a literal FALSE when there is no more to get (as opposed to ""). Use === FALSE or !== FALSE to check for this  
int muscat_give(resource muscat_handle, string string) 
     Sends string to the core muscat api  
resource setup_muscat(int size [, string muscat_dir]) 
     Creates a new muscat session and returns the handle. Size is the ammount of memory in bytes to allocate for muscat muscat_dir is the muscat installation dir e.g. "/usr/local/empower", it defaults to the compile time muscat directory  
resource setup_muscat_net(string muscat_host, int port) 
     Creates a new muscat session and returns the handle. muscat_host is the hostname to connect to port is the port number to connect to - actually takes exactly the same args as fsockopen  
# php4/ext/mysql/php_mysql.c
int mysql_affected_rows([int link_identifier]) 
     Get number of affected rows in previous MySQL operation  
int mysql_close([int link_identifier]) 
     Close a MySQL connection  
int mysql_connect([string hostname[:port][:/path/to/socket]] [, string username] [, string password]) 
     Open a connection to a MySQL Server  
int mysql_create_db(string database_name [, int link_identifier]) 
     Create a MySQL database  
int mysql_data_seek(int result, int row_number) 
     Move internal result pointer  
int mysql_db_query(string database_name, string query [, int link_identifier] [, int result_mode]) 
     Send an SQL query to MySQL  
int mysql_drop_db(string database_name [, int link_identifier]) 
     Drop (delete) a MySQL database  
int mysql_errno([int link_identifier]) 
     Returns the number of the error message from previous MySQL operation  
string mysql_error([int link_identifier]) 
     Returns the text of the error message from previous MySQL operation  
char mysql_escape_string([char string]) 
     Escape string for mysql query  
array mysql_fetch_array(int result [, int result_type]) 
     Fetch a result row as an array (associative, numeric or both) 
array mysql_fetch_assoc(int result) 
     Fetch a result row as an associative array  
object mysql_fetch_field(int result [, int field_offset]) 
     Get column information from a result and return as an object  
array mysql_fetch_lengths(int result) 
     Get max data size of each column in a result  
object mysql_fetch_object(int result [, int result_type]) 
     Fetch a result row as an object  
array mysql_fetch_row(int result) 
     Get a result row as an enumerated array  
string mysql_field_flags(int result, int field_offset) 
     Get the flags associated with the specified field in a result  
int mysql_field_len(int result, int field_offset) 
     Returns the length of the specified field  
string mysql_field_name(int result, int field_index) 
     Get the name of the specified field in a result  
int mysql_field_seek(int result, int field_offset) 
     Set result pointer to a specific field offset  
string mysql_field_table(int result, int field_offset) 
     Get name of the table the specified field is in  
string mysql_field_type(int result, int field_offset) 
     Get the type of the specified field in a result  
int mysql_free_result(int result) 
     Free result memory  
string mysql_get_client_info(void) 
     Returns a string that represents the client library version  
string mysql_get_host_info([int link_identifier]) 
     Returns a string describing the type of connection in use, including the server host name  
int mysql_get_proto_info([int link_identifier]) 
     Returns the protocol version used by current connection  
string mysql_get_server_info([int link_identifier]) 
     Returns a string that represents the server version number  
int mysql_insert_id([int link_identifier]) 
     Get the id generated from the previous INSERT operation  
int mysql_list_dbs([int link_identifier]) 
     List databases available on a MySQL server  
int mysql_list_fields(string database_name, string table_name [, int link_identifier]) 
     List MySQL result fields  
int mysql_list_tables(string database_name [, int link_identifier]) 
     List tables in a MySQL database  
int mysql_num_fields(int result) 
     Get number of fields in a result  
int mysql_num_rows(int result) 
     Get number of rows in a result  
int mysql_pconnect([string hostname[:port][:/path/to/socket]] [, string username] [, string password]) 
     Open a persistent connection to a MySQL Server  
int mysql_query(string query [, int link_identifier] [, int result_mode]) 
     Send an SQL query to MySQL  
int mysql_result(int result, int row [, mixed field]) 
     Get result data  
int mysql_select_db(string database_name [, int link_identifier]) 
     Select a MySQL database  
int mysql_unbuffered_query(string query [, int link_identifier] [, int result_mode]) 
     Send an SQL query to MySQL, without fetching and buffering the result rows  
# php4/ext/oci8/oci8.c
int ocibindbyname(int stmt, string name, mixed &var, int maxlength [, int type]) 
     Bind a PHP variable to an Oracle placeholder by name  
int ocicancel(int stmt) 
     Prepare a new row of data for reading  
string ocicloselob(object lob) 
     Closes lob descriptor  
string ocicollappend(object collection,value) 
     Append an object to the collection  
string ocicollassignelem(object collection,ndx,val) 
     Assign element val to collection at index ndx  
string ocicollassign(object collection,object) 
     Assign a collection from another existing collection  
string ocicolldateappendelem(object collection,val,[format],[lang]) 
     assign value at collection index ndx  
string ocicolldateassignelem(object collection,ndx,val,[format],[lang]) 
     assign value at collection index ndx  
string ocicolldategetelem(object collection,ndx,[format],[lang]) 
     Retrieve the value at collection index ndx  
string ocicollgetelem(object collection,ndx,[format],[lang]) 
     Retrieve the value at collection index ndx  
string ocicollmax(object collection) 
     Return the max value of a collection.  For a      varray this is the maximum length of the array  
string ocicollsize(object collection) 
     Return the size of a collection  
string ocicolltrim(object collection,num) 
     Trim num elements from the end of a collection  
int ocicolumnisnull(int stmt, int col) 
     Tell whether a column is NULL  
string ocicolumnname(int stmt, int col) 
     Tell the name of a column  
int ocicolumnprecision(int stmt, int col) 
     Tell the precision of a column  
int ocicolumnscale(int stmt, int col) 
     Tell the scale of a column  
int ocicolumnsize(int stmt, int col) 
     Tell the maximum data size of a column  
mixed ocicolumntype(int stmt, int col) 
     Tell the data type of a column  
mixed ocicolumntyperaw(int stmt, int col) 
     Tell the raw oracle data type of a column  
string ocicommit(int conn) 
     Commit the current context  
int ocidefinebyname(int stmt, string name, mixed &var [, int type]) 
     Define a PHP variable to an Oracle column by name  
array ocierror([int stmt|conn|global]) 
     Return the last error of stmt|conn|global. If no error happened returns false.  
int ociexecute(int stmt [, int mode]) 
     Execute a parsed statement  
int ocifetchinto(int stmt, array &output [, int mode]) 
     Fetch a row of result data into an array  
int ocifetch(int stmt) 
     Prepare a new row of data for reading  
int ocifetchstatement(int stmt, array &output) 
     Fetch all rows of result data into an array  
string ocifreecoll(object lob) 
     Deletes collection  
string ocifreedesc(object lob) 
     Deletes large object description  
int ocifreestatement(int stmt) 
     Free all resources associated with a statement  
void ociinternaldebug(int onoff) 
     Toggle internal debugging output for the OCI extension  
string ociloadlob(object lob) 
     Loads a large object  
int ocilogoff(int conn) 
     Disconnect from database  
int ocilogon(string user, string pass [, string db]) 
     Connect to an Oracle database and log on. Returns a new session.    
string ocinewcollection(int connection, string tdo) 
     Initialize a new collection  
int ocinewcursor(int conn) 
     Return a new cursor (Statement-Handle) - use this to bind ref-cursors!  
string ocinewdescriptor(int connection [, int type]) 
     Initialize a new empty descriptor LOB/FILE (LOB is default)  
int ocinlogon(string user, string pass [, string db]) 
     Connect to an Oracle database and log on. returns a new session  
int ocinumcols(int stmt) 
     Return the number of result columns in a statement  
int ociparse(int conn, string query) 
     Parse a query and return a statement  
int ociplogon(string user, string pass [, string db]) 
     Connect to an Oracle database using a persistent connection and log on. Returns a new session.  
string ociresult(int stmt, mixed column) 
     Return a single column of result data  
string ocirollback(int conn) 
     Rollback the current context  
int ocirowcount(int stmt) 
     Return the row count of an OCI statement  
string ocisavelobfile(object lob) 
     Saves a large object file  
string ocisavelob(object lob) 
     Saves a large object  
string ociserverversion(int conn) 
     Return a string containing server version information  
int ocisetprefetch(int conn, string query) 
     Set a prefetch query???  
int ocistatementtype(int stmt) 
     Return the query type of an OCI statement  
void ociwritelobtofile(object lob [, string filename] [, int start] [, int length]) 
     Writes a large object into a file  
int ociwritetemporarylob(int stmt, int loc, string var) 
     Return the row count of an OCI statement  
# php4/ext/odbc/php_odbc.c
bool next_result(int result_id) 
     Checks if multiple results are avaiable  
int odbc_autocommit(int connection_id [, int OnOff]) 
     Toggle autocommit mode or get status  
int odbc_binmode(int result_id, int mode) 
     Handle binary column data  
void odbc_close_all(void) 
     Close all ODBC connections  
void odbc_close(int connection_id) 
     Close an ODBC connection  
int odbc_columnprivileges(int connection_id, string catalog, string schema, string table, string column) 
     Returns a result identifier that can be used to fetch a list of columns and associated privileges for the specified table  
int odbc_columns(int connection_id, string qualifier, string owner, string table_name, string column_name) 
     Returns a result identifier that can be used to fetch a list of column names in specified tables  
int odbc_commit(int connection_id) 
     Commit an ODBC transaction  
int odbc_connect(string DSN, string user, string password [, int cursor_option]) 
     Connect to a datasource  
string odbc_cursor(int result_id) 
     Get cursor name  
string odbc_error([int connection_id]) 
     Get the last error code  
string odbc_errormsg([int connection_id]) 
     Get the last error message  
int odbc_exec(int connection_id, string query [, int flags]) 
     Prepare and execute an SQL statement  
int odbc_execute(int result_id [, array parameters_array]) 
     Execute a prepared statement  
array odbc_fetch_array(int result [, int rownumber]) 
     Fetch a result row as an associative array  
int odbc_fetch_into(int result_id [, int rownumber], array result_array) 
     Fetch one result row into an array  
object odbc_fetch_object(int result [, int rownumber]) 
     Fetch a result row as an object  
int odbc_fetch_row(int result_id [, int row_number]) 
     Fetch a row  
int odbc_field_len(int result_id, int field_number) 
     Get the length (precision) of a column  
string odbc_field_name(int result_id, int field_number) 
     Get a column name  
int odbc_field_num(int result_id, string field_name) 
     Return column number  
int odbc_field_scale(int result_id, int field_number) 
     Get the scale of a column  
string odbc_field_type(int result_id, int field_number) 
     Get the datatype of a column  
int odbc_foreignkeys(int connection_id, string pk_qualifier, string pk_owner, string pk_table, string fk_qualifier, string fk_owner, string fk_table) 
     Returns a result identifier to either a list of foreign keys in the specified table or a list of foreign keys in other tables that refer to the primary key in the specified table  
int odbc_free_result(int result_id) 
     Free resources associated with a result  
int odbc_gettypeinfo(int connection_id [, int data_type]) 
     Returns a result identifier containing information about data types supported by the data source  
int odbc_longreadlen(int result_id, int length) 
     Handle LONG columns  
int odbc_num_fields(int result_id) 
     Get number of columns in a result  
int odbc_num_rows(int result_id) 
     Get number of rows in a result  
int odbc_pconnect(string DSN, string user, string password [, int cursor_option]) 
     Establish a persistent connection to a datasource  
int odbc_prepare(int connection_id, string query) 
     Prepares a statement for execution  
int odbc_primarykeys(int connection_id, string qualifier, string owner, string table) 
     Returns a result identifier listing the column names that comprise the primary key for a table  
int odbc_procedurecolumns(int connection_id [, string qualifier, string owner, string proc, string column]) 
     Returns a result identifier containing the list of input and output parameters, as well as the columns that make up the result set for the specified procedures  
int odbc_procedures(int connection_id [, string qualifier, string owner, string name]) 
     Returns a result identifier containg the list of procedure names in a datasource  
int odbc_result_all(int result_id [, string format]) 
     Print result as HTML table  
string odbc_result(int result_id, mixed field) 
     Get result data  
int odbc_rollback(int connection_id) 
     Rollback a transaction  
int odbc_setoption(int conn_id|result_id, int which, int option, int value) 
     Sets connection or statement options  
int odbc_specialcolumns(int connection_id, int type, string qualifier, string owner, string table, int scope, int nullable) 
     Returns a result identifier containing either the optimal set of columns that uniquely identifies a row in the table or columns that are automatically updated when any value in the row is updated by a transaction  
int odbc_statistics(int connection_id, string qualifier, string owner, string name, int unique, int accuracy) 
     Returns a result identifier that contains statistics about a single table and the indexes associated with the table  
int odbc_tableprivileges(int connection_id, string qualifier, string owner, string name) 
     Returns a result identifier containing a list of tables and the privileges associated with each table  
int odbc_tables(int connection_id [, string qualifier, string owner, string name, string table_types]) 
     Call the SQLTables function  
# php4/ext/openssl/openssl.c
mixed openssl_error_string() 
  	returns a description of the last error, and alters the index of the error messages. returns false when the are no more messages.  
void openssl_free_key(int key) 
     Free key  
void openssl_free_x509(resource x509) 
     Free X.509 certificate  
int openssl_get_privatekey(string key [, string passphrase]) 
     Get private key  
int openssl_get_publickey(mixed cert) 
     Get public key from X.509 certificate  
bool openssl_open(string data, &string opendata, string ekey, mixed privkey) 
     Open data  
bool openssl_pkcs7_decrypt(string infilename, string outfilename, mixed recipcert[, mixed recipkey]) 
  	decrypt the S/MIME message in the file name infilename and output the results to the file name outfilename.  recipcert is a cert for one of the recipients. recipkey specifies the private key matching recipcert, if recipcert does not include the key  
bool openssl_pkcs7_encrypt(string infile, string outfile, mixed recipcerts, array headers[, long flags]) 
  	encrypt the message in the file named infile with the certificates in recipcerts and output the result to the file named outfile  
bool openssl_pkcs7_sign(string infile, string outfile, mixed signcert, mixed signkey, array headers[, long flags][, string extracertsfilename]) 
  	sign the MIME message in the file named infile with signcert/signkey and output the result to file name outfile. headers lists plain text headers to exclude from the signed portion of the message, and should include to, from and subject as a minimum  
bool openssl_pkcs7_verify(string filename, long flags[, string signerscerts][, array cainfo][, string extracerts]) 
  	verify that the data block is intact, the signer is who they say they are, and return the certs of the signers   
int openssl_seal(string data, &string sealdata, &array ekeys, array pubkeys) 
     Seal data  
bool openssl_sign(string data, &string signature, mixed key) 
     Sign data  
int openssl_verify(string data, string signature, mixed key) 
     Verify data  
int openssl_x509_checkpurpose(mixed x509cert, int purpose, array cainfo[, string untrustedfile]) 
  	check the cert to see if it can be used for the purpose in purpose. cainfo holds information about trusted CAs  
resource openssl_x509_read(mixed cert) 
     Read X.509 certificate  
# php4/ext/oracle/oracle.c
int ora_bind(int cursor, string php_variable_name, string sql_parameter_name, int length [, int type]) 
     Bind a PHP variable to an Oracle parameter  
int ora_close(int cursor) 
     Close an Oracle cursor  
string ora_columnname(int cursor, int column) 
     Get the name of an Oracle result column  
int ora_columnsize(int cursor, int column) 
     Return the size of the column  
string ora_columntype(int cursor, int column)  
     Get the type of an Oracle result column  
int ora_commit(int connection) 
     Commit an Oracle transaction  
int ora_commitoff(int connection) 
     Disable automatic commit  
int ora_commiton(int connection) 
     Enable automatic commit  
int ora_do(int connection, int cursor) 
     Parse and execute a statement and fetch first result row  
int ora_errorcode(int cursor_or_connection) 
     Get an Oracle error code  
string ora_error(int cursor_or_connection) 
     Get an Oracle error message  
int ora_exec(int cursor) 
     Execute a parsed statement  
int ora_fetch(int cursor) 
     Fetch a row of result data from a cursor  
int ora_fetch_into(int cursor, array result [, int flags]) 
     Fetch a row into the specified result array  
mixed ora_getcolumn(int cursor, int column) 
     Get data from a fetched row  
int ora_logoff(int connection) 
     Close an Oracle connection  
int ora_logon(string user, string password) 
     Open an Oracle connection  
int ora_numcols(int cursor) 
     Returns the numbers of columns in a result  
int ora_numrows(int cursor) 
     Returns the number of rows in a result  
int ora_open(int connection) 
     Open an Oracle cursor  
int ora_parse(int cursor, string sql_statement [, int defer]) 
     Parse an Oracle SQL statement  
int ora_plogon(string user, string password) 
     Open a persistent Oracle connection  
int ora_rollback(int connection) 
     Roll back an Oracle transaction  
# php4/ext/ovrimos/ovrimos.c
int ovrimos_autocommit(int connection_id, int OnOff) 
     Toggle autocommit mode     There can be problems with pconnections! 
void ovrimos_close_all() 
     Close all connections  
void ovrimos_close(int connection) 
     Close a connection  
int ovrimos_commit(int connection_id) 
     Commit an ovrimos transaction  
int ovrimos_connect(string host, string db, string user, string password) 
     Connect to an Ovrimos database  
string ovrimos_cursor(int result_id) 
     Get cursor name  
int ovrimos_exec(int connection_id, string query) 
     Prepare and execute an SQL statement  
int ovrimos_execute(int result_id [, array parameters_array]) 
     Execute a prepared statement  
int ovrimos_fetch_into(int result_id, array result_array [, string how, [int rownumber]]) 
     Fetch one result row into an array     how: 'Next' (default), 'Prev', 'First', 'Last', 'Absolute'      
int ovrimos_fetch_row(int result_id [, int how, [int row_number]]) 
     how: 'Next' (default), 'Prev', 'First', 'Last', 'Absolute'     Fetch a row  
int ovrimos_field_len(int result_id, int field_number) 
     Get the length of a column  
string ovrimos_field_name(int result_id, int field_number) 
     Get a column name  
int ovrimos_field_num(int result_id, string field_name) 
     Return column number  
string ovrimos_field_type(int result_id, int field_number) 
     Get the datatype of a column  
int ovrimos_free_result(int result_id) 
     Free resources associated with a result  
int ovrimos_longreadlen(int result_id, int length) 
     Handle LONG columns  
int ovrimos_num_fields(int result_id) 
     Get number of columns in a result  
int ovrimos_num_rows(int result_id) 
     Get number of rows in a result  
int ovrimos_prepare(int connection_id, string query) 
     Prepares a statement for execution  
int ovrimos_result_all(int result_id [, string format]) 
     Print result as HTML table  
string ovrimos_result(int result_id, mixed field) 
     Get result data  
int ovrimos_rollback(int connection_id) 
     Rollback a transaction  
int ovrimos_setoption(int conn_id|result_id, int which, int option, int value) 
     Sets connection or statement options  
# php4/ext/pcre/php_pcre.c
array preg_grep(string regex, array input) 
     Searches array and returns entries which match regex  
int preg_match_all(string pattern, string subject, array subpatterns [, int order]) 
     Perform a Perl-style global regular expression match  
int preg_match(string pattern, string subject [, array subpatterns]) 
     Perform a Perl-style regular expression match  
string preg_quote(string str, string delim_char) 
     Quote regular expression characters plus an optional character  
string preg_replace_callback(mixed regex, mixed callback, mixed subject [, int limit]) 
     Perform Perl-style regular expression replacement using replacement callback.  
string preg_replace(mixed regex, mixed replace, mixed subject [, int limit]) 
     Perform Perl-style regular expression replacement.  
array preg_split(string pattern, string subject [, int limit [, int flags]])  
     Split string into an array using a perl-style regular expression as a delimiter  
# php4/ext/pdf/pdf.c
void pdf_add_annotation(int pdfdoc, double xll, double yll, double xur, double xur, string title, string text) 
     Sets annotation (depreciated use pdf_add_note instead)  
int pdf_add_bookmark(int pdfdoc, string text [, int parent, int open]) 
     Adds bookmark for current page  
void pdf_add_launchlink(int pdfdoc, double llx, double lly, double urx, double ury, string filename) 
     Adds link to web resource  
void pdf_add_locallink(int pdfdoc, double llx, double lly, double urx, double ury, int page, string dest) 
     Adds link to web resource  
void pdf_add_note(int pdfdoc, double llx, double lly, double urx, double ury, string contents, string title, string icon, int open) 
     Sets annotation  
void pdf_add_pdflink(int pdfdoc, double llx, double lly, double urx, double ury, string filename, int page, string dest) 
     Adds link to PDF document  
void pdf_add_thumbnail(int pdf, int image); 
   * Add an existing image as thumbnail for the current page.  
void pdf_add_weblink(int pdfdoc, double llx, double lly, double urx, double ury, string url) 
     Adds link to web resource  
void pdf_arc(int pdfdoc, double x, double y, double radius, double start, double end) 
     Draws an arc  
void pdf_arcn(int pdf, double x, double y, double r, double alpha, double beta); 
   * Draw a clockwise circular arc from alpha to beta degrees.  
void pdf_attach_file(int pdf, double lly, double lly, double urx, double ury, string filename, string description, string author, string mimetype, string icon) 
     Adds a file attachment annotation at the rectangle specified by his lower left and upper right corners  
void pdf_begin_page(int pdfdoc, double width, double height) 
     Starts page  
int pdf_begin_pattern(int pdf, double width, double height, double xstep, double ystep, int painttype); 
   * Start a new pattern definition.  
int pdf_begin_template(int pdf, double width, double height); 
   * Start a new template definition.  
void pdf_circle(int pdfdoc, double x, double y, double radius) 
     Draws a circle  
void pdf_clip(int pdfdoc) 
     Clips to current path  
void pdf_close_image(int pdf, int pdfimage) 
     Closes the PDF image  
void pdf_close(int pdfdoc) 
     Closes the pdf document  
void pdf_closepath_fill_stroke(int pdfdoc) 
     Close, fill and stroke current path  
void pdf_closepath(int pdfdoc) 
     Close path  
void pdf_closepath_stroke(int pdfdoc) 
     Close path and draw line along path  
void pdf_close_pdi(int pdf, int doc); 
   * Close all open page handles, and close the input PDF document.  
void pdf_close_pdi_page(int pdf, int page); 
   * Close the page handle, and free all page-related resources.  
void pdf_concat(int pdf, double a, double b, double c, double d, double e, double f) 
     Concatenates a matrix to the current transformation matrix for text and graphics  
void pdf_continue_text(int pdfdoc, string text) 
     Output text in next line  
void pdf_curveto(int pdfdoc, double x1, double y1, double x2, double y2, double x3, double y3) 
     Draws a curve  
void pdf_delete(int pdfdoc) 
     Deletes the PDF object  
void pdf_end_page(int pdfdoc) 
     Ends page  
void pdf_endpath(int pdfdoc) 
     Ends current path  
void pdf_end_pattern(int pdf); 
   * Finish the pattern definition.  
void pdf_end_template(int pdf); 
   * Finish the template definition.  
void pdf_fill(int pdfdoc) 
     Fill current path  
void pdf_fill_stroke(int pdfdoc) 
     Fill and stroke current path  
int pdf_findfont(int pdfdoc, string fontname, string encoding [, int embed]) 
     Prepares the font fontname for later use with pdf_setfont()  
int pdf_get_buffer(int pdfdoc) 
     Fetches the full buffer containig the generated PDF data  
int pdf_get_font(int pdfdoc) 
     Gets the current font  
string pdf_get_fontname(int pdfdoc) 
     Gets the current font name  
double pdf_get_fontsize(int pdfdoc) 
     Gets the current font size  
int pdf_get_image_height(int pdf, int pdfimage) 
     Returns the height of an image  
int pdf_get_image_width(int pdf, int pdfimage) 
     Returns the width of an image  
string pdf_get_parameter(int pdfdoc, string key, mixed modifier) 
     Gets arbitrary parameters  
string pdf_get_pdi_parameter(int pdf, string key, int doc, int page, int index); 
   * Get the contents of some PDI document parameter with string type.  
double pdf_get_pdi_value(int pdf, string key, int doc, int page, int index); 
   * Get the contents of some PDI document parameter with numerical type.  
double pdf_get_value(int pdfdoc, string key, double modifier) 
     Gets arbitrary value  
void pdf_initgraphics(int pdf); 
   * Reset all implicit color and graphics state parameters to their defaults.  
void pdf_lineto(int pdfdoc, double x, double y) 
     Draws a line  
int pdf_makespotcolor(int pdf, string spotname); 
   * Make a named spot color from the current color.  
void pdf_moveto(int pdfdoc, double x, double y) 
     Sets current point  
int pdf_new() 
     Creates a new PDF object  
int pdf_open_ccitt(int pdf, string filename, int width, int height, int bitreverse, int k, int blackls1) 
     Opens an image file with raw CCITT G3 or G4 compresed bitmap data  
int pdf_open_file(int pdfdoc [, char filename]) 
     Opens a new PDF document. If filename is NULL, document is created in memory. This is not yet fully supported  
int pdf_open_gif(int pdf, string giffile) 
     Opens a GIF file and returns an image for placement in a pdf object  
int pdf_open_image_file(int pdf, string type, string file, string stringparam, int intparam) 
     Opens an image file of the given type and returns an image for placement in a PDF document  
int pdf_open_image(int pdf, string type, string source, string data, long length, int width, int height, int components, int bpc, string params) 
     Opens an image of the given type and returns an image for placement in a PDF document  
int pdf_open([int filedesc]) 
     Opens a new pdf document. If filedesc is NULL, document is created in memory. This is the old interface, only for compatibility use pdf_new + pdf_open_file instead  
int pdf_open_jpeg(int pdf, string jpegfile) 
     Opens a JPEG file and returns an image for placement in a PDF document  
int pdf_open_memory_image(int pdf, int image) 
     Takes an GD image and returns an image for placement in a PDF document  
int pdf_open_pdi(int pdf, string filename, string stringparam, int intparam); 
   * Open an existing PDF document and prepare it for later use.  
int pdf_open_pdi_page(int pdf, int doc, int page, string label); 
   * Prepare a page for later use with PDF_place_image().  
int pdf_open_png(int pdf, string pngfile) 
     Opens a PNG file and returns an image for placement in a PDF document  
int pdf_open_tiff(int pdf, string tifffile) 
     Opens a TIFF file and returns an image for placement in a PDF document  
void pdf_place_image(int pdf, int pdfimage, double x, double y, double scale) 
     Places image in the PDF document  
void pdf_place_pdi_page(int pdf, int page, double x, double y, double sx, double sy) 
   * Place a PDF page with the lower left corner at (x, y), and scale it.  
void pdf_rect(int pdfdoc, double x, double y, double width, double height) 
     Draws a rectangle  
void pdf_restore(int pdfdoc) 
     Restores formerly saved enviroment  
void pdf_rotate(int pdfdoc, double angle) 
     Sets rotation  
void pdf_save(int pdfdoc) 
     Saves current enviroment  
void pdf_scale(int pdfdoc, double x-scale, double y-scale) 
     Sets scaling  
void pdf_set_border_color(int pdfdoc, double red, double green, double blue) 
     Sets color of box surounded all kinds of annotations and links  
void pdf_set_border_dash(int pdfdoc, double black, double white) 
     Sets the border dash style of all kinds of annotations and links  
void pdf_set_border_style(int pdfdoc, string style, double width) 
     Sets style of box surounding all kinds of annotations and link  
void pdf_set_char_spacing(int pdfdoc, double space) 
     Sets character spacing  
void pdf_setcolor(int pdf, string type, string colorspace, double c1, double c2, double c3, double c4); 
   * Set the current color space and color.  
void pdf_setdash(int pdfdoc, double white, double black) 
     Sets dash pattern  
void pdf_set_duration(int pdfdoc, double duration) 
     Sets duration between pages  
void pdf_setflat(int pdfdoc, double value) 
     Sets flatness  
void pdf_setfont(int pdfdoc, int font, float fontsize) 
     Sets the current font in the fiven fontsize  
void pdf_set_font(int pdfdoc, string font, double size, string encoding [, int embed]) 
     Select the current font face, size and encoding  
void pdf_setgray_fill(int pdfdoc, double value) 
     Sets filling color to gray value  
void pdf_setgray(int pdfdoc, double value) 
     Sets drawing and filling color to gray value  
void pdf_setgray_stroke(int pdfdoc, double value) 
     Sets drawing color to gray value  
void pdf_set_horiz_scaling(int pdfdoc, double scale) 
     Sets horizontal scaling of text  
bool pdf_set_info_author(int pdfdoc, string author) 
     Fills the author field of the document  
bool pdf_set_info_creator(int pdfdoc, string creator) 
     Fills the creator field of the document  
bool pdf_set_info(int pdfdoc, string fieldname, string value) 
     Fills an info field of the document  
bool pdf_set_info_keywords(int pdfdoc, string keywords) 
     Fills the keywords field of the document  
bool pdf_set_info_subject(int pdfdoc, string subject) 
     Fills the subject field of the document  
bool pdf_set_info_title(int pdfdoc, string title) 
     Fills the title field of the document  
void pdf_set_leading(int pdfdoc, double distance) 
     Sets distance between text lines  
void pdf_setlinecap(int pdfdoc, int value) 
     Sets linecap parameter  
void pdf_setlinejoin(int pdfdoc, int value) 
     Sets linejoin parameter  
void pdf_setlinewidth(int pdfdoc, double width) 
     Sets line width  
void pdf_setmatrix(int pdf, double a, double b, double c, double d, double e, double f) 
     Explicitly set the current transformation matrix.  
void pdf_setmiterlimit(int pdfdoc, double value) 
     Sets miter limit  
void pdf_set_parameter(int pdfdoc, string key, string value) 
     Sets arbitrary parameters  
void pdf_setpolydash(int pdfdoc, double darray) 
     Sets more complicated dash pattern  
void pdf_setrgbcolor_fill(int pdfdoc, double red, double green, double blue) 
     Sets filling color to RGB color value  
void pdf_setrgbcolor(int pdfdoc, double red, double green, double blue) 
     Sets drawing and filling color to RGB color value  
void pdf_setrgbcolor_stroke(int pdfdoc, double red, double green, double blue) 
     Sets drawing color to RGB color value  
void pdf_set_text_pos(int pdfdoc, double x, double y) 
     Sets the position of text for the next pdf_show call  
void pdf_set_text_rendering(int pdfdoc, int mode) 
     Determines how text is rendered  
void pdf_set_text_rise(int pdfdoc, double value) 
     Sets the text rise  
void pdf_set_transition(int pdfdoc, int transition) 
     Sets transition between pages  
void pdf_set_value(int pdfdoc, string key, double value) 
     Sets arbitrary value  
void pdf_set_word_spacing(int pdfdoc, double space) 
     Sets spacing between words  
int pdf_show_boxed(int pdfdoc, string text, double x-koor, double y-koor, double width, double height, string mode [, string feature]) 
     Output text formated in a boxed  
void pdf_show(int pdfdoc, string text) 
     Output text at current position  
void pdf_show_xy(int pdfdoc, string text, double x-koor, double y-koor) 
     Output text at position  
void pdf_skew(int pdfdoc, double xangle, double yangle) 
     Skew the coordinate system  
double pdf_stringwidth(int pdfdoc, string text [, int font, double size]) 
     Returns width of text in current font  
void pdf_stroke(int pdfdoc) 
     Draw line along path path  
void pdf_translate(int pdfdoc, double x, double y) 
     Sets origin of coordinate system  
# php4/ext/pfpro/pfpro.c
void pfpro_cleanup() 
     Shuts down the Payflow Pro library  
void pfpro_init() 
     Initialises the Payflow Pro library  
array pfpro_process(array parmlist [, string hostaddress [, int port, [, int timeout [, string proxyAddress [, int proxyPort [, string proxyLogon [, string proxyPassword]]]]]]]) 
     Payflow Pro transaction processing using arrays  
string pfpro_process_raw(string parmlist [, string hostaddress [, int port, [, int timeout [, string proxyAddress [, int proxyPort [, string proxyLogon [, string proxyPassword]]]]]]]) 
     Raw Payflow Pro transaction processing  
string pfpro_version() 
     Returns the version of the Payflow Pro library  
# php4/ext/pgsql/pgsql.c
string pg_client_encoding([int connection]) 
     Get the current client encoding  
bool pg_close([int connection]) 
     Close a PostgreSQL connection  
int pg_cmdtuples(int result) 
     Returns the number of affected tuples  
int pg_connect([string connection_string] | [string host, string port [, string options [, string tty,]] string database) 
     Open a PostgreSQL connection  
string pg_dbname([int connection]) 
     Get the database name  
int pg_end_copy([int connection]) 
     Sync with backend. Completes the Copy command  
string pg_errormessage([int connection]) 
     Get the error message string  
int pg_exec([int connection,] string query) 
     Execute a query  
array pg_fetch_array(int result, int row [, int result_type]) 
     Fetch a row as an array  
object pg_fetch_object(int result, int row [, int result_type]) 
     Fetch a row as an object  
array pg_fetch_row(int result, int row) 
     Get a row as an enumerated array  
int pg_fieldisnull(int result, int row, mixed field_name_or_number) 
     Test if a field is NULL  
string pg_fieldname(int result, int field_number) 
     Returns the name of the field  
int pg_fieldnum(int result, string field_name) 
     Returns the field number of the named field  
int pg_fieldprtlen(int result, int row, mixed field_name_or_number) 
     Returns the printed length  
int pg_fieldsize(int result, int field_number) 
     Returns the internal size of the field  
string pg_fieldtype(int result, int field_number) 
     Returns the type name for the given field  
int pg_freeresult(int result) 
     Free result memory  
int pg_getlastoid(int result) 
     Returns the last object identifier  
string pg_host([int connection]) 
     Returns the host name associated with the connection  
void pg_loclose(int fd) 
     Close a large object  
int pg_locreate(int connection) 
     Create a large object  
bool pg_loexport(int objoid, string filename [, resource connection]) 
     Export large object direct to filesystem  
int pg_loimport(string filename [, resource connection]) 
     Import large object direct from filesystem  
int pg_loopen([int connection,] int objoid, string mode) 
     Open a large object and return fd  
void pg_loreadall(int fd) 
     Read a large object and send straight to browser  
string pg_loread(int fd, int len) 
     Read a large object  
void pg_lounlink([int connection,] int large_obj_id) 
     Delete a large object  
int pg_lowrite(int fd, string buf) 
     Write a large object  
int pg_numfields(int result) 
     Return the number of fields in the result  
int pg_numrows(int result) 
     Return the number of rows in the result  
string pg_options([int connection]) 
     Get the options associated with the connection  
int pg_pconnect([string connection_string] | [string host, string port [, string options [, string tty,]] string database) 
     Open a persistent PostgreSQL connection  
int pg_port([int connection]) 
     Return the port number associated with the connection  
int pg_put_line([int connection,] string query) 
     Send null-terminated string to backend server 
mixed pg_result(int result, int row_number, mixed field_name) 
     Returns values from a result identifier  
int pg_set_client_encoding([int connection,] string encoding) 
     Set client encoding  
bool pg_trace(string filename [, string mode [, resource connection]]) 
     Enable tracing a PostgreSQL connection  
string pg_tty([int connection]) 
     Return the tty name associated with the connection  
bool pg_untrace([int connection]) 
     Disable tracing of a PostgreSQL connection  
# php4/ext/posix/posix.c
string posix_ctermid(void)  
     Generate terminal path name (POSIX.1, 4.7.1)  
string posix_getcwd(void)  
     Get working directory pathname (POSIX.1, 5.2.2)  
long posix_getegid(void)  
     Get the current effective group id (POSIX.1, 4.2.1)  
long posix_geteuid(void)  
     Get the current effective user id (POSIX.1, 4.2.1)  
long posix_getgid(void)  
     Get the current group id (POSIX.1, 4.2.1)  
array posix_getgrgid(long gid)  
     Group database access (POSIX.1, 9.2.1)  
array posix_getgrnam(string groupname)  
     Group database access (POSIX.1, 9.2.1)  
long posix_getgroups(void)  
     Get supplementary group id's (POSIX.1, 4.2.3)  
string posix_getlogin(void)  
     Get user name (POSIX.1, 4.2.4)  
long posix_getpgid(void)  
     Get the process group id of the specified process (This is not a POSIX function, but a SVR4ism, so we compile conditionally)  
long posix_getpgrp(void)  
     Get current process group id (POSIX.1, 4.3.1)  
long posix_getpid(void)  
     Get the current process id (POSIX.1, 4.1.1)  
long posix_getppid(void)  
     Get the parent process id (POSIX.1, 4.1.1)  
array posix_getpwnam(string groupname)  
     User database access (POSIX.1, 9.2.2)  
array posix_getpwuid(long uid)  
     User database access (POSIX.1, 9.2.2)  
long posix_getrlimit(void)  
     Get system resource consumption limits (This is not a POSIX function, but a BSDism and a SVR4ism. We compile conditionally)  
long posix_getsid(void)  
     Get process group id of session leader (This is not a POSIX function, but a SVR4ism, so be compile conditionally)  
long posix_getuid(void)  
     Get the current user id (POSIX.1, 4.2.1)  
bool posix_isatty(int fd)  
     Determine if filedesc is a tty (POSIX.1, 4.7.1)  
int posix_kill(int pid, int sig) 
     Send a signal to a process (POSIX.1, 3.3.2)  
string posix_mkfifo(void) 
     Make a FIFO special file (POSIX.1, 5.4.2)  
long posix_setegid(long uid) 
     Set effective group id  
long posix_seteuid(long uid) 
     Set effective user id  
long posix_setgid(long uid) 
     Set group id (POSIX.1, 4.2.2)  
long posix_setpgid(long pid, long pgid)  
     Set process group id for job control (POSIX.1, 4.3.3)  
long posix_setsid(void)  
     Create session and set process group id (POSIX.1, 4.3.2)  
long posix_setuid(long uid) 
     Set user id (POSIX.1, 4.2.2)  
array posix_times(void)  
     Get process times (POSIX.1, 4.5.2)  
string posix_ttyname(int fd)  
     Determine terminal device name (POSIX.1, 4.7.2)  
array posix_uname(void)  
     Get system name (POSIX.1, 4.4.1)  
# php4/ext/printer/printer.c
void printer_abort(resource handle) 
     Abort printing 
bool printer_close(resource connection) 
     Close the printer connection  
mixed printer_create_brush(resource handle) 
     Create a brush  
void printer_create_dc(int handle) 
     Create a device content  
mixed printer_create_font(string face, int height, int width, int font_weight, bool italic, bool underline, bool strikeout, int orientaton) 
     Create a font  
mixed printer_create_pen(int style, int width, string color) 
     Create a pen  
bool printer_delete_brush(resource brush_handle) 
     Delete a brush  
bool printer_delete_dc(int handle) 
     Delete a device content  
void printer_delete_font(int fonthandle) 
     Delete a font  
bool printer_delete_pen(resource pen_handle) 
     Delete a pen  
mixed printer_draw_bmp(resource handle, string filename, int x, int y) 
     Draw a bitmap  
void printer_draw_chord(resource handle, int rec_x, int rec_y, int rec_x1, int rec_y1, int rad_x, int rad_y, int rad_x1, int rad_y1) 
     Draw a chord 
void printer_draw_elipse(resource handle, int ul_x, int ul_y, int lr_x, int lr_y) 
     Draw an elipse  
void printer_draw_line(int handle, int fx, int fy, int tx, int ty) 
     Draw line from x, y to x, y 
void printer_draw_pie(resource handle, int rec_x, int rec_y, int rec_x1, int rec_y1, int rad1_x, int rad1_y, int rad2_x, int rad2_y) 
     Draw a pie 
void printer_draw_rectangle(resource handle, int ul_x, int ul_y, int lr_x, int lr_y) 
     Draw a rectangle  
void printer_draw_roundrect(resource handle, int ul_x, int ul_y, int lr_x, int lr_y, int width, int height) 
     Draw a roundrect  
void printer_draw_text(resource handle, string text, int x, int y) 
     Draw text  
bool printer_end_doc(int handle) 
     End a document  
bool printer_end_page(int handle) 
     End a page  
mixed printer_get_option(int handle, string option) 
     Get configured data  
array printer_list(int EnumType [, string Name [, int Level]]) 
     Return an array of printers attached to the server  
int printer_logical_fontheight(int handle, int height) 
     Get the logical font height  
mixed printer_open(string printername) 
     Return a handle to the printer or false if connection failed  
void printer_select_brush(resource printer_handle, resource brush_handle) 
     Select a brush  
void printer_select_font(int printerhandle, int fonthandle) 
     Select a font  
void printer_select_pen(resource printer_handle, resource pen_handle) 
     Select a pen  
bool printer_set_option(resource connection,string option,mixed value) 
     Configure the printer device  
bool printer_start_doc(int handle) 
     Start a document  
bool printer_start_page(int handle) 
     Start a page  
bool printer_write(resource connection,string content) 
     Write directly to the printer  
# php4/ext/pspell/pspell.c
int pspell_add_to_personal(int pspell, string word) 
     Adds a word to a personal list  
int pspell_add_to_session(int pspell, string word) 
     Adds a word to the current session  
int pspell_check(int pspell, string word) 
     Returns true if word is valid  
int pspell_clear_session(int pspell) 
     Clears the current session  
int pspell_config_create(string language [, string spelling [, string jargon [, string encoding]]]) 
     Create a new config to be used later to create a manager  
int pspell_config_ignore(int conf, int ignore) 
     Ignore words <= n chars  
int pspell_config_mode(int conf, long mode) 
     Select mode for config (PSPELL_FAST, PSPELL_NORMAL or PSPELL_BAD_SPELLERS)  
int pspell_config_personal(int conf, string personal) 
     Use a personal dictionary for this config  
int pspell_config_repl(int conf, string repl) 
     Use a personal dictionary with replacement pairs for this config  
int pspell_config_runtogether(int conf, bool runtogether) 
     Consider run-together words as valid components  
int pspell_config_save_repl(int conf, bool save) 
     Save replacement pairs when personal list is saved for this config  
int pspell_new_config(int config) 
     Load a dictionary based on the given config  
int pspell_new_personal(string personal, string language [, string spelling [, string jargon [, string encoding [, int mode]]]]) 
     Load a dictionary with a personal wordlist 
int pspell_new(string language [, string spelling [, string jargon [, string encoding [, int mode]]]]) 
     Load a dictionary  
int pspell_save_wordlist(int pspell) 
     Saves the current (personal) wordlist  
int pspell_store_replacement(int pspell, string misspell, string correct) 
     Notify the dictionary of a user-selected replacement  
array pspell_suggest(int pspell, string word) 
     Returns array of suggestions  
# php4/ext/qtdom/qtdom.c
string qdom_error() 
     Returns the error string from the last QDOM operation or FALSE if no errors occured. 
object qdom_tree( string ) 
     creates a tree of an xml string  
# php4/ext/readline/readline.c
void readline_add_history([string prompt])  
     Adds a line to the history  
void readline_clear_history(void)  
     Clears the history  
void readline_completion_function(string funcname)  
     Readline completion function?  
mixed readline_info([string varname] [, string newvalue])  
     Gets/sets various internal readline variables.  
array readline_list_history(void)  
     Lists the history  
int readline_read_history([string filename] [, int from] [,int to])  
     Reads the history  
string readline([string prompt])  
     Reads a line  
int readline_write_history([string filename])  
     Writes the history  
# php4/ext/recode/recode.c
bool recode_file(string request, resource input, resource output) 
     Recode file input into file output according to request  
string recode_string(string request, string str) 
     Recode string str according to request string  
# php4/ext/snmp/snmp.c
bool snmp_get_quick_print(void) 
     Return the current status of quick_print  
string snmpget(string host, string community, string object_id [, int timeout [, int retries]])  
     Fetch a SNMP object  
array snmprealwalk(string host, string community, string object_id [, int timeout [, int retries]]) 
     Return all objects including their respective object id withing the specified one  
void snmp_set_quick_print(int quick_print) 
     Return all objects including their respective object id withing the specified one  
int snmpset(string host, string community, string object_id, string type, mixed value [, int timeout [, int retries]])  
     Set the value of a SNMP object  
array snmpwalk(string host, string community, string object_id [, int timeout [, int retries]])  
     Return all objects under the specified object id  
# php4/ext/sablot/sablot.c
bool xslt_closelog(resource xh) 
     Clear the logfile for a given instance Sablotron  
resource xslt_create(void) 
     Create a new XSL processor and return a resource identifier.  
int xslt_errno([int xh]) 
     Return the error number related to a given error handle.  If no handle is given the last error number that occurred anywhere is returned.  
mixed xslt_error([int xh]) 
     Return the error string related to a given error handle.  If no handle is given the last error that occurred anywhere is returned.  
string xslt_fetch_result(resource xh[, string result_name]) 
     Fetch a result buffer on process handle, xh, with name, result_name, if name is not given than the "/_result" buffer is fetched.  
void xslt_free(resource xh) 
     Free resources associated with a xslt handle.  
bool xslt_openlog(resource xh, string logfile[, int loglevel]) 
     Sets a logfile for Sablotron to place all of its error messages  
void xslt_output_begintransform(string file) 
     Begin filtering of all data that is being printed out through the XSL file given by the file parameter.  
void xslt_output_endtranform(void) 
     End filtering that data through the XSL file set by xslt_output_transform() and output the data  
bool xslt_process(string xslt, string input_str, string &result[, string base]) 
     Process data given by input_str through xslt and place the results in the string result.  If base is supplied, it will be used as the base URI.  
bool xslt_run(resource xh, string xslt_file, string data_file[, string result[, array xslt_params[, array xslt_args]]]) 
     Process the file data_file with the XSL stylesheet xslt_file and parameters xslt_parameters place the results in the buffer pointed to by the result parameter (defaults to "/_result"), args contains the values of the variables in the other parameters.   
bool xslt_set_base(resource xh, string scheme, string base) 
     Overrides the default base for a resource.  If scheme is non-null, it only affects the uri given by scheme  
void xslt_set_encoding(resource xh, string encoding) 
     Sets output encoding to be used for Sablotron regardless of the encoding specified by the stylesheet. To unset, call with encoding_ NULL.  
void xslt_set_error_handler([int xh, ] string error_handler_name) 
     Set a error handler (either per handle or global)  
void xslt_set_sax_handler(resource xh, array handlers) 
     Set SAX Handlers on the resource handle given by xh.  
void xslt_set_scheme_handler(resource xh, array handlers) 
     Set SAX Handlers on the resource handle given by xh.  
bool xslt_transform(string xslt_uri, string transform_uri, string result_uri[, array xslt_params[, array xslt_args[, string &result]]]) 
     Transform an XML document, transform_uri, with an XSL stylesheet, xslt_uri with parameters, xslt_params, into the Result buffer, result_uri, xslt_args defines the variables in xslt_uri, transform_uri and result_uri.  
# php4/ext/session/session.c
string session_cache_limiter([string new_cache_limiter]) 
     Return the current cache limiter. If new_cache_limited is given, the current cache_limiter is replaced with new_cache_limiter  
bool session_decode(string data) 
     Deserializes data and reinitializes the variables  
bool session_destroy(void) 
     Destroy the current session and all data associated with it  
string session_encode(void) 
     Serializes the current setup and returns the serialized representation  
array session_get_cookie_params(void) 
     Return the session cookie parameters  
string session_id([string newid]) 
     Return the current session id. If newid is given, the session id is replaced with newid  
bool session_is_registered(string varname) 
     Checks if a variable is registered in session  
string session_module_name([string newname]) 
     Return the current module name used for accessing session data. If newname is given, the module name is replaced with newname  
string session_name([string newname]) 
     Return the current session name. If newname is given, the session name is replaced with newname  
bool session_register(mixed var_names [, mixed ...]) 
     Adds varname(s) to the list of variables which are freezed at the session end  
string session_save_path([string newname]) 
     Return the current save path passed to module_name. If newname is given, the save path is replaced with newname  
void session_set_cookie_params(int lifetime [, string path [, string domain [, bool secure]]]) 
     Set session cookie parameters  
void session_set_save_handler(string open, string close, string read, string write, string destroy, string gc) 
     Sets user-level functions  
bool session_start(void) 
     Begin session - reinitializes freezed variables, registers browsers etc  
bool session_unregister(string varname) 
     Removes varname from the list of variables which are freezed at the session end  
void session_unset(void) 
     Unset all registered variables  
# php4/ext/shmop/shmop.c
void shmop_close (int shmid) 
     closes a shared memory segment  
bool shmop_delete (int shmid) 
     mark segment for deletion  
int shmop_open (int key, int flags, int mode, int size) 
     gets and attaches a shared memory segment  
string shmop_read (int shmid, int start, int count) 
     reads from a shm segment  
int shmop_size (int shmid) 
     returns the shm size  
int shmop_write (int shmid, string data, int offset) 
     writes to a shared memory segment  
# php4/ext/skeleton/skeleton.c
string confirm_extname_compiled(string arg) 
     Return a string to confirm that the module is compiled in  
# php4/ext/sockets/sockets.c
int accept_connect(int fd) 
     Accepts a connection on the listening socket fd  
bool add_iovec(resource iovec_id, int iov_len) 
     Adds a new vector to the scatter/gather array  
int bind(int sockfd, string addr [, int port]) 
     Binds an open socket to a listening port  
resource build_iovec(int num_vectors [, int ...]) 
     Builds a 'struct iovec' for use with sendmsg, recvmsg, writev, and readv  
bool close(int fd) 
     Closes a file descriptor  
int connect(int sockfd, string addr [, int port]) 
     Opens a connection to addr:port on the socket specified by sockfd  
bool delete_iovec(resource iovec_id, int iov_pos) 
     Deletes a vector from an array of vectors  
resource fd_alloc(void) 
     Allocates a file descriptor set  
bool fd_clear(int fd, resource set) 
     Clears a file descriptor from a set  
bool fd_dealloc(int set) 
     De-allocates a file descriptor set  
bool fd_isset(int fd, resource set) 
     Checks to see if a file descriptor is set within the file descrirptor set  
bool fd_set(int fd, resource set) 
     Adds a file descriptor to a set  
void fd_zero(resource set) 
     Clears a file descriptor set  
string fetch_iovec(resource iovec_id, int iovec_position) 
     Returns the data held in the iovec specified by iovec_id[iovec_position]  
bool free_iovec(resource iovec_id) 
     Frees the iovec specified by iovec_id  
int gethostbyaddr(string addr, string &name) 
     Given a human-readable address, sets name to be the host's name  
int gethostbyname(string name, string &addr) 
     Given a hostname, sets addr to be a human-readable version of the host's address  
int getpeername(int fd, string &addr[, int &port]) 
     Given an fd, stores a string representing sa.sin_addr and the value of sa.sin_port into addr and port describing the remote side of a socket  
int getsockname(int fd, string &addr[, int &port]) 
     Given an fd, stores a string representing sa.sin_addr and the value of sa.sin_port into addr and port describing the local side of a socket  
int getsockopt(int fd, int level, int optname, array|int &optval) 
     Gets socket options for the socket  
bool listen(int fd, int backlog) 
     Sets the maximum number of connections allowed to be waited for on the socket specified by fd  
int open_listen_sock(int port) 
     Opens a socket on port to accept connections  
int read(int fd, string &buf, int length [, int type]) 
     Reads length bytes from fd into buf  
int readv(int fd, resource iovec_id) 
     Reads from an fd, using the scatter-gather array defined by iovec_id  
int recvfrom(int fd, string &buf, int len, int flags, string &name [, int &port]) 
     Receives data from a socket, connected or not  
int recv(int fd, string buf, int len, int flags) 
     Receives data from a connected socket  
int recvmsg(int fd, resource iovec, array &control, int &controllen, int &flags, string &addr [, int &port]) 
     Used to receive messages on a socket, whether connection-oriented or not  
int select(int max_fd, resource readfds, resource writefds, resource exceptfds, int tv_sec, int tv_usec) 
     Runs the select() system call on the sets mentioned with a timeout specified by tv_sec and tv_usec  
int send(int fd, string buf, int len, int flags) 
     Sends data to a connected socket  
int sendmsg(int fd, resource iovec, int flags, string addr [, int port]) 
     Sends a message to a socket, regardless of whether it is connection-oriented or not  
int sendto(int fd, string buf, int len, int flags, string addr [, int port]) 
     Sends a message to a socket, whether it is connected or not  
bool set_iovec(resource iovec_id, int iovec_position, string new_val) 
     Sets the data held in iovec_id[iovec_position] to new_val  
bool set_nonblock(int fd) 
     Sets nonblocking mode for file descriptor fd  
int setsockopt(int fd, int level, int optname, int|array optval) 
     Sets socket options for the socket  
int shutdown(int fd, int how) 
     Shuts down a socket for receiving, sending, or both.  
int socket(int domain, int type, int protocol) 
     Creates an endpoint for communication in the domain specified by domain, of type specified by type  
int socketpair(int domain, int type, int protocol, array &fds) 
     Creates a pair of indistinguishable sockets and stores them in fds.  
string strerror(int errno) 
     Returns a string describing an error  
int write(int fd, string buf, int length) 
     Writes length bytes of buf to the file descriptor fd  
int writev(int fd, resource iovec_id) 
     Writes to a file descriptor, fd, using the scatter-gather array defined by iovec_id  
# php4/ext/standard/array.c
array array_count_values(array input) 
     Return the value as key and the frequency of that value in input as value  
array array_diff(array arr1, array arr2 [, array ...]) 
     Returns the entries of arr1 that have values which are not present in any of the others arguments  
array array_filter(array input [, mixed callback]) 
     Filters elements from the array via the callback.  
array array_flip(array input) 
     Return array with key <-> value flipped  
array array_intersect(array arr1, array arr2 [, array ...]) 
     Returns the entries of arr1 that have values which are present in all the other arguments  
array array_keys(array input [, mixed search_value]) 
     Return just the keys from the input array, optionally only for the specified search_value  
array array_map(mixed callback, array input1 [, array input2 ,...]) 
     Applies the callback to the elements in given arrays.  
array array_merge(array arr1, array arr2 [, array ...]) 
     Merges elements from passed arrays into one array  
array array_merge_recursive(array arr1, array arr2 [, array ...]) 
     Recursively merges elements from passed arrays into one array  
bool array_multisort(array ar1 [, SORT_ASC|SORT_DESC [, SORT_REGULAR|SORT_NUMERIC|SORT_STRING]] [, array ar2 [, SORT_ASC|SORT_DESC [, SORT_REGULAR|SORT_NUMERIC|SORT_STRING]], ...]) 
     Sort multiple arrays at once similar to how ORDER BY clause works in SQL  
array array_pad(array input, int pad_size, mixed pad_value) 
     Returns a copy of input array padded with pad_value to size pad_size  
mixed array_pop(array stack) 
     Pops an element off the end of the array  
int array_push(array stack, mixed var [, mixed ...]) 
     Pushes elements onto the end of the array  
mixed array_rand(array input [, int num_req]) 
     Return key/keys for random entry/entries in the array  
mixed array_reduce(array input, mixed callback [, int initial]) 
     Iteratively reduce the array to a single value via the callback.  
array array_reverse(array input [, bool preserve keys]) 
     Return input as a new array with the order of the entries reversed  
mixed array_search(mixed needle, array haystack [, bool strict]) 
     Searches the array for a given value and returns the corresponding key if successful  
mixed array_shift(array stack) 
     Pops an element off the beginning of the array  
array array_slice(array input, int offset [, int length]) 
     Returns elements specified by offset and length  
array array_splice(array input, int offset [, int length [, array replacement]]) 
     Removes the elements designated by offset and length and replace them with supplied array  
mixed array_sum(array input) 
     Returns the sum of the array entries  
array array_unique(array input) 
     Removes duplicate values from array  
int array_unshift(array stack, mixed var [, mixed ...]) 
     Pushes elements onto the beginning of the array  
array array_values(array input) 
     Return just the values from the input array  
int array_walk(array input, string funcname [, mixed userdata]) 
     Apply a user function to every member of an array  
void arsort(array array_arg [, int sort_flags]) 
     Sort an array in reverse order and maintain index association  
void asort(array array_arg [, int sort_flags]) 
     Sort an array and maintain index association  
array compact(mixed var_names [, mixed ...]) 
     Creates a hash containing variables and their values  
int count(mixed var) 
     Count the number of elements in a variable (usually an array)  
mixed current(array array_arg) 
     Return the element currently pointed to by the internal array pointer  
mixed end(array array_arg) 
     Advances array argument's internal pointer to the last element and return it  
int extract(array var_array [, int extract_type [, string prefix]]) 
     Imports variables into symbol table from an array  
bool in_array(mixed needle, array haystack [, bool strict]) 
     Checks if the given value exists in the array  
mixed key(array array_arg) 
     Return the key of the element currently pointed to by the internal array pointer  
int krsort(array array_arg [, int sort_flags]) 
     Sort an array reverse by key  
int ksort(array array_arg [, int sort_flags]) 
     Sort an array by key  
mixed max(mixed arg1 [, mixed arg2 [, mixed ...]]) 
     Return the highest value in an array or a series of arguments  
mixed min(mixed arg1 [, mixed arg2 [, mixed ...]]) 
     Return the lowest value in an array or a series of arguments  
void natcasesort(array array_arg) 
     Sort an array using case-insensitive natural sort  
void natsort(array array_arg) 
     Sort an array using natural sort  
mixed next(array array_arg) 
     Move array argument's internal pointer to the next element and return it  
mixed prev(array array_arg) 
     Move array argument's internal pointer to the previous element and return it  
array range(int low, int high) 
     Create an array containing the range of integers from low to high (inclusive)  
mixed reset(array array_arg) 
     Set array argument's internal pointer to the first element and return it  
void rsort(array array_arg [, int sort_flags]) 
     Sort an array in reverse order  
int shuffle(array array_arg) 
     Randomly shuffle the contents of an array  
void sort(array array_arg [, int sort_flags]) 
     Sort an array  
void uasort(array array_arg, string cmp_function) 
     Sort an array with a user-defined comparison function and maintain index association  
void uksort(array array_arg, string cmp_function) 
     Sort an array by keys using a user-defined comparison function  
void usort(array array_arg, string cmp_function) 
     Sort an array by values using a user-defined comparison function  
# php4/ext/standard/assert.c
mixed assert_options(int what [, mixed value]) 
     Set/get the various assert flags  
int assert(string|bool assertion) 
     Checks if assertion is false  
# php4/ext/standard/base64.c
string base64_decode(string str) 
     Decodes string using MIME base64 algorithm  
string base64_encode(string str) 
     Encodes string using MIME base64 algorithm  
# php4/ext/standard/basic_functions.c
mixed call_user_func_array(string function_name, array parameters) 
     Call a user function which is the first parameter with the arguments contained in array  
mixed call_user_func(string function_name [, mixed parmeter] [, mixed ...]) 
     Call a user function which is the first parameter  
mixed call_user_method_array(string method_name, mixed object, array params) 
     Call a user method on a specific object or class using a parameter array  
mixed call_user_method(string method_name, mixed object [, mixed parameter] [, mixed ...]) 
     Call a user method on a specific object or class  
int connection_aborted(void) 
     Returns true if client disconnected  
int connection_status(void) 
     Returns the connection status bitfield  
mixed constant(string const_name) 
     Given the name of a constant this function will return the constants associated value  
double doubleval(mixed var) 
     Get the double-precision value of a variable  
int error_log(string message, int message_type [, string destination] [, string extra_headers]) 
     Send an error message somewhere  
bool extension_loaded(string extension_name) 
     Returns true if the named extension is loaded  
void flush(void) 
     Flush the output buffer  
string get_cfg_var(string option_name) 
     Get the value of a PHP configuration option  
string get_current_user(void) 
     Get the name of the owner of the current PHP script  
string getenv(string varname) 
     Get the value of an environment variable  
array get_extension_funcs(string extension_name) 
     Returns an array with the names of functions belonging to the named extension  
array get_loaded_extensions(void) 
     Return an array containing names of loaded extensions  
int get_magic_quotes_gpc(void) 
     Get the current active configuration setting of magic_quotes_gpc  
int get_magic_quotes_runtime(void) 
     Get the current active configuration setting of magic_quotes_runtime  
int getprotobyname(string name) 
     Returns protocol number associated with name as per /etc/protocols  
string getprotobynumber(int proto) 
     Returns protocol name associated with protocol number proto  
int getservbyname(string service, string protocol) 
     Returns port associated with service. Protocol must be "tcp" or "udp".  
string getservbyport(int port, string protocol) 
     Returns service name associated with port. Protocol must be "tcp" or "udp".  
string gettype(mixed var) 
     Returns the type of the variable  
boolean highlight_file(string file_name) 
     Syntax highlight a source file  
boolean highlight_string(string string) 
     Syntax highlight a string  
int ignore_user_abort(boolean value) 
     Set whether we want to ignore a user abort event or not  
string ini_get(string varname) 
     Get a configuration option  
string ini_restore(string varname) 
     Restore the value of a configuration option specified by varname  
string ini_set(string varname, string newvalue) 
     Set a configuration option, returns false on error and the old value of the configuration option on success  
int intval(mixed var [, int base]) 
     Get the integer value of a variable using the optional base for the conversion  
string ip2long(string ip_address) 
     Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address  
bool is_array(mixed var) 
     Returns true if variable is an array  
bool is_bool(mixed var) 
     Returns true if variable is a boolean  
bool is_double(mixed var) 
     Returns true if variable is a double  
bool is_long(mixed var) 
     Returns true if variable is a long (integer)  
bool is_null(mixed var) 
     Returns true if variable is null  
bool is_numeric(mixed value) 
     Returns true if value is a number or a numeric string  
bool is_object(mixed var) 
     Returns true if variable is an object  
bool is_resource(mixed var) 
     Returns true if variable is a resource  
bool is_scalar (mixed value) 
     Returns true if value is a scalar  
bool is_string(mixed var) 
     Returns true if variable is a string  
boolean is_uploaded_file(string path) 
     check if file was created by rfc1867 upload   
string long2ip(int proper_address) 
     Converts an (IPv4) Internet network address into a string in Internet standard dotted format  
boolean move_uploaded_file(string path, string new_path) 
     move a file if and only if it was created by an upload  
void parse_ini_file(string filename [, boolean process_sections]) 
     Parse configuration file  
string print_r(mixed var) 
     Prints out information about the specified variable  
void putenv(string setting) 
     Set the value of an environment variable  
void register_shutdown_function(string function_name) 
     Register a user-level function to be called on request termination  
void register_tick_function(string function_name [, mixed arg [, ... ]]) 
     Registers a tick callback function  
int set_magic_quotes_runtime(int new_setting) 
     Set the current active configuration setting of magic_quotes_runtime and return previous  
int settype(mixed var, string type) 
     Set the type of the variable  
void sleep(int seconds) 
     Delay for a given number of seconds  
string strval(mixed var) 
     Get the string value of a variable  
void unregister_tick_function(string function_name) 
     Unregisters a tick callback function  
void usleep(int micro_seconds) 
     Delay for a given number of micro seconds  
# php4/ext/standard/browscap.c
object get_browser(string browser_name) 
     Get information about the capabilities of a browser  
# php4/ext/standard/crc32.c
string crc32(string str) 
     Calculate the crc32 polynomial of a string  
# php4/ext/standard/crypt.c
string crypt(string str [, string salt]) 
     Encrypt a string  
# php4/ext/standard/cyr_convert.c
string convert_cyr_string(string str, string from, string to) 
     Convert from one Cyrillic character set to another  
# php4/ext/standard/datetime.c
bool checkdate(int month, int day, int year) 
     Returns true(1) if it is a valid date in gregorian calendar  
string date(string format [, int timestamp]) 
     Format a local time/date  
array getdate([int timestamp]) 
     Get date/time information  
string gmdate(string format [, int timestamp]) 
     Format a GMT/UTC date/time  
int gmmktime(int hour, int min, int sec, int mon, int day, int year) 
     Get UNIX timestamp for a GMT date  
string gmstrftime(string format [, int timestamp]) 
     Format a GMT/UCT time/date according to locale settings  
array localtime([int timestamp [, bool associative_array]]) 
     Returns the results of the C system call localtime as an associative array if the associative_array argument is set to 1 other wise it is a regular array  
int mktime(int hour, int min, int sec, int mon, int day, int year) 
     Get UNIX timestamp for a date  
string strftime(string format [, int timestamp]) 
     Format a local time/date according to locale settings  
int strtotime(string time, int now) 
     Convert string representation of date and time to a timestamp  
int time(void) 
     Return current UNIX timestamp  
# php4/ext/standard/dir.c
int chdir(string directory) 
     Change the current directory  
int chroot(string directory) 
     Change root directory  
void closedir([int dir_handle]) 
     Close directory connection identified by the dir_handle  
class dir(string directory) 
     Directory class with properties, handle and class and methods read, rewind and close  
string getcwd(void) 
     Gets the current directory  
int opendir(string path) 
     Open a directory and return a dir_handle  
string readdir([int dir_handle]) 
     Read directory entry from dir_handle  
void rewinddir([int dir_handle]) 
     Rewind dir_handle back to the start  
# php4/ext/standard/dl.c
int dl(string extension_filename) 
     Load a PHP extension at runtime  
# php4/ext/standard/dns.c
int checkdnsrr(string host [, string type]) 
     Check DNS records corresponding to a given Internet host name or IP address  
string gethostbyaddr(string ip_address) 
     Get the Internet host name corresponding to a given IP address  
array gethostbynamel(string hostname) 
     Return a list of IP addresses that a given hostname resolves to.  
string gethostbyname(string hostname) 
     Get the IP address corresponding to a given Internet host name  
int getmxrr(string hostname, array mxhosts [, array weight]) 
     Get MX records corresponding to a given Internet host name  
# php4/ext/standard/exec.c
string escapeshellarg(string arg) 
     Quote and escape an argument for use in a shell command  
string escapeshellcmd(string command) 
     Escape shell metacharacters  
int exec(string command [, array output [, int return_value]]) 
     Execute an external program  
void passthru(string command [, int return_value]) 
     Execute an external program and display raw output  
string shell_exec(string cmd) 
     Use pclose() for FILE* that has been opened via popen()  
int system(string command [, int return_value]) 
     Execute an external program and display output  
# php4/ext/standard/file.c
int copy(string source_file, string destination_file) 
     Copy a file  
int fclose(int fp) 
     Close an open file pointer  
int feof(int fp) 
     Test for end-of-file on a file pointer  
int fflush(int fp) 
     Flushes output  
string fgetc(int fp) 
     Get a character from file pointer  
array fgetcsv(int fp, int length [, string delimiter]) 
     Get line from file pointer and parse for CSV fields  
string fgets(int fp, int length) 
     Get a line from file pointer  
string fgetss(int fp, int length [, string allowable_tags]) 
     Get a line from file pointer and strip HTML tags  
array file(string filename [, int use_include_path]) 
     Read entire file into an array  
bool flock(int fp, int operation [, int wouldblock]) 
     Portable file locking  
int fopen(string filename, string mode [, int use_include_path]) 
     Open a file or a URL and return a file pointer  
int fpassthru(int fp) 
     Output all remaining data from a file pointer  
string fread(int fp, int length) 
     Binary-safe file read  
mixed fscanf(string str, string format [, string ...]) 
     Implements a mostly ANSI compatible fscanf()  
int fseek(int fp, int offset [, int whence]) 
     Seek on a file pointer  
int fstat(int fp) 
     Stat() on a filehandle  
int ftell(int fp) 
     Get file pointer's read/write position  
int ftruncate (int fp, int size) 
     Truncate file to 'size' length  
int fwrite(int fp, string str [, int length]) 
     Binary-safe file write  
array get_meta_tags(string filename [, int use_include_path]) 
     Extracts all meta tag content attributes from a file and returns an array  
int mkdir(string pathname, int mode) 
     Create a directory  
int pclose(int fp) 
     Close a file pointer opened by popen()  
int popen(string command, string mode) 
     Execute a command and open either a read or a write pipe to it  
int readfile(string filename [, int use_include_path]) 
     Output a file or a URL  
string realpath(string path) 
     Return the resolved path  
int rename(string old_name, string new_name) 
     Rename a file  
int rewind(int fp) 
     Rewind the position of a file pointer  
int rmdir(string dirname) 
     Remove a directory  
int set_file_buffer(int fp, int buffer) 
     Set file write buffer  
int set_socket_blocking(int socket_descriptor, int mode) 
     Set blocking/non-blocking mode on a socket  
array socket_get_status(resource socket_descriptor) 
     Return an array describing socket status  
bool socket_set_timeout(int socket_descriptor, int seconds, int microseconds) 
     Set timeout on socket read to seconds + microseonds  
string tempnam(string dir, string prefix) 
     Create a unique filename in a directory  
int tmpfile(void) 
     Create a temporary file that will be deleted automatically after use  
int umask([int mask]) 
     Return or change the umask  
int unlink(string filename) 
     Delete a file  
# php4/ext/standard/filestat.c
bool chgrp(string filename, mixed group) 
     Change file group  
bool chmod(string filename, int mode) 
     Change file mode  
bool chown (string filename, mixed user) 
     Change file owner  
void clearstatcache(void) 
     Clear file stat cache  
double diskfreespace(string path) 
     Get free diskspace for filesystem that path is on  
int fileatime(string filename) 
     Get last access time of file  
int filectime(string filename) 
     Get inode modification time of file  
bool file_exists(string filename) 
     Returns true if filename exists  
int filegroup(string filename) 
     Get file group  
int fileinode(string filename) 
     Get file inode  
int filemtime(string filename) 
     Get last modification time of file  
int fileowner(string filename) 
     Get file owner  
int fileperms(string filename) 
     Get file permissions  
int filesize(string filename) 
     Get file size  
string filetype(string filename) 
     Get file type  
int is_dir(string filename) 
     Returns true if file is directory  
int is_executable(string filename) 
     Returns true if file is executable  
int is_file(string filename) 
     Returns true if file is a regular file  
int is_link(string filename) 
     Returns true if file is symbolic link  
int is_readable(string filename) 
     Returns true if file can be read  
int is_writable(string filename) 
     Returns true if file can be written  
array lstat(string filename) 
     Give information about a file or symbolic link  
array stat(string filename) 
     Give information about a file  
bool touch(string filename [, int time]) 
     Set modification time of file  
# php4/ext/standard/formatted_print.c
int printf(string format [, mixed arg1 [, mixed ...]]) 
     Output a formatted string  
string sprintf(string format [, mixed arg1 [, mixed ...]]) 
     Return a formatted string  
# php4/ext/standard/fsock.c
int fsockopen(string hostname, int port [, int errno [, string errstr [, double timeout]]]) 
     Open Internet or Unix domain socket connection  
int pfsockopen(string hostname, int port [, int errno [, string errstr [, double timeout]]]) 
     Open persistent Internet or Unix domain socket connection  
# php4/ext/standard/head.c
int headers_sent(void) 
     Return true if headers have already been sent, false otherwise  
void header(string header[, bool replace]) 
     Send a raw HTTP header  
void setcookie(string name [, string value [, int expires [, string path [, string domain [, string secure]]]]]) 
     Send a cookie  
# php4/ext/standard/html.c
array get_html_translation_table([int table [, int quote_style]]) 
     Returns the internal translation table used by htmlspecialchars and htmlentities  
string htmlentities(string string [, int quote_style]) 
     Convert all applicable characters to HTML entities  
string htmlspecialchars(string string [, int quote_style]) 
     Convert special characters to HTML entities  
# php4/ext/standard/image.c
array getimagesize(string imagefile [, array info]) 
     Get the size of an image as 4-element array  
# php4/ext/standard/info.c
void phpcredits([int flag]) 
     Prints the list of people who've contributed to the PHP project  
string php_egg_logo_guid(void) 
     Return the special ID used to request the PHP logo in phpinfo screens 
void phpinfo([int what]) 
     Output a page of useful information about PHP and the current request  
string php_logo_guid(void) 
     Return the special ID used to request the PHP logo in phpinfo screens 
string php_sapi_name(void) 
     Return the current SAPI module name  
string php_uname(void) 
     Return information about the system PHP was built on  
string phpversion(void) 
     Return the current PHP version  
string zend_logo_guid(void) 
     Return the special ID used to request the Zend logo in phpinfo screens 
# php4/ext/standard/iptc.c
array iptcembed(string iptcdata, string jpeg_file_name [, int spool]) 
     Embed binary IPTC data into a JPEG image.  
array iptcparse(string iptcdata) 
     Parse binary IPTC-data into associative array  
# php4/ext/standard/lcg.c
double lcg_value() 
     Returns a value from the combined linear congruential generator  
# php4/ext/standard/levenshtein.c
int levenshtein(string str1, string str2) 
     Calculate Levenshtein distance between two strings  
# php4/ext/standard/link.c
int linkinfo(string filename) 
     Returns the st_dev field of the UNIX C stat structure describing the link  
int link(string target, string link) 
     Create a hard link  
string readlink(string filename) 
     Return the target of a symbolic link  
int symlink(string target, string link) 
     Create a symbolic link  
# php4/ext/standard/mail.c
int ezmlm_hash(string addr) 
     Calculate EZMLM list hash value.  
int mail(string to, string subject, string message [, string additional_headers [, string additional_parameters]]) 
     Send an email message  
# php4/ext/standard/math.c
int abs(int number) 
     Return the absolute value of the number  
double acos(double number) 
     Return the arc cosine of the number in radians  
double asin(double number) 
     Returns the arc sine of the number in radians  
double atan2(double y, double x) 
     Returns the arc tangent of y/x, with the resulting quadrant determined by the signs of y and x  
double atan(double number) 
     Returns the arc tangent of the number in radians  
string base_convert(string number, int frombase, int tobase) 
     Converts a number in a string from any base <= 36 to any base <= 36.   
int bindec(string binary_number) 
     Returns the decimal equivalent of the binary number  
double ceil(double number) 
     Returns the next highest integer value of the number  
double cos(double number) 
     Returns the cosine of the number in radians  
string decbin(int decimal_number) 
     Returns a string containing a binary representation of the number  
string dechex(int decimal_number) 
     Returns a string containing a hexadecimal representation of the given number  
string decoct(int decimal_number) 
     Returns a string containing an octal representation of the given number  
double deg2rad(double number) 
     Converts the number in degrees to the radian equivalent  
double exp(double number) 
     Returns e raised to the power of the number  
double floor(double number) 
     Returns the next lowest integer value from the number  
int hexdec(string hexadecimal_number) 
     Returns the decimal equivalent of the hexadecimal number  
double log10(double number) 
     Returns the base-10 logarithm of the number  
double log(double number) 
     Returns the natural logarithm of the number  
string number_format(double number [, int num_decimal_places [, string dec_seperator, string thousands_seperator]]) 
     Formats a number with grouped thousands  
int octdec(string octal_number) 
     Returns the decimal equivalent of an octal string  
double pi(void) 
     Returns an approximation of pi  
double pow(double base, double exponent) 
     Returns base raised to the power of exponent  
double rad2deg(double number) 
     Converts the radian number to the equivalent number in degrees  
double round(double number [, int precision]) 
     Returns the number rounded to specified precision.  
double sin(double number) 
     Returns the sine of the number in radians  
double sqrt(double number) 
     Returns the square root of the number  
double tan(double number) 
     Returns the tangent of the number in radians  
# php4/ext/standard/md5.c
string md5(string str) 
     Calculate the md5 hash of a string  
# php4/ext/standard/metaphone.c
string metaphone(string text, int phones) 
     Break english phrases down into their phonemes  
# php4/ext/standard/microtime.c
array getrusage([int who]) 
     Returns an array of usage statistics  
array gettimeofday(void) 
     Returns the current time as array  
string microtime(void) 
     Returns a string containing the current time in seconds and microseconds  
# php4/ext/standard/output.c
void ob_end_clean(void) 
     Clean (erase) the output buffer, and turn off output buffering  
void ob_end_flush(void) 
     Flush (send) the output buffer, and turn off output buffering  
string ob_get_contents(void) 
     Return the contents of the output buffer  
string ob_get_length(void) 
     Return the length of the output buffer  
void ob_implicit_flush([int flag]) 
     Turn implicit flush on/off and is equivalent to calling flush() after every output call  
void ob_start([ string user_function [, int chunk_size]]) 
     Turn on Output Buffering (specifying an optional output handler).  
# php4/ext/standard/pack.c
string pack(string format, mixed arg1 [, mixed arg2 [, mixed ...]]) 
     Takes one or more arguments and packs them into a binary string according to the format argument  
array unpack(string format, string input) 
     Unpack binary string into named array elements according to format argument  
# php4/ext/standard/pageinfo.c
int getlastmod(void) 
     Get time of last page modification  
int getmyinode(void) 
     Get the inode of the current script being parsed  
int getmypid(void) 
     Get current process ID  
int getmyuid(void) 
     Get PHP script owner's UID  
# php4/ext/standard/quot_print.c
string quoted_printable_decode(string str) 
     Convert a quoted-printable string to an 8 bit string  
# php4/ext/standard/rand.c
int getrandmax(void) 
     Returns the maximum value a random number can have  
int mt_getrandmax(void) 
     Returns the maximum value a random number from Mersenne Twister can have  
int mt_rand([int min, int max]) 
     Returns a random number from Mersenne Twister  
void mt_srand(int seed) 
     Seeds Mersenne Twister random number generator  
int rand([int min, int max]) 
     Returns a random number  
void srand(int seed) 
     Seeds random number generator  
# php4/ext/standard/reg.c
string eregi_replace(string pattern, string replacement, string string) 
     Case insensitive replace regular expression  
int eregi(string pattern, string string [, array registers]) 
     Case-insensitive regular expression match  
string ereg_replace(string pattern, string replacement, string string) 
     Replace regular expression  
int ereg(string pattern, string string [, array registers]) 
     Regular expression match  
array spliti(string pattern, string string [, int limit]) 
     Split string into array by regular expression case-insensitive  
array split(string pattern, string string [, int limit]) 
     Split string into array by regular expression  
string sql_regcase(string string) 
     Make regular expression for case insensitive match  
# php4/ext/standard/soundex.c
string soundex(string str) 
     Calculate the soundex key of a string  
# php4/ext/standard/string.c
string addcslashes(string str, string charlist) 
     Escape all chars mentioned in charlist with backslash. It creates octal representations if asked to backslash characters with 8th bit set or with ASCII<32 (except '\n', '\r', '\t' etc...)  
string addslashes(string str) 
     Escape single quote, double quotes and backslash characters in a string with backslashes  
string basename(string path) 
     Return the filename component of the path  
string bin2hex(string data) 
     Converts the binary representation of data to hex  
string chop(string str) 
     Remove trailing whitespace  
string chr(int ascii) 
     Convert ASCII code to a character  
string chunk_split(string str [, int chunklen [, string ending]]) 
     Return split line  
mixed count_chars(string input [, int mode]) 
     Returns info about what characters are used in input  
string dirname(string path) 
     Return the directory name component of the path  
array explode(string separator, string str [, int limit]) 
     Split a string on string separator and return array of components  
string hebrevc(string str [, int max_chars_per_line]) 
     Convert logical Hebrew text to visual text with newline conversion  
string hebrev(string str [, int max_chars_per_line]) 
     Convert logical Hebrew text to visual text  
string implode(array src, string glue) 
     Join array elements placing glue string between items and return one string  
string join(array src, string glue) 
     An alias for implode  
array localeconv( void ) 
     Returns all the information stored in the lconv struct defined     in locale.h based on the currently selected locale  
string ltrim(string str) 
     Strip whitespace from the beginning of a string  
string nl2br(string str) 
     Converts newlines to HTML line breaks  
int ord(string character) 
     Return ASCII value of character  
void parse_str(string encoded_string, [array result]) 
     Parses GET/POST/COOKIE data and sets global variables  
array pathinfo(string path) 
     Return information about a certain string  
string quotemeta(string str) 
     Quote meta characters  
string rtrim(string str) 
     An alias for chop  
string setlocale(mixed category, string locale) 
     Set locale information  
int similar_text(string str1, string str2 [, double percent]) 
     Calculates the similarity between two strings  
mixed sscanf(string str, string format [, string ...]) 
     Implements an ANSI C compatible sscanf  
string strchr(string haystack, string needle) 
     An alias for strstr  
int strcoll(string str1, string str2) 
     Compare two strings using the current locale  
int strcspn(string str, string mask) 
     Find length of initial segment consisting entirely of characters not found in mask  
string stripcslashes(string str) 
     Strip backslashes from a string. Uses C-style conventions  
string stripslashes(string str) 
     Strip backslashes from a string  
string strip_tags(string str [, string allowable_tags]) 
     Strips HTML and PHP tags from a string  
string stristr(string haystack, string needle) 
     Find first occurrence of a string within another, case insensitive  
int strnatcasecmp(string s1, string s2) 
     Returns the result of case-insensitive string comparison using 'natural' algorithm  
int strnatcmp(string s1, string s2) 
     Returns the result of string comparison using 'natural' algorithm  
string str_pad(string input, int pad_length [, string pad_string [, int pad_type]]) 
     Returns input string padded on the left or right to specified length with pad_string  
int strpos(string haystack, string needle [, int offset]) 
     Find position of first occurrence of a string within another  
string strrchr(string haystack, string needle) 
     Find the last occurrence of a character in a string within another  
string str_repeat(string input, int mult) 
     Returns the input string repeat mult times  
mixed str_replace(mixed search, mixed replace, mixed subject) 
     Replace all occurrences of search in haystack with replace  
string strrev(string str) 
     Reverse a string  
int strrpos(string haystack, string needle) 
     Find position of last occurrence of a character in a string within another  
int strspn(string str, string mask) 
     Find length of initial segment consisting entirely of characters found in mask  
string strstr(string haystack, string needle) 
     Find first occurrence of a string within another  
string strtok([string str,] string token) 
     Tokenize a string  
string strtolower(string str) 
     Make a string lowercase  
string strtoupper(string str) 
     Make a string uppercase  
string strtr(string str, string from, string to) 
     Translate characters in str using given translation tables  
int substr_count(string haystack, string needle) 
     Returns the number of times a substring occurs in the string  
string substr_replace(string str, string repl, int start [, int length]) 
     Replace part of a string with another string  
string substr(string str, int start [, int length]) 
     Return part of a string  
string trim(string str) 
     Strip whitespace from the beginning and end of a string  
string ucfirst(string str) 
     Make a string's first character uppercase  
string ucwords(string str) 
     Uppercase the first character of every word in a string  
string wordwrap(string str [, int width [, string break [, int cut]]]) 
     Wrap buffer to selected number of characters using string break char  
# php4/ext/standard/syslog.c
int closelog(void) 
     Close connection to system logger  
void define_syslog_variables(void) 
     Initializes all syslog-related variables  
int openlog(string ident, int option, int facility) 
     Open connection to system logger  
int syslog(int priority, string message) 
     Generate a system log message  
# php4/ext/standard/uniqid.c
string uniqid(string prefix, [bool more_entropy]) 
     Generate a unique id  
# php4/ext/standard/url.c
array parse_url(string url) 
     Parse a URL and return its components  
string rawurldecode(string str) 
     Decodes URL-encodes string  
string rawurlencode(string str) 
     URL-encodes string  
string urldecode(string str) 
     Decodes URL-encoded string  
string urlencode(string str) 
     URL-encodes string  
# php4/ext/standard/var.c
string serialize(mixed variable) 
     Returns a string representation of variable (which can later be unserialized)  
mixed unserialize(string variable_representation) 
     Takes a string representation of variable and recreates it  
void var_dump(mixed var) 
     Dumps a string representation of variable to output  
# php4/ext/swf/swf.c
void swf_actiongeturl(string url, string target) 
     Gets the specified url  
void swf_actiongotoframe(int frame_number) 
     Causes the Flash movie to display the specified frame, frame_number, and then stop.  
void swf_actiongotolabel(string label) 
     Causes the flash movie to display the frame with the given label and then stop  
void swf_actionnextframe(void) 
     Goes foward one frame  
void swf_actionplay(void) 
     Starts playing the Flash movie from the current frame  
void swf_actionprevframe(void) 
     Goes backward one frame  
void swf_actionsettarget(string target) 
     Sets the context for actions  
void swf_actionstop(void) 
     Stops playing the Flash movie at the current frame  
void swf_actiontogglequality(void) 
     Toggles between high and low quality  
void swf_actionwaitforframe(int frame, int skipcount) 
     If the specified frame has not been loaded, skip the specified number of actions in the action list  
void swf_addbuttonrecord(int state, int objid, int depth) 
     Controls the location, appearance and active area of the current button  
void swf_addcolor(double r, double g, double b, double a) 
     Set the global add color to the rgba value specified  
void swf_closefile(void) 
     Close a Shockwave flash file that was opened with swf_openfile  
void swf_definebitmap(int objid, string imgname) 
     Defines a bitmap given the name of a .gif .rgb .jpeg or .fi image. The image will be converted into Flash jpeg or Flash color map format  
void swf_definefont(int fontid, string name) 
     Defines a font. name specifies the PostScript name of the font to use. This font also becomes the current font.   
void swf_defineline(int objid, double x1, double y1, double x2, double y2, double width) 
     Create a line with object id, objid, starting from x1, y1 and going to x2, y2 with width, width  
void swf_definepoly(int obj_id, array coords, int npoints, double width) 
     Define a Polygon from an array of x,y coordinates, coords.  
void swf_definerect(int objid, double x1, double y1, double x2, double y2, double width) 
     Create a rectangle with object id, objid, the upper lefthand coordinate is given by x1, y1 the bottom right coordinate is x2, y2 and with is the width of the line  
void swf_definetext(int objid, string str, int docCenter) 
     defines a text string using the current font, current fontsize and current font slant. If docCenter is 1, the word is centered in x  
void swf_endbutton(void) 
     Complete the definition of the current button  
void swf_enddoaction(void) 
     Ends the list of actions to perform for the current frame  
void swf_endshape(void) 
     Completes the definition of the current shape  
void swf_endsymbol(void) 
     End the current symbol  
void swf_fontsize(double height) 
     Sets the current font's height to the value specified by height  
void swf_fontslant(double slant) 
     Set the current font slant to the angle indicated by slant  
void swf_fonttracking(track) 
     Sets the current font tracking to the specified value, track  
array swf_getbitmapinfo(int bitmapid) 
     Returns an array of information about a bitmap specified by bitmapid  
array swf_getfontinfo(void) 
     Get information about the current font  
int swf_getframe(void) 
     Returns the current frame  
void swf_labelframe(string name) 
     Adds string name to the current frame  
void swf_lookat(double vx, double vy, double vz, double px, double py, double pz, double twist) 
     Defines a viewing transformation by giving the view position vx, vy, vz, and the coordinates of a reference point in the scene at px, py, pz. Twist controls a rotation along the viewer's z axis  
void swf_modifyobject(int depth, int how) 
     Updates the position and/or color of the object  
void swf_mulcolor(double r, double g, double b, double a) 
     Sets the global multiply color to the rgba value specified  
int swf_nextid(void) 
     Returns a free objid  
void swf_oncondition(int transitions) 
     Describes a transition used to trigger an action list  
void swf_openfile(string name, double xsize, double ysize, double framerate, double r, double g, double b) 
     Create a Shockwave Flash file given by name, with width xsize and height ysize at a frame rate of framerate and a background color specified by a red value of r, green value of g and a blue value of b  
void swf_ortho2(double xmin, double xmax, double ymin, double ymax) 
     Defines a 2-D orthographic mapping of user coordinates onto the current viewport  
void swf_ortho(double xmin, double xmax, double ymin, double ymax, double zmin, double zmax) 
     Defines an orthographic mapping of user coordinates onto the current viewport  
void swf_perspective(double fovy, double aspect, double near, double far) 
     Define a perspective projection transformation.  
void swf_placeobject(int objid, int depth) 
     Places the object, objid, in the current frame at depth, depth  
void swf_polarview(double dist, double azimuth, double incidence, double twist) 
     Defines he viewer's position in polar coordinates  
void swf_popmatrix(void) 
     Restore a previous transformation matrix  
void swf_posround(int doit) 
     This enables or disables rounding of the translation when objects are places or moved  
void swf_pushmatrix(void) 
     Push the current transformation matrix onto the stack  
void swf_removeobject(int depth) 
     Removes the object at the specified depth  
void swf_rotate(double angle, string axis) 
     Rotate the current transformation by the given angle about x, y, or z axis. The axis may be 'x', 'y', or 'z'  
void swf_scale(double x, double y, double z) 
     Scale the current transformation  
void swf_setfont(int fontid) 
     Sets fontid to the current font  
void swf_setframe(int frame_number) 
     Set the current frame number to the number given by frame_number  
void swf_shapearc(double x, double y, double r, double ang1, double ang2) 
     Draws a circular arc from ang1 to ang2. The center of the circle is given by x, and y. r specifies the radius of the arc  
void swf_shapecurveto3(double x1, double y1, double x2, double y2, double x3, double y3) 
     Draws a cubic bezier curve starting at the current position using x1, y1 and x2, y2 as off curve control points and using x3,y3 as the end point.  The current position is then sent to x3, y3  
void swf_shapecurveto(double x1, double y1, double x2, double y2) 
     Draws a quadratic bezier curve starting at the current position using x1, y1 as an off curve control point and using x2, y2 as the end point. The current position is then set to x2, y2.  
void swf_shapefillbitmapclip(int bitmapid) 
     Sets the current fill mode to clipped bitmap fill. Pixels from the previously defined bitmapid will be used to fill areas  
void swf_shapefillbitmaptile(int bitmapid) 
     Sets the current fill mode to tiled bitmap fill. Pixels from the previously defined bitmapid will be used to fill areas  
void swf_shapefilloff(void) 
     Turns off filling  
void swf_shapefillsolid(double r, double g, double b, double a) 
     Sets the current fill style to a solid fill with the specified rgba color  
void swf_shapelinesolid(double r, double g, double b, double a, double width) 
     Create a line with color defined by rgba, and a width of width  
void swf_shapelineto(double x, double y) 
     Draws a line from the current position to x,y, the current position is then set to x,y  
void swf_shapemoveto(double x, double y) 
     swf_shapemoveto moves the current position to the given x,y.  
void swf_showframe(void) 
     Finish the current frame  
void swf_startbutton(int objid, int type) 
     Start a button with an object id, objid and a type of either TYPE_MENUBUTTON or TYPE_PUSHBUTTON  
void swf_startdoaction(void) 
     Starts the description of an action list for the current frame  
void swf_startshape(int objid) 
     Initialize a new shape with object id, objid  
void swf_startsymbol(int objid) 
     Create a new symbol with object id, objid  
void swf_textwidth(string str) 
     Calculates the width of a string, str, using the current fontsize & current font  
void swf_translate(double x, double y, double z) 
     Translate the current transformation  
void swf_viewport(double xmin, double xmax, double ymin, double ymax) 
     Selects an area on the drawing surface for future drawing  
# php4/ext/sybase/php_sybase_db.c
int sybase_affected_rows([int link_id]) 
      Get number of affected rows in last query  
bool sybase_close([int link_id]) 
     Close Sybase connection  
int sybase_connect([string host [, string user [, string password [, string charset]]]]) 
     Open Sybase server connection  
bool sybase_data_seek(int result, int offset) 
     Move internal row pointer  
array sybase_fetch_array(int result) 
     Fetch row as array  
object sybase_fetch_field(int result [, int offset]) 
     Get field information  
object sybase_fetch_object(int result) 
     Fetch row as object  
array sybase_fetch_row(int result) 
     Get row as enumerated array  
bool sybase_field_seek(int result, int offset) 
     Set field offset  
bool sybase_free_result(int result) 
     Free result memory  
string sybase_get_last_message(void) 
     Returns the last message from server (over min_message_severity)  
void sybase_min_error_severity(int severity) 
     Sets the minimum error severity  
void sybase_min_message_severity(int severity) 
     Sets the minimum message severity  
int sybase_num_fields(int result) 
     Get number of fields in result  
int sybase_num_rows(int result) 
     Get number of rows in result  
int sybase_pconnect([string host [, string user [, string password [, string charset]]]]) 
     Open persistent Sybase connection  
int sybase_query(string query [, int link_id]) 
     Send Sybase query  
string sybase_result(int result, int row, mixed field) 
     Get result data  
bool sybase_select_db(string database [, int link_id]) 
     Select Sybase database  
# php4/ext/sybase_ct/php_sybase_ct.c
int sybase_affected_rows([int link_id]) 
     Get number of affected rows in last query  
bool sybase_close([int link_id]) 
     Close Sybase connection  
int sybase_connect([string host [, string user [, string password [, string charset]]]]) 
     Open Sybase server connection  
bool sybase_data_seek(int result, int offset) 
     Move internal row pointer  
array sybase_fetch_array(int result) 
     Fetch row as array  
object sybase_fetch_field(int result [, int offset]) 
     Get field information  
object sybase_fetch_object(int result) 
     Fetch row as object  
array sybase_fetch_row(int result) 
     Get row as enumerated array  
bool sybase_field_seek(int result, int offset) 
     Set field offset  
bool sybase_free_result(int result) 
     Free result memory  
string sybase_get_last_message(void) 
     Returns the last message from server (over min_message_severity)  
void sybase_min_client_severity(int severity) 
     Sets minimum client severity  
void sybase_min_server_severity(int severity) 
     Sets minimum server severity  
int sybase_num_fields(int result) 
     Get number of fields in result  
int sybase_num_rows(int result) 
     Get number of rows in result  
int sybase_pconnect([string host [, string user [, string password [, string charset]]]]) 
     Open persistent Sybase connection  
int sybase_query(string query [, int link_id]) 
     Send Sybase query  
string sybase_result(int result, int row, mixed field) 
     Get result data  
bool sybase_select_db(string database [, int link_id]) 
     Select Sybase database  
# php4/ext/sysvsem/sysvsem.c
int sem_acquire(int id) 
     Acquires the semaphore with the given id, blocking if necessary  
int sem_get(int key [, int max_acquire [, int perm]]) 
     Return an id for the semaphore with the given key, and allow max_acquire (default 1) processes to acquire it simultaneously  
int sem_release(int id) 
     Releases the semaphore with the given id  
# php4/ext/sysvshm/sysvshm.c
int shm_attach(int key [, int memsize [, int perm]]) 
     Creates or open a shared memory segment  
int shm_detach(int shm_identifier) 
     Disconnects from shared memory segment  
mixed shm_get_var(int id, int variable_key) 
     Returns a variable from shared memory  
int shm_put_var(int shm_identifier, int variable_key, mixed variable) 
     Inserts or updates a variable in shared memory  
int shm_remove(int shm_identifier) 
     Removes shared memory from Unix systems  
int shm_remove_var(int id, int variable_key) 
     Removes variable from shared memory  
# php4/ext/vpopmail/php_vpopmail.c
bool vpopmail_add_alias_domain_ex(string olddomain, string newdomain) 
     Add alias to an existing virtual domain  
bool vpopmail_add_alias_domain(string domain, string aliasdomain) 
     Add an alias for a virtual domain  
bool vpopmail_add_domain_ex(string domain, string passwd [, string quota [, string bounce [, bool apop]]]) 
     Add a new virtual domain  
bool vpopmail_add_domain(string domain, string dir, int uid, int gid) 
     Add a new virtual domain  
bool vpopmail_add_user(string user, string domain, string password[, string gecos[, bool apop]]) 
     Add a new user to the specified virtual domain  
bool vpopmail_auth_user(string user, string domain, string password[, string apop]) 
     Attempt to validate a username/domain/password. Returns true/false  
bool vpopmail_del_domain_ex(string domain) 
     Delete a virtual domain  
bool vpopmail_del_domain(string domain) 
     Delete a virtual domain  
bool vpopmail_del_user(string user, string domain) 
     Delete a user from a virtual domain  
string vpopmail_error(void) 
     Attempt to validate a username/domain/password. Returns true/false  
bool vpopmail_passwd(string user, string domain, string password) 
     Change a virtual user's password  
bool vpopmail_set_user_quota(string user, string domain, string quota) 
     Sets a virtual user's quota  
# php4/ext/wddx/wddx.c
int wddx_add_vars(int packet_id [, mixed var_names [, mixed ...]]) 
     Serializes given variables and adds them to packet given by packet_id  
mixed wddx_deserialize(string packet)  
     Deserializes given packet and returns a PHP value  
string wddx_packet_end(int packet_id) 
     Ends specified WDDX packet and returns the string containing the packet  
int wddx_packet_start([string comment]) 
     Starts a WDDX packet with optional comment and returns the packet id  
string wddx_serialize_value(mixed var [, string comment]) 
     Creates a new packet and serializes the given value  
string wddx_serialize_vars(mixed var_name [, mixed ...]) 
     Creates a new packet and serializes given variables into a struct  
# php4/ext/xml/xml.c
string utf8_decode(string data)  
     Converts a UTF-8 encoded string to ISO-8859-1  
string utf8_encode(string data)  
     Encodes an ISO-8859-1 string to UTF-8  
string xml_error_string(int code) 
     Get XML parser error string  
int xml_get_current_byte_index(int pind)  
     Get current byte index for an XML parser  
int xml_get_current_column_number(int pind) 
     Get current column number for an XML parser  
int xml_get_current_line_number(int pind)  
     Get current line number for an XML parser  
int xml_get_error_code(int pind)  
     Get XML parser error code  
int xml_parse_into_struct(int pind, string data, array &struct, array &index)  
     Parsing a XML document  
int xml_parse(int pind, string data [, int isFinal])  
     Start parsing an XML document  
int xml_parser_create_ns([string encoding][, string sep])  
     Create an XML parser  
int xml_parser_create([string encoding])  
     Create an XML parser  
int xml_parser_free(int pind)  
     Free an XML parser  
int xml_parser_get_option(int pind, int option)  
     Get options from an XML parser  
int xml_parser_set_option(int pind, int option, mixed value)  
     Set options in an XML parser  
int xml_set_character_data_handler(int pind, string hdl)  
     Set up character data handler  
int xml_set_default_handler(int pind, string hdl)  
     Set up default handler  
int xml_set_element_handler(int pind, string shdl, string ehdl)  
     Set up start and end element handlers  
int xml_set_end_namespace_decl_handler(int pind, string hdl)  
     Set up character data handler  
int xml_set_external_entity_ref_handler(int pind, string hdl)  
     Set up external entity reference handler  
int xml_set_notation_decl_handler(int pind, string hdl)  
     Set up notation declaration handler  
int xml_set_object(int pind, object &obj)  
     Set up object which should be used for callbacks  
int xml_set_processing_instruction_handler(int pind, string hdl)  
     Set up processing instruction (PI) handler  
int xml_set_start_namespace_decl_handler(int pind, string hdl)  
     Set up character data handler  
int xml_set_unparsed_entity_decl_handler(int pind, string hdl)  
     Set up unparsed entity declaration handler  
# php4/ext/yaz/php_yaz.c
string yaz_addinfo(int id) 
     Return additional info for last error (empty string if none)  
int yaz_ccl_conf(int id, array package) 
     Configure CCL package  
int yaz_ccl_parse(int id, string query, array res) 
     Parse a CCL query  
int yaz_ccl_parse(int id, string query, array res) 
     Parse a CCL query  
int yaz_close(int id) 
     Destory and close target  
int yaz_connect(string zurl [, string user [, string group, string pass]]) 
     Create target with given zurl. Returns positive id if successful.  
int yaz_element(int id, string elementsetname) 
     Set Element-Set-Name for retrieval  
int yaz_errno(int id) 
     Return last error number (>0 for bib-1 diagnostic, <0 for other error, 0 for no error  
string yaz_error(int id) 
     Return last error message  
int yaz_hits(int id) 
     Return number of hits (result count) for last search  
int yaz_itemorder(int id, array package) 
     Sends Item Order request  
int yaz_present(int id) 
     Retrieve records  
int yaz_range(int id, int start, int number) 
     Set result set start point and number of records to request  
string yaz_record(int id, int pos, string type) 
     Return record information at given result set position  
int yaz_scan(int id, type, query [, flags]) 
     Sends Scan Request  
int yaz_scan_result(int id, array options) 
     Inspects Scan Result  
int yaz_search(int id, string type, string query) 
     Specify query of type for search - returns true if successful  
int yaz_syntax(int id, string syntax) 
     Set record syntax for retrieval  
int yaz_wait() 
     Process all outstanding events.  
# php4/ext/yp/yp.c
void yp_all(string domain, string map, string callback) 
     Traverse the map and call a function on each entry  
array yp_cat(string domain, string map) 
     Return an array containing the entire map  
int yp_errno() 
     Returns the error code from the last call or 0 if no error occured  
string yp_err_string(int errorcode) 
     Returns the corresponding error string for the given error code  
array yp_first(string domain, string map) 
     Returns the first key as array with $var[$key] and the the line as the value  
string yp_get_default_domain(void) 
     Returns the domain or false  
string yp_master(string domain, string map) 
     Returns the machine name of the master  
string yp_match(string domain, string map, string key) 
     Returns the matched line or false  
array yp_next(string domain, string map, string key) 
     Returns an array with $var[$key] and the the line as the value  
int yp_order(string domain, string map)             
     Returns the order number or false  
# php4/ext/zlib/zlib.c
int gzclose(int zp) 
     Close an open .gz-file pointer  
string gzcompress(string data [, int level])  
     Gzip-compress a string  
string gzdeflate(string data [, int level])  
     Gzip-compress a string  
int gzeof(int zp) 
     Test for end-of-file on a .gz-file pointer  
array gzfile(string filename [, int use_include_path]) 
     Read und uncompress entire .gz-file into an array  
string gzgetc(int zp) 
     Get a character from .gz-file pointer  
string gzgets(int zp, int length) 
     Get a line from .gz-file pointer  
string gzgetss(int zp, int length [, string allowable_tags]) 
     Get a line from file pointer and strip HTML tags  
string gzinflate(string data, int length)  
     Unzip a gzip-compressed string  
int gzopen(string filename, string mode [, int use_include_path]) 
     Open a .gz-file and return a .gz-file pointer  
int gzpassthru(int zp) 
     Output all remaining data from a .gz-file pointer  
int gzputs(int zp, string str [, int length]) 
     An alias for gzwrite  
string gzread(int zp, int length) 
     Binary-safe file read  
int gzrewind(int zp) 
     Rewind the position of a .gz-file pointer  
int gzseek(int zp, int offset) 
     Seek on a file pointer  
int gztell(int zp) 
     Get .gz-file pointer's read/write position  
string gzuncompress(string data, int length)  
     Unzip a gzip-compressed string  
int gzwrite(int zp, string str [, int length]) 
     Binary-safe .gz-file write  
int readgzfile(string filename [, int use_include_path]) 
     Output a .gz-file  
# php4/ext/zziplib/zziplib.c
void zzip_closedir(resource zzipp) 
     Close a Zip archive  
void zzip_close(resource zzip_ent) 
     Close a zzip entry  
int zzip_entry_compressedsize(resource zzip_entry) 
     Return the compressed size of a ZZip entry  
string zzip_entry_compressionmethod(resource zzip_entry) 
     Return a string containing the compression method used on a particular entry  
int zzip_entry_filesize(resource zzip_entry) 
     Return the actual filesize of a ZZip entry  
string zzip_entry_name(resource zzip_entry) 
     Return the name given a ZZip entry  
resource zzip_opendir(string filename) 
     Open a new zzip archive for reading  
bool zzip_open(resource zzip_dp, resource zzip_entry, string mode) 
     Open a Zip File, pointed by the resource entry  
resource zzip_readdir(resource zzipp) 
     Returns the next file in the archive  
string zzip_read(resource zzip_ent) 
     Read X bytes from an opened zzip entry  
# php4/ext/cybermut/cybermut.c
string confirm_cybermut_compiled(string arg) 
     Return a string to confirm that the module is compiled in  
string cybermut_creerformulairecm(string url_CM, string version, string TPE, string montant, string ref_commande, string texte_libre, string url_retour, string url_retour_ok, string url_retour_err, string langue, string code_societe, string texte_bouton) 
     Return a string containing source HTML of the form of request for payment.     This result corresponds to the last parameter "formulaire" of the original function      which was removed  
string cybermut_creerreponsecm(string phrase) 
     Return a string containing the message of acknowledgement of delivery   	(headers and body of the message).     This result corresponds to the last parameter "reponse" of the original function     which was removed.  
bool cybermut_testmac(string code_MAC, string version, string TPE, string cdate, string montant, string ref_commande, string texte_libre, string code_retour) 
     Return a boolean attesting that the authentification proceeded well      true : the received message is authenticated      false: if not  
# php4/ext/dbx/dbx.c
bool dbx_close(dbx_handle_object dbx_handle)
 
     Returns success or failure  
long dbx_cmp_asc(array row_x, array row_y, string columnname)
 
     returns row_x[columnname] - row_y[columnname], converted to -1, 0 or 1
   
long dbx_cmp_desc(array row_x, array row_y, string columnname)
 
     returns row_y[columnname] - row_x[columnname], converted to -1, 0 or 1
   
dbx_handle_object dbx_connect(string module_name, string host, string db, string username, string password [, bool persistent])
 
     returns a dbx_handle_object on success
     returns 0 on failure
   
void dbx_error()
 
     Returns success or failure  
data[rowinfo+rows][colinfo+cols] dbx_query(dbx_handle_object dbx_handle, string sql_statement [, long flags])
 
     Returns results combined with query-information or false for failure or true for success on execution query
     flags parameters is not implemented yet and if specified generates a WRONG_PARAM_COUNT 
     it will be used to indicate what column info should be returned, and if fieldnames should be used
     as assoc column indicators in the result-set  
long dbx_sort(dbx_result_object stn_search_keywords_result, string compare_function_name)
 
     returns 0 on failure, 1 on success
   
# php4/ext/fbsql/php_fbsql.c
int fbsql_affected_rows([int link_identifier]) 
  	 
int fbsql_change_user(string user, string password [, string database [, int link_identifier]]); 
  	 
int fbsql_close([int link_identifier]) 
  	 
int fbsql_connect([string hostname [, string username [, string [password]]]); 
  	 
int fbsql_create_db([string database_name [, int link_identifier]]) 
  	 
string fbsql_database(int link_identifier [, string database]) 
  	 
string fbsql_database_password(int link_identifier [, string database_password]) 
  	 
int fbsql_data_seek(int result, int row_number) 
  	 
int fbsql_db_query(string database_name, string query [, int link_identifier]) 
  	 
int fbsql_drop_db(string database_name [, int link_identifier]) 
  	 
int fbsql_errno([int link_identifier]) 
  	 
string fbsql_error([int link_identifier]) 
  	 
array fbsql_fetch_array(int result [, int result_type]) 
     Fetch a result row as an array (associative, numeric or both) 
object fbsql_fetch_assoc(int result) 
  	 
object fbsql_fetch_field(int result [, int field_offset]) 
  	 
array fbsql_fetch_lengths(int result) 
  	 
object fbsql_fetch_object(int result [, int result_type]) 
  	 
array fbsql_fetch_row(int result) 
  	 
string fbsql_field_flags(int result, int field_index) 
  	 
string fbsql_field_lene(int result, int field_index) 
  	 
int fbsql_field_seek(int result, int field_offset) 
  	 
string fbsql_field_table(int result, int field_index) 
  	 
string fbsql_field_type(int result, int field_index) 
  	 
int fbsql_free_result(int result) 
  	 
int fbsql_generate_warnings([int flag]); 
  	 
string fbsql_hostname(int link_identifier [, string host_name]) 
  	 
int fbsql_insert_id([int link_identifier]) 
  	 
bool fbsql_list_autocommit(int link_identifier [, bool OnOff]) 
  	 
int fbsql_list_commit([int link_identifier]) 
  	 
int fbsql_list_dbs([int link_identifier]) 
  	 
int fbsql_list_fields(string database_name, string table_name [, int link_identifier]) 
  	 
int fbsql_list_rollback([int link_identifier]) 
  	 
int fbsql_list_tables(string database, int [link_identifier]); 
  	 
int fbsql_next_result(int result) 
  	 
int fbsql_num_fields(int result) 
  	 
int fbsql_num_rows(int result) 
  	 
int fbsql_pconnect([string hostname [, string username [, string [password]]]); 
  	 
int fbsql_query(string query [, int link_identifier]) 
  	 
int fbsql_result(int result, int row [, mixed field]) 
  	 
int fbsql_select_db([string database_name [, int link_identifier]])    
  	 
int fbsql_start_db(string database_name [, int link_identifier]) 
  	 
int fbsql_stop_db(string database_name [, int link_identifier]) 
  	 
string fbsql_username([string password]) 
  	 
string fbsql_username([string username]) 
  	 
string mysql_field_name(int result, int field_index) 
  	 
# php4/ext/notes/php_notes.c
array notes_body(string server, string mailbox, int msg_number) 
     Open the message msg_number in the specified mailbox on the specified server (leave server  	blank for local) and returns an array of body text lines.  
string notes_copy_db(string from_database_name, string to_database_name [, title]) 
     Create a note using form form_name  
bool notes_create_db(string database_name) 
     Create a Lotus Notes database  
string notes_create_note(string database_name, string form_name) 
     Create a note using form form_name  
bool notes_drop_db(string database_name) 
     Drop a Lotus Notes database  
bool notes_find_note(string database_name, string name [, string type] ) 
     Returns a note id found in database_name. Specify the name of the note. Leaving type blank  	will default to all, otherwise specify:  	  		FORM  		VIEW  		FILTER  		FIELD  		 
object notes_header_info(string server, string mailbox, int msg_number) 
     Open the message msg_number in the specified mailbox on the specified server (leave server  	blank for local).  	  	Elements:    		originator (Contains orignal message sender. Relevant only when forwarded messages)  		to  		cc  		bcc  		from  		date  		status (blank if delivered, otherwise contains failure reason)  		priority H: High N: Normal L: Low  		receipt 1: Yes 0: No  		subject 
string notes_list(string database_name) 
     Returns the notes from a selected database_name       
string notes_mark_read(string database_name, string user_name, string note_id) 
     Mark a note_id as read for the User user_name      Note: user_name must be fully distinguished user name   
string notes_mark_unread(string database_name, string user_name, string note_id) 
     Mark a note_id as unread for the User user_name     Note: user_name must be fully distinguished user name   
bool notes_nav_create(string database_name, string name ) 
     Create a navigator name, in database_name   
string notes_search(string database_name, string keywords ) 
     Find notes that match keywords in database_name     The note(s) that are returned must be converted to base 16     Example base_convert( $note_id, "10", "16" )  
string notes_unread(string database_name, string user_name) 
     Returns the unread note id's for the current User user_name      Note: user_name must be fully distinguished user name 
string notes_version(string database_name) 
     Get the version Lotus Notes  
# php4/main/main.c
void set_time_limit(int seconds) 
     Sets the maximum time a script can run  
# php4/sapi/apache/php_apache.c
class apache_lookup_uri(string URI) 
     Perform a partial request of the given URI to obtain information about it  
string apache_note(string note_name [, string note_value]) 
     Get and set Apache request notes  
string child_terminate() 
     Get and set Apache request notes  
array getallheaders(void) 
     Fetch all HTTP request headers  
int virtual(string filename) 
     Perform an Apache sub-request  
# php4/Zend/zend_builtin_functions.c
bool class_exists(string classname) 
     Checks if the class exists  
string create_function(string args, string code) 
     Creates an anonymous function, and returns its name (funny, eh?)  
bool function_exists(string function_name)  
     Checks if the function exists  
array get_class_methods(mixed class) 
     Returns an array of method names for class or class instance.  
string get_class(object object) 
     Retrieves the class name  
array get_class_vars(string class_name) 
     Returns an array of default properties of the class  
array get_declared_classes(void) 
     Returns an array of all declared classes.  
array get_defined_functions(void) 
     Returns an array of all defined functions  
array get_defined_vars(void) 
     Returns an associative array of names and values of all currently defined variable names (variables in the current scope)  
array get_included_files(void) 
     Returns an array with the file names that were include_once()'d  
array get_object_vars(object obj) 
     Returns an array of object properties  
string get_parent_class(mixed object) 
     Retrieves the parent class name for object or class.  
bool is_subclass_of(object object, string class_name) 
     Returns true if the object has this class as one of its parents  
bool method_exists(object object, string method) 
     Checks if the class method exists  
void restore_error_handler(void) 
     Restores the previously defined error handler function  
string set_error_handler(string error_handler) 
     Sets a user-defined error handler function.  Returns the previously defined error handler, or false on error  
int strcasecmp(string str1, string str2) 
     Binary safe case-insensitive string comparison  
int strcmp(string str1, string str2) 
     Binary safe string comparison  
int strlen(string str) 
     Get string length  
int strncasecmp(string str1, string str2, int len) 
     Binary safe string comparison  
int strncmp(string str1, string str2, int len) 
     Binary safe string comparison  
void trigger_error(string messsage [, int error_type]) 
     Generates a user-level error/warning/notice message  
