dnl $Id$

AC_INIT(global.ent)

dnl used by checkdoc
AC_PATH_PROG(PERL_PATH, perl)

dnl AC_MSG_CHECKING(for DocBook doctype)
dnl check_catalog_files() {
dnl    for catalog in $@; do
dnl 	  DBDT=`grep -E '^PUBLIC.*"docbook.dtd".*$' $catalog 2>/dev/null | cut -d'"' -f 2 `
dnl 	  if test -n "$DBDT" ; then
dnl 	      DOCBOOK_DOCTYPE=$DBDT
dnl 	      return 1
dnl 	  fi  
dnl 	  MORECATS=`grep -i '^catalog' $catalog 2>/dev/null | cut -d'"' -f 2`
dnl 	  if test -n "$MORECATS" ; then
dnl 	     if check_catalog_files $MORECATS ; then
dnl 	       return 1
dnl 	     else 
dnl 	       return 0
dnl 	     fi
dnl 	  fi
dnl 	  return 0
dnl    done
dnl    return 0
dnl }
dnl if test -n "$SGML_CATALOG_FILES" ; then
dnl    CATFILES=`echo $SGML_CATALOG_FILES | sed -e 's/:/ /'g`
dnl    check_catalog_files $CATFILES
dnl fi
dnl if test -n "$DOCBOOK_DOCTYPE"; then
dnl    AC_MSG_RESULT(got $DOCBOOK_DOCTYPE)
dnl else 
dnl    DOCBOOK_DOCTYPE="-//Davenport//DTD DocBook V3.0//EN"
dnl    AC_MSG_RESULT(defaulting to $DOCBOOK_DOCTYPE)
dnl fi 
DOCBOOK_DOCTYPE="-//Norman Walsh//DTD DocBk XML V1.4//EN"
AC_SUBST(DOCBOOK_DOCTYPE)

AC_MSG_CHECKING(for docbook.dsl)
for dir in /usr/lib/sgml/stylesheet/dsssl/docbook/nwalsh \
       /usr/local/share/sgml/docbook/dsssl/modular \
       /usr/lib/dsssl/stylesheets/docbook \
       /usr/lib/dsssl/stylesheets/nwalsh-modular \
       /usr/lib/dsssl/stylesheets/docbook \
       /usr/lib/sgml/stylesheets/nwalsh-modular \
       /usr/lib/sgml/docbook\
       /usr/lib/sgml/stylesheets/docbook \
       /opt/sgml/lib/stylesheets/docbook \
       /usr/share/sgml/docbk30/dsl \
       /usr/share/sgml/docbkdsl \
       /usr/share/sgml/stylesheets/docbook \
       /usr/local/lib/dsssl/stylesheets/docbook \
       /usr/local/lib/dsssl/stylesheets/nwalsh-modular \
       /usr/local/lib/sgml/stylesheets/docbook \
       /usr/local/lib/sgml/stylesheets/nwalsh-modular \
       /usr/local/lib/sgml/docbook \
       /usr/local/share/sgml/docbook/dsssl/modular ; do
    if test -d "$dir"; then
    DOCBOOK_HTML="$dir/html/docbook.dsl"
    DOCBOOK_PRINT="$dir/print/docbook.dsl"
    AC_MSG_RESULT(in $dir)
    break
    fi
done
if test -z "$DOCBOOK_HTML"; then
    DOCBOOK_HTML="/usr/lib/sgml/stylesheets/nwalsh-modular/html/docbook.dsl"
    DOCBOOK_PRINT="/usr/lib/sgml/stylesheets/nwalsh-modular/print/docbook.dsl"
    AC_MSG_RESULT(defaulting)
fi
AC_SUBST(DOCBOOK_HTML)
AC_SUBST(DOCBOOK_PRINT)

AC_MSG_CHECKING(for PHP source path)
AC_ARG_WITH(source,
[  --with-source=[DIR]     Look at the specified source directory],
[
    if test -d "$withval" ; then
	PHP_SOURCE=$withval
    else
	PHP_SOURCE=../php4
    fi
],[
  PHP_SOURCE=../php4
])
AC_MSG_RESULT($PHP_SOURCE)
AC_SUBST(PHP_SOURCE)
PHP_BUILD_DATE=`date`
AC_SUBST(PHP_BUILD_DATE)

AC_MSG_CHECKING(for language)
AC_ARG_WITH(lang,
[  --with-lang=LANG        Choose a language to work with],
[
    if test "$withval" = "yes"; then
        PHP_BUILD_DATE=`date '+%Y-%m-%d'`
        AC_SUBST(PHP_BUILD_DATE)

	LANG=en
	AC_MSG_RESULT([en (default)])
    else
        if test ! -d "$srcdir/$withval"; then
	    AC_MSG_RESULT()
	    AC_MSG_ERROR(Language \"$withval\" not supported!)
	fi
       
        dnl day/month/year
        PHP_BUILD_DATE=`date '+%d-%m-%Y'`
        AC_SUBST(PHP_BUILD_DATE)

	case $withval in
	  kr)
	    LANG="ko"
	    LANGDIR="kr"
	  ;;
	  *)
	    LANG=$withval
	    LANGDIR=$withval
	esac
        AC_MSG_RESULT( $withval )
    fi
],[
    LANG=en
    LANGDIR=en
    AC_MSG_RESULT([en (default)])
])
AC_SUBST(LANG)
AC_SUBST(LANGDIR)

dnl localize paper size by language
dnl (instead of using system-dependant default)
case "$LANG" in
  de|hu|ja|ko) PAPER_TYPE="A4" ;;
  *)  PAPER_TYPE="USletter" ;;
esac
AC_SUBST(PAPER_TYPE)

dnl localize order of number and element name
dnl in some headers autogenerated by jade
case "$LANG" in
  hu|ja|ko) NUMBER_FIRST="#t" ;;
  *) NUMBER_FIRST="#f" ;;
esac
AC_SUBST(NUMBER_FIRST)

dnl optionaly reduce margins to save some trees life
AC_MSG_CHECKING(for treesaving)
AC_ARG_WITH(treesaving,
[  --with-treesaving       Save trees by setting pagesize and margins],
[
  TREESAVING="#t";
  LEFT_MARGIN="(define %left-margin% 6pi)";   
  RIGHT_MARGIN="(define %right-margin% 2pi)";
  TOP_MARGIN="(define %top-margin% 2pi)";
  HEADER_MARGIN="(define %header-margin% 1pi)";
  FOOTER_MARGIN="(define %footer-margin% 1pi)"; 
  BOTTOM_MARGIN="(define %bottom-margin% 2pi)"; 
],[ 
  TREESAVING="#f";
  LEFT_MARGIN="";   
  RIGHT_MARGIN="";
  TOP_MARGIN="";
  HEADER_MARGIN="";
  FOOTER_MARGIN=""; 
  BOTTOM_MARGIN=""; 
])
AC_SUBST(LEFT_MARGIN)
AC_SUBST(RIGHT_MARGIN)
AC_SUBST(TOP_MARGIN)
AC_SUBST(HEADER_MARGIN)
AC_SUBST(FOOTER_MARGIN)
AC_SUBST(BOTTOM_MARGIN)
AC_SUBST(TREESAVING)
echo "saving trees: $TREESAVING";

case "$LANG" in
  ja|tw|ko) ENCODING="UTF-8";;
  hu) ENCODING="ISO-8859-2";;
  *) ENCODING="ISO-8859-1";;
esac
AC_SUBST(ENCODING)


if test "$ENCODING" = "UTF-8"; then
    JADE='SP_ENCODING=XML SP_CHARSET_FIXED=YES jade'
    NSGMLS='SP_ENCODING=XML SP_CHARSET_FIXED=YES nsgmls'
else
    JADE='jade'
    NSGMLS='nsgmls'
fi
AC_SUBST(JADE)
AC_SUBST(NSGMLS)

dnl SuSE 6.2/6.3 need this
if test -e /usr/share/sgml/CATALOG.docbk30
then
  CATALOG="-c /usr/share/sgml/CATALOG.docbk30"
fi
AC_SUBST(CATALOG)


AC_OUTPUT(\
Makefile \
version.ent \
checkdoc \
common.dsl \
howto.dsl \
html.dsl \
html-locale.dsl \
print.dsl \
phpweb.dsl \
quickref.dsl \
manual.xml)

chmod +x checkdoc

dnl sanity checks for SuSE 6.x
if test -e /usr/share/sgml/docbk30/docbook.dcl 
then
  if grep -n "NAMELEN.\+44" /usr/share/sgml/docbk30/docbook.dcl /dev/null
  then
    AC_MSG_WARN(please change this to e.g. 'NAMELEN 54' in /usr/share/sgml/docbk30/docbook.dcl )
  fi
  if grep -n "OMITTAG.\+NO" /usr/share/sgml/docbk30/docbook.dcl /dev/null
  then
    AC_MSG_WARN(please change this to 'OMITTAG YES' in /usr/share/sgml/docbk30/docbook.dcl )
  fi

dnl look for tex bug in print stylesheet
  if test -e /usr/share/sgml/docbkdsl/print/dbprint.dsl
  then 
    if test 2 -eq  `grep -c tex  /usr/share/sgml/docbkdsl/print/dbprint.dsl`
    then
      if fgrep -q 'country: (dsssl-country-code)' /usr/share/sgml/docbkdsl/print/dbprint.dsl
      then 	
        if ! grep -q ';;.*country:' /usr/share/sgml/docbkdsl/print/dbprint.dsl
	then
	  AC_MSG_WARN(to prevent a tex bug you should comment out )
	  AC_MSG_WARN('country: (dsssl-country-code)' )
	  AC_MSG_WARN(in /usr/share/sgml/docbkdsl/print/dbprint.dsl )
	  AC_MSG_WARN(or update your DSSSL-Stylesheets)
	  AC_MSG_WARN(to at least version 1.54)
	fi
      fi
    fi
  fi
fi



dnl check for files and translations, create chapter entities
echo creating chapters.ent
DEPEND_FILES=""
rm -f chapters.ent
echo "<!-- DON'T TOUCH - AUTOGENERATED BY ./configure -->" > chapters.ent
for file in `find $srcdir/en -name "*.xml" | sed -e"s%^$srcdir\/en\/%%g" | sort`
do 
	name=`echo $file | sed -e"s/\//./g" -e"s/.xml$//g"`
	if test -f $srcdir/$LANGDIR/$file  
	then
		file=$srcdir/$LANGDIR/$file	
	else
		file=$srcdir/en/$file
		echo " untranslated $file"
	fi
	DEPEND_FILES="$DEPEND_FILES $file"
  	echo "<!ENTITY $name     SYSTEM \"$file\">" >> chapters.ent
done  
chmod a-w chapters.ent
	  
