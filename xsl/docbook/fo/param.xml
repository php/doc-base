<?xml version="1.0" encoding="utf-8"?>
<!-- This file was generated by weave.xsl version 1.0. Do not edit! -->
<!-- See http://sourceforge.net/projects/docbook/ -->
<!DOCTYPE book
  PUBLIC "-//DocBook Open Repository//DTD DocBook Literate Programming V0.0//EN" "http://docbook.sourceforge.net/release/litprog/current/dtd/ldocbook.dtd">
<book xmlns:src="http://nwalsh.com/xmlns/litprog/fragment" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<bookinfo>
<title>FO Parameter Reference</title>
<releaseinfo role="meta">
$Id: param.xml,v 1.2 2003-03-09 14:54:48 tom Exp $
</releaseinfo>
<author>
  <surname>Walsh</surname>
  <firstname>Norman</firstname>
</author>
<copyright>
  <year>1999</year>
  <year>2000</year>
  <year>2001</year>
  <holder>Norman Walsh</holder>
</copyright>
</bookinfo>

<preface><title>Introduction</title>

<para>This is technical reference documentation for the DocBook XSL
Stylesheets; it documents (some of) the parameters, templates, and
other elements of the stylesheets.</para>

<para>This reference describes each of the HTML Stylesheet parameters.
These are the <quote>easily customizable</quote> parts of the stylesheet.
If you want to specify an alternate value for one or more of these
parameters, you can do so in a <quote>driver</quote> stylesheet.</para>

<para>For example, if you want to change the <literal moreinfo="none">html.stylesheet</literal>
to <filename moreinfo="none">reference.css</filename>, you might create a driver
stylesheet like this:</para>

<programlisting format="linespecific">&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                version='1.0'&gt;

  &lt;xsl:import href="http://docbook.sourceforge.net/release/xsl/current/fo/docbook.xsl"/&gt;

  &lt;xsl:param name="html.stylesheet"&gt;reference.css&lt;/xsl:param&gt;

&lt;/xsl:stylesheet&gt;</programlisting>

<para>Naturally, you have to change the
<sgmltag class="attribute">href</sgmltag> attribute on
<literal moreinfo="none">&lt;xsl:import&gt;</literal> to point to
<filename moreinfo="none">docbook.xsl</filename> on your system. (Or
<filename moreinfo="none">chunk.xsl</filename>, if you're using chunking.)</para>

<para>This is not intended to be <quote>user</quote> documentation.
It is provided for developers writing customization layers for the
stylesheets, and for anyone who's interested in <quote>how it
works</quote>.</para>

<para>Although I am trying to be thorough, this documentation is known
to be incomplete. Don't forget to read the source, too :-)</para>
</preface>

<reference><title>Admonitions</title>
<refentry id="admon.graphics">
<refmeta>
<refentrytitle>admon.graphics</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>admon.graphics</refname>
<refpurpose>Use graphics in admonitions?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="admon.graphics.frag">&lt;xsl:param name="admon.graphics"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true (non-zero), admonitions are presented in an alternate style that uses
a graphic.  Default graphics are provided in the distribution.
</para>

</refsect1>
</refentry>

<refentry id="admon.graphics.extension">
<refmeta>
<refentrytitle>admon.graphics.extension</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>admon.graphics.extension</refname>
<refpurpose>Extension for admonition graphics</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="admon.graphics.extension.frag">&lt;xsl:param name="admon.graphics.extension"
           select="'.png'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Sets the extension to use on admonition graphics.</para>

</refsect1>
</refentry>

<refentry id="admon.graphics.path">
<refmeta>
<refentrytitle>admon.graphics.path</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>admon.graphics.path</refname>
<refpurpose>Path to admonition graphics</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="admon.graphics.path.frag">&lt;xsl:param name="admon.graphics.path"&gt;images/&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Sets the path, probably relative to the directory where the HTML
files are created, to the admonition graphics.
</para>

</refsect1>
</refentry>

<refentry id="admonition.title.properties">
<refnamediv>
<refname>admonition.title.properties</refname>
<refpurpose>To set the style for admonitions titles.</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="admonition.title.properties.frag">&lt;xsl:attribute-set name="admonition.title.properties"&gt;
  &lt;xsl:attribute name="font-size"&gt;14pt&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="font-weight"&gt;bold&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="hyphenate"&gt;false&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="keep-with-next.within-column"&gt;always&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>
<refsect1><title>Description</title>
<para>How do you want admonitions titles styled? </para>
<para>Set the font-size, weight etc to the style required.</para>

</refsect1>
</refentry>

<refentry id="admonition.properties">
<refnamediv>
<refname>admonition.properties</refname>
<refpurpose>To set the style for admonitions.</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="admonition.properties.frag">&lt;xsl:attribute-set name="admonition.properties"/&gt;</src:fragment>
</refsynopsisdiv>
<refsect1><title>Description</title>
<para>How do you want admonitions styled? </para>
<para>Set the font-size, weight, etc. to the style required</para>

</refsect1>
</refentry>

</reference>

<reference><title>Callouts</title>
<refentry id="callout.defaultcolumn">
<refmeta>
<refentrytitle>callout.defaultcolumn</refentrytitle>
<refmiscinfo role="type">integer</refmiscinfo>
</refmeta>
<refnamediv>
<refname>callout.defaultcolumn</refname>
<refpurpose>Indicates what column callouts appear in by default</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="callout.defaultcolumn.frag">&lt;xsl:param name="callout.defaultcolumn"
           select="'60'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If a callout does not identify a column (for example, if it uses
the <literal moreinfo="none">linerange</literal> <sgmltag class="attribute">unit</sgmltag>),
it will appear in the default column.
</para>

</refsect1>
</refentry>

<refentry id="callout.graphics">
<refmeta>
<refentrytitle>callout.graphics</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>callout.graphics</refname>
<refpurpose>Use graphics for callouts?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="callout.graphics.frag">&lt;xsl:param name="callout.graphics"
           select="'1'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, callouts are presented with graphics (e.g., reverse-video
circled numbers instead of "(1)", "(2)", etc.).
Default graphics are provided in the distribution.
</para>

</refsect1>
</refentry>

<refentry id="callout.graphics.extension">
<refmeta>
<refentrytitle>callout.graphics.extension</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>callout.graphics.extension</refname>
<refpurpose>Extension for callout graphics</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="callout.graphics.extension.frag">&lt;xsl:param name="callout.graphics.extension"
           select="'.png'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Sets the extension to use on callout graphics.</para>

</refsect1>
</refentry>

<refentry id="callout.graphics.number.limit">
<refmeta>
<refentrytitle>callout.graphics.number.limit</refentrytitle>
<refmiscinfo role="type">integer</refmiscinfo>
</refmeta>
<refnamediv>
<refname>callout.graphics.number.limit</refname>
<refpurpose>Number of the largest callout graphic</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="callout.graphics.number.limit.frag">&lt;xsl:param name="callout.graphics.number.limit"
           select="'10'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If <parameter moreinfo="none">callout.graphics</parameter>
is non-zero, graphics are used to represent
callout numbers. The value of
<parameter moreinfo="none">callout.graphics.number.limit</parameter>
is
the largest number for which a graphic exists. If the callout number
exceeds this limit, the default presentation "(nnn)" will always
be used.
</para>

</refsect1>
</refentry>

<refentry id="callout.graphics.path">
<refmeta>
<refentrytitle>callout.graphics.path</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>callout.graphics.path</refname>
<refpurpose>Path to callout graphics</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="callout.graphics.path.frag">&lt;xsl:param name="callout.graphics.path"
           select="'images/callouts/'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Sets the path, probably relative to the directory where the HTML
files are created, to the callout graphics.
</para>

</refsect1>
</refentry>

<refentry id="callout.unicode">
<refmeta>
<refentrytitle>callout.unicode</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>callout.unicode</refname>
<refpurpose>Use Unicode characters rather than images for callouts.</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="callout.unicode.frag">&lt;xsl:param name="callout.unicode"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The stylesheets can use either an image of the numbers one to ten, or the single Unicode character which represents the numeral, in white on a black background. Use this to select the Unicode character option.
</para>

</refsect1>
</refentry>

<refentry id="callout.unicode.font">
<refmeta>
<refentrytitle>callout.unicode.font</refentrytitle>

</refmeta>
<refnamediv>
<refname>callout.unicode.font</refname>
<refpurpose>Specify a font for Unicode glyphs</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="callout.unicode.font.frag">&lt;xsl:param name="callout.unicode.font"
           select="'ZapfDingbats'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The name of the font to specify around Unicode callout glyphs.
If set to the empty string, no font change will occur.
</para>

</refsect1>
</refentry>

<refentry id="callout.unicode.number.limit">
<refmeta>
<refentrytitle>callout.unicode.number.limit</refentrytitle>
<refmiscinfo role="type">integer</refmiscinfo>
</refmeta>
<refnamediv>
<refname>callout.unicode.number.limit</refname>
<refpurpose>Number of the largest callout graphic</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="callout.unicode.number.limit.frag">&lt;xsl:param name="callout.unicode.number.limit"
           select="'10'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If <parameter moreinfo="none">callout.unicode</parameter>
is non-zero, unicode characters are used to represent
callout numbers. The value of
<parameter moreinfo="none">callout.unicode.number.limit</parameter>
is
the largest number for which a unicode character exists. If the callout number
exceeds this limit, the default presentation "(nnn)" will always
be used.
</para>

</refsect1>
</refentry>

<refentry id="callout.unicode.start.character">
<refmeta>
<refentrytitle>callout.unicode.start.character</refentrytitle>
<refmiscinfo role="type">integer</refmiscinfo>
</refmeta>
<refnamediv>
<refname>callout.unicode.start.character</refname>
<refpurpose>First Unicode character to use, decimal value.</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="callout.unicode.start.character.frag">&lt;xsl:param name="callout.unicode.start.character"
           select="10102"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If <parameter moreinfo="none">callout.graphics</parameter> is zero and <parameter moreinfo="none">callout.unicode</parameter>
is non-zero, unicode characters are used to represent
callout numbers. The value of
<parameter moreinfo="none">callout.unicode.start.character</parameter>
is the decimal unicode value used for callout number one. Currently, 
only 10102 is supported in the stylesheets for this parameter. 
</para>

</refsect1>
</refentry>

<refentry id="callouts.extension">
<refmeta>
<refentrytitle>callouts.extension</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>callouts.extension</refname>
<refpurpose>Enable the callout extension</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="callouts.extension.frag">&lt;xsl:param name="callouts.extension"
           select="'1'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The callouts extension processes <sgmltag>areaset</sgmltag>
elements in <sgmltag>ProgramListingCO</sgmltag> and other text-based
callout elements.
</para>

</refsect1>
</refentry>

</reference>

<reference><title>ToC/LoT/Index Generation</title>
<refentry id="autotoc.label.separator">
<refmeta>
<refentrytitle>autotoc.label.separator</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>autotoc.label.separator</refname>
<refpurpose>Separator between labels and titles in the ToC</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="autotoc.label.separator.frag">&lt;xsl:param name="autotoc.label.separator"
           select="'. '"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>String to use to seperate labels and title in a table of contents.</para>

</refsect1>
</refentry>

<refentry id="process.empty.source.toc">
<refmeta>
<refentrytitle>process.empty.source.toc</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>process.empty.source.toc</refname>
<refpurpose>FIXME:</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="process.empty.source.toc.frag">&lt;xsl:param name="process.empty.source.toc"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>FIXME:
</para>

</refsect1>
</refentry>

<refentry id="process.source.toc">
<refmeta>
<refentrytitle>process.source.toc</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>process.source.toc</refname>
<refpurpose>FIXME:</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="process.source.toc.frag">&lt;xsl:param name="process.source.toc"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>FIXME:
</para>

</refsect1>
</refentry>

<refentry id="generate.toc">
<refmeta>
<refentrytitle>generate.toc</refentrytitle>
<refmiscinfo role="type">table</refmiscinfo>
</refmeta>
<refnamediv>
<refname>generate.toc</refname>
<refpurpose>Control generation of ToCs and LoTs</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="generate.toc.frag">
&lt;xsl:param name="generate.toc"&gt;
/appendix toc,title
article/appendix  nop
/article  toc,title
book      toc,title,figure,table,example,equation
/chapter  toc,title
part      toc,title
/preface  toc,title
qandadiv  toc
qandaset  toc
reference toc,title
/sect1    toc
/sect2    toc
/sect3    toc
/sect4    toc
/sect5    toc
/section  toc
set       toc,title
&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>This parameter has a structured value. It is a table of space-delimited
path/value pairs. Each path identifies some element in the source document
using a restricted subset of XPath (only the implicit child axis, no wildcards,
no predicates). Paths can be either relative or absolute.</para>

<para>When processing a particular element, the stylesheets consult this table to
determine if a ToC (or LoT(s)) should be generated.</para>

<para>For example, consider the entry:</para>

<screen format="linespecific">book toc,figure</screen>

<para>This indicates that whenever a <sgmltag>book</sgmltag> is formatted, a
Table Of Contents and a List of Figures should be generated. Similarly,</para>

<screen format="linespecific">/chapter toc</screen>

<para>indicates that whenever a document <emphasis>that has a root
of</emphasis> <sgmltag>chapter</sgmltag> is formatted, a Table of
Contents should be generated. The entry <literal moreinfo="none">chapter</literal> would match
all chapters, but <literal moreinfo="none">/chapter</literal> matches only <sgmltag>chapter</sgmltag>
document elements.</para>

<para>Generally, the longest match wins. So, for example, if you want to distinguish
articles in books from articles in parts, you could use these two entries:</para>

<screen format="linespecific">book/article toc,figure
part/article toc</screen>

<para>Note that an article in a part can never match a <literal moreinfo="none">book/article</literal>,
so if you want nothing to be generated for articles in parts, you can simply leave
that rule out.</para>

<para>If you want to leave the rule in, to make it explicit that you're turning
something off, use the value <quote>nop</quote>. For example, the following
entry disables ToCs and LoTs for articles:</para>

<screen format="linespecific">article nop</screen>

<para>Do not simply leave the word <quote>article</quote> in the file
without a matching value. That'd be just begging the silly little
path/value parser to get confused.</para>

<para>Section ToCs are further controlled by the
<parameter moreinfo="none">generate.section.toc.level</parameter> parameter.
For a given section level to have a ToC, it must have both an entry in 
<parameter moreinfo="none">generate.toc</parameter> and be within the range enabled by
<parameter moreinfo="none">generate.section.toc.level</parameter>.</para>
</refsect1>
</refentry>

<refentry id="generate.index">
<refmeta>
<refentrytitle>generate.index</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>generate.index</refname>
<refpurpose>Do you want an index?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="generate.index.frag">&lt;xsl:param name="generate.index"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Specify if an index should be generated. </para>

</refsect1>
</refentry>

<refentry id="make.index.markup">
<refmeta>
<refentrytitle>make.index.markup</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>make.index.markup</refname>
<refpurpose>Generate XML index markup in the index?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="make.index.markup.frag">&lt;xsl:param name="make.index.markup"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>This parameter enables a very neat trick for getting properly
merged, collated back-of-the-book indexes. G. Ken Holman suggested
this trick at Extreme Markup Languages 2002 and I'm indebted to him
for it.</para>

<para>Jeni Tennison's excellent code in
<filename moreinfo="none">autoidx.xsl</filename> does a great job of merging and
sorting <sgmltag>indexterm</sgmltag>s in the document and building a
back-of-the-book index. However, there's one thing that it cannot
reasonably be expected to do: merge page numbers into ranges. (I would
not have thought that it could collate and suppress duplicate page
numbers, but in fact it appears to manage that task somehow.)</para>

<para>Ken's trick is to produce a document in which the index at the
back of the book is <quote>displayed</quote> in XML. Because the index
is generated by the FO processor, all of the page numbers have been resolved.
It's a bit hard to explain, but what it boils down to is that instead of having
an index at the back of the book that looks like this:</para>

<blockquote>
<formalpara><title>A</title>
<para>ap1, 1, 2, 3</para>
</formalpara>
</blockquote>

<para>you get one that looks like this:</para>

<blockquote>
<programlisting format="linespecific">&lt;indexdiv&gt;A&lt;/indexdiv&gt;
&lt;indexentry&gt;
&lt;primaryie&gt;ap1&lt;/primaryie&gt;,
&lt;phrase role="pageno"&gt;1&lt;/phrase&gt;,
&lt;phrase role="pageno"&gt;2&lt;/phrase&gt;,
&lt;phrase role="pageno"&gt;3&lt;/phrase&gt;
&lt;/indexentry&gt;</programlisting>
</blockquote>

<para>After building a PDF file with this sort of odd-looking index, you can
extract the text from the PDF file and the result is a proper index expressed in
XML.</para>

<para>Now you have data that's amenable to processing and a simple Perl script
(such as <filename moreinfo="none">fo/pdf2index</filename>) can
merge page ranges and generate a proper index.</para>

<para>Finally, reformat your original document using this literal index instead of
an automatically generated one and <quote>bingo</quote>!</para>

</refsect1>
</refentry>

<refentry id="toc.section.depth">
<refmeta>
<refentrytitle>toc.section.depth</refentrytitle>
<refmiscinfo role="type">integer</refmiscinfo>
</refmeta>
<refnamediv>
<refname>toc.section.depth</refname>
<refpurpose>How deep should recursive <sgmltag>section</sgmltag>s appear
in the TOC?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="toc.section.depth.frag">&lt;xsl:param name="toc.section.depth"&gt;2&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Specifies the depth to which recursive sections should appear in the
TOC.
</para>

</refsect1>
</refentry>

<refentry id="toc.indent.width">
<refmeta>
<refentrytitle>toc.indent.width</refentrytitle>
<refmiscinfo role="type">float</refmiscinfo>
</refmeta>
<refnamediv>
<refname>toc.indent.width</refname>
<refpurpose>Amount of indentation for TOC entries</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="toc.indent.width.frag">&lt;xsl:param name="toc.indent.width"
           select="24"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Specifies, in points, the distance by which each level of the
TOC is indented from its parent.</para>

<para>This value is expressed in points, without
a unit (in other words, it is a bare number). Using a bare number allows the stylesheet
to perform calculations that would otherwise have to be performed by the FO processor
because not all processors support expressions.</para>

</refsect1>
</refentry>

<refentry id="toc.margin.properties">
<refnamediv>
<refname>toc.margin.properties</refname>
<refpurpose>Margin properties used on Tables of Contents</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="toc.margin.properties.frag">&lt;xsl:attribute-set name="toc.margin.properties"&gt;
  &lt;xsl:attribute name="space-before.minimum"&gt;0.5em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.optimum"&gt;1em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.maximum"&gt;2em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.minimum"&gt;0.5em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.optimum"&gt;1em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.maximum"&gt;2em&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>
<para>This attribute set is used on Tables of Contents. These attributes are set
on the wrapper that surrounds the ToC block, not on each individual lines.</para>
</refsect1>
</refentry>

<refentry id="bridgehead.in.toc">
<refmeta>
<refentrytitle>bridgehead.in.toc</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>bridgehead.in.toc</refname>
<refpurpose>Should bridgehead elements appear in the TOC?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="bridgehead.in.toc.frag">&lt;xsl:param name="bridgehead.in.toc"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, bridgeheads appear in the TOC. Note that this option
is not fully supported and may be removed in a future version of the
stylesheets.
</para>

</refsect1>
</refentry>

<refentry id="generate.section.toc.level">
<refmeta>
<refentrytitle>generate.section.toc.level</refentrytitle>
<refmiscinfo role="type">integer</refmiscinfo>
</refmeta>
<refnamediv>
<refname>generate.section.toc.level</refname>
<refpurpose>Control depth of TOC generation in sections</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="generate.section.toc.level.frag">&lt;xsl:param name="generate.section.toc.level"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The <parameter moreinfo="none">generate.section.toc.level</parameter> parameter
controls the depth of section in which TOCs will be generated. Note
that this is related to, but not the same as
<parameter moreinfo="none">toc.section.depth</parameter>, which controls the depth to
which TOC entries will be generated in a given TOC.</para>
<para>If, for example, <parameter moreinfo="none">generate.section.toc.level</parameter>
is <literal moreinfo="none">3</literal>, TOCs will be generated in first, second, and third
level sections, but not in fourth level sections.
</para>

</refsect1>
</refentry>


<!--
annotate.toc;
bridgehead.in.toc;
manual.toc;
generate.section.toc.level;
-->

</reference>

<reference><title>Processor Extensions</title>
<refentry id="arbortext.extensions">
<refmeta>
<refentrytitle>arbortext.extensions</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>arbortext.extensions</refname>
<refpurpose>Enable Arbortext extensions?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="arbortext.extensions.frag">&lt;xsl:param name="arbortext.extensions"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero,
<ulink url="http://www.arbortext.com/">Arbortext</ulink>
extensions will be used.
</para>

</refsect1>
</refentry>

<refentry id="fop.extensions">
<refmeta>
<refentrytitle>fop.extensions</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>fop.extensions</refname>
<refpurpose>Enable FOP extensions?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="fop.extensions.frag">&lt;xsl:param name="fop.extensions"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero,
<ulink url="http://xml.apache.org/fop/">FOP</ulink>
extensions will be used. At present, this consists of PDF bookmarks.
</para>

</refsect1>
</refentry>

<refentry id="passivetex.extensions">
<refmeta>
<refentrytitle>passivetex.extensions</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>passivetex.extensions</refname>
<refpurpose>Enable PassiveTeX extensions?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="passivetex.extensions.frag">&lt;xsl:param name="passivetex.extensions"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero,
<ulink url="http://users.ox.ac.uk/~rahtz/passivetex/">PassiveTeX</ulink>
extensions will be used. At present, this consists of PDF bookmarks
and sorted index terms.
</para>

</refsect1>
</refentry>

<refentry id="tex.math.in.alt">
<refmeta>
<refentrytitle>tex.math.in.alt</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>tex.math.in.alt</refname>
<refpurpose>TeX notation used for equations</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="tex.math.in.alt.frag">&lt;xsl:param name="tex.math.in.alt"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If you want type math directly in TeX notation in equations,
this parameter specifies notation used. Currently are supported two
values -- <literal moreinfo="none">plain</literal> and <literal moreinfo="none">latex</literal>. Empty
value means that you are not using TeX math at all.</para>

<para>Preferred way for including TeX alternative of math is inside of
<sgmltag>textobject</sgmltag> element. Eg.:</para>

<programlisting format="linespecific">&lt;inlineequation&gt;
&lt;inlinemediaobject&gt;
&lt;imageobject&gt;
&lt;imagedata fileref="eq1.gif"/&gt;
&lt;/imageobject&gt;
&lt;textobject&gt;&lt;phrase&gt;E=mc squared&lt;/phrase&gt;&lt;/textobject&gt;
&lt;textobject role="tex"&gt;&lt;phrase&gt;E=mc^2&lt;/phrase&gt;&lt;/textobject&gt;
&lt;/inlinemediaobject&gt;
&lt;/inlineequation&gt;</programlisting>

<para>If you are using <sgmltag>graphic</sgmltag> element, you can
store TeX inside <sgmltag>alt</sgmltag> element:</para>

<programlisting format="linespecific">&lt;inlineequation&gt;
&lt;alt role="tex"&gt;a^2+b^2=c^2&lt;/alt&gt;
&lt;graphic fileref="a2b2c2.gif"/&gt;  
&lt;/inlineequation&gt;</programlisting>

<para>If you want use this feature, you should process your FO with
PassiveTeX, which only supports TeX math notation. When calling
stylsheet, don't forget to specify also
passivetex.extensions=1.</para>

<para>If you want equations in HTML, just process generated file
<filename moreinfo="none">tex-math-equations.tex</filename> by TeX or LaTeX. Then run
dvi2bitmap program on result DVI file. You will get images for
equations in your document.</para>

</refsect1>
</refentry>

<refentry id="tex.math.delims">
<refmeta>
<refentrytitle>tex.math.delims</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>tex.math.delims</refname>
<refpurpose>Should be equations outputed for processing by TeX
automatically surrounded by math mode delimiters</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="tex.math.delims.frag">&lt;xsl:param name="tex.math.delims"
           select="'1'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>For compatibility with DSSSL based DBTeXMath from Allin Cottrell
you should set this parameter to 0.</para>

</refsect1>
</refentry>

<refentry id="xep.extensions">
<refmeta>
<refentrytitle>xep.extensions</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>xep.extensions</refname>
<refpurpose>Enable XEP extensions?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="xep.extensions.frag">&lt;xsl:param name="xep.extensions"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero,
<ulink url="http://www.renderx.com/">XEP</ulink>
extensions will be used. XEP extensions consists of PDF bookmarks and document information.
</para>

</refsect1>
</refentry>

</reference>

<reference><title>Stylesheet Extensions</title>
<refentry id="linenumbering.everyNth">
<refmeta>
<refentrytitle>linenumbering.everyNth</refentrytitle>
<refmiscinfo role="type">integer</refmiscinfo>
</refmeta>
<refnamediv>
<refname>linenumbering.everyNth</refname>
<refpurpose>Indicate which lines should be numbered</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="linenumbering.everyNth.frag">&lt;xsl:param name="linenumbering.everyNth"
           select="'5'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If line numbering is enabled, everyNth line will be numbered.
</para>

</refsect1>
</refentry>

<refentry id="linenumbering.extension">
<refmeta>
<refentrytitle>linenumbering.extension</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>linenumbering.extension</refname>
<refpurpose>Enable the line numbering extension</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="linenumbering.extension.frag">&lt;xsl:param name="linenumbering.extension"
           select="'1'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true, verbatim environments (elements that have the
format='linespecific' notation attribute: address, literallayout,
programlisting, screen, synopsis) that specify line numbering will
have, surprise, line numbers.
</para>

</refsect1>
</refentry>

<refentry id="linenumbering.separator">
<refmeta>
<refentrytitle>linenumbering.separator</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>linenumbering.separator</refname>
<refpurpose>Specify a separator between line numbers and lines</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="linenumbering.separator.frag">&lt;xsl:param name="linenumbering.separator"
           select="' '"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The separator is inserted between line numbers and lines in
the verbatim environment.
</para>

</refsect1>
</refentry>

<refentry id="linenumbering.width">
<refmeta>
<refentrytitle>linenumbering.width</refentrytitle>
<refmiscinfo role="type">integer</refmiscinfo>
</refmeta>
<refnamediv>
<refname>linenumbering.width</refname>
<refpurpose>Indicates the width of line numbers</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="linenumbering.width.frag">&lt;xsl:param name="linenumbering.width"
           select="'3'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If line numbering is enabled, line numbers will appear right
justified in a field "width" characters wide.
</para>

</refsect1>
</refentry>

<refentry id="tablecolumns.extension">
<refmeta>
<refentrytitle>tablecolumns.extension</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>tablecolumns.extension</refname>
<refpurpose>Enable the table columns extension function</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="tablecolumns.extension.frag">&lt;xsl:param name="tablecolumns.extension"
           select="'1'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The table columns extension function adjusts the widths of table
columns in the HTML result to more accurately reflect the specifications
in the CALS table.
</para>

</refsect1>
</refentry>

<refentry id="textinsert.extension">
<refmeta>
<refentrytitle>textinsert.extension</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>textinsert.extension</refname>
<refpurpose>Enable the textinsert extension element</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="textinsert.extension.frag">&lt;xsl:param name="textinsert.extension"
           select="'1'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The textinsert extension element inserts the contents of a
a file into the result tree (as text).
</para>

</refsect1>
</refentry>

<refentry id="use.extensions">
<refmeta>
<refentrytitle>use.extensions</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>use.extensions</refname>
<refpurpose>Enable extensions</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="use.extensions.frag">&lt;xsl:param name="use.extensions"
           select="'0'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, extensions may be used. Each extension is
further controlled by its own parameter. But if
<parameter moreinfo="none">use.extensions</parameter> is zero, no extensions will
be used.
</para>

</refsect1>
</refentry>

</reference>

<reference><title>Automatic labelling</title>
<refentry id="appendix.autolabel">
<refmeta>
<refentrytitle>appendix.autolabel</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>appendix.autolabel</refname>
<refpurpose>Are Appendixes automatically enumerated?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="appendix.autolabel.frag">&lt;xsl:param name="appendix.autolabel"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true (non-zero), unlabeled appendixes will be
enumerated.
</para>

</refsect1>
</refentry>

<refentry id="chapter.autolabel">
<refmeta>
<refentrytitle>chapter.autolabel</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>chapter.autolabel</refname>
<refpurpose>Are chapters automatically enumerated?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="chapter.autolabel.frag">&lt;xsl:param name="chapter.autolabel"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true (non-zero), unlabeled chapters will be enumerated.
</para>

</refsect1>
</refentry>

<refentry id="part.autolabel">
<refmeta>
<refentrytitle>part.autolabel</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>part.autolabel</refname>
<refpurpose>Are parts and references enumerated?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="part.autolabel.frag">&lt;xsl:param name="part.autolabel"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true (non-zero), unlabeled parts and references will be enumerated.
</para>

</refsect1>
</refentry>

<refentry id="preface.autolabel">
<refmeta>
<refentrytitle>preface.autolabel</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>preface.autolabel</refname>
<refpurpose>Are prefaces enumerated?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="preface.autolabel.frag">&lt;xsl:param name="preface.autolabel"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true (non-zero), unlabeled prefaces will be enumerated.
</para>

</refsect1>
</refentry>

<refentry id="section.autolabel">
<refmeta>
<refentrytitle>section.autolabel</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>section.autolabel</refname>
<refpurpose>Are sections enumerated?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="section.autolabel.frag">&lt;xsl:param name="section.autolabel"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true (non-zero), unlabeled sections will be enumerated.
</para>

</refsect1>
</refentry>

<refentry id="section.label.includes.component.label">
<refmeta>
<refentrytitle>section.label.includes.component.label</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>section.label.includes.component.label</refname>
<refpurpose>Do section labels include the component label?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="section.label.includes.component.label.frag">&lt;xsl:param name="section.label.includes.component.label"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true (non-zero), section labels are prefixed with the label of the
component that contains them.
</para>

</refsect1>
</refentry>

<refentry id="label.from.part">
<refmeta>
<refentrytitle>label.from.part</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>label.from.part</refname>
<refpurpose>Renumber chapters in each part?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="label.from.part.frag">&lt;xsl:param name="label.from.part"
           select="'0'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If <parameter moreinfo="none">label.from.part</parameter> is non-zero, components
(<sgmltag>chapter</sgmltag>s, <sgmltag>appendixe</sgmltag>s, etc.)
will be numbered from 1 in each <sgmltag>part</sgmltag>. Otherwise,
they will be numbered monotonically throughout each
<sgmltag>book</sgmltag>.
</para>

</refsect1>
</refentry>

</reference>

<reference><title>XSLT Processing</title>
<refentry id="rootid">
<refmeta>
<refentrytitle>rootid</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>rootid</refname>
<refpurpose>Specify the root element to format</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="rootid.frag">&lt;xsl:param name="rootid"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If <parameter moreinfo="none">rootid</parameter> is specified, it must be the
value of an ID that occurs in the document being formatted. The entire
document will be loaded and parsed, but formatting will begin at the
element identified, rather than at the root. For example, this allows
you to process only chapter 4 of a book.</para>
<para>Because the entire document is available to the processor, automatic
numbering, cross references, and other dependencies are correctly
resolved.</para>

</refsect1>
</refentry>

</reference>

<reference><title>Meta/*Info</title>
<refentry id="make.single.year.ranges">
<refmeta>
<refentrytitle>make.single.year.ranges</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>make.single.year.ranges</refname>
<refpurpose>Print single-year ranges (e.g., 1998-1999)</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="make.single.year.ranges.frag">&lt;xsl:param name="make.single.year.ranges"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, year ranges that span a single year will be printed
in range notation (1998-1999) instead of discrete notation
(1998, 1999).</para>

</refsect1>
</refentry>

<refentry id="make.year.ranges">
<refmeta>
<refentrytitle>make.year.ranges</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>make.year.ranges</refname>
<refpurpose>Collate copyright years into ranges?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="make.year.ranges.frag">&lt;xsl:param name="make.year.ranges"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, copyright years will be collated into ranges.</para>

</refsect1>
</refentry>

<refentry id="author.othername.in.middle">
<refmeta>
<refentrytitle>author.othername.in.middle</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>author.othername.in.middle</refname>
<refpurpose>Is <sgmltag>othername</sgmltag> in <sgmltag>author</sgmltag> a
middle name?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="author.othername.in.middle.frag">&lt;xsl:param name="author.othername.in.middle"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true (non-zero), the <sgmltag>othername</sgmltag> of an <sgmltag>author</sgmltag>
appears between the <sgmltag>firstname</sgmltag> and
<sgmltag>surname</sgmltag>.  Otherwise, <sgmltag>othername</sgmltag>
is suppressed.
</para>

</refsect1>
</refentry>

</reference>

<reference><title>Reference Pages</title>
<refentry id="funcsynopsis.decoration">
<refmeta>
<refentrytitle>funcsynopsis.decoration</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>funcsynopsis.decoration</refname>
<refpurpose>Decorate elements of a FuncSynopsis?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="funcsynopsis.decoration.frag">&lt;xsl:param name="funcsynopsis.decoration"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true (non-zero), elements of the FuncSynopsis will be decorated (e.g. bold or
italic).  The decoration is controlled by functions that can be redefined
in a customization layer.
</para>

</refsect1>
</refentry>

<refentry id="funcsynopsis.style">
<refmeta>
<refentrytitle>funcsynopsis.style</refentrytitle>
<refmiscinfo role="type">list</refmiscinfo>
<refmiscinfo role="value">ansi</refmiscinfo>
<refmiscinfo role="value">kr</refmiscinfo>
</refmeta>
<refnamediv>
<refname>funcsynopsis.style</refname>
<refpurpose>What style of 'FuncSynopsis' should be generated?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="funcsynopsis.style.frag">&lt;xsl:param name="funcsynopsis.style"&gt;kr&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If <varname>funcsynopsis.style</varname> is <literal moreinfo="none">ansi</literal>,
ANSI-style function synopses are generated for a
<sgmltag>funcsynopsis</sgmltag>, otherwise K&amp;R-style
function synopses are generated.
</para>

</refsect1>
</refentry>

<refentry id="function.parens">
<refmeta>
<refentrytitle>function.parens</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>function.parens</refname>
<refpurpose>Generate parens after a function?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="function.parens.frag">&lt;xsl:param name="function.parens"&gt;0&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If not 0, the formatting of
a <sgmltag class="starttag">function</sgmltag> element will include
generated parenthesis.
</para>

</refsect1>
</refentry>

<refentry id="refentry.generate.name">
<refmeta>
<refentrytitle>refentry.generate.name</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>refentry.generate.name</refname>
<refpurpose>Output NAME header before 'RefName'(s)?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="refentry.generate.name.frag">&lt;xsl:param name="refentry.generate.name"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true (non-zero), a "NAME" section title is output before the list
of 'RefName's. This parameter and
<parameter moreinfo="none">refentry.generate.title</parameter> are mutually
exclusive. This means that if you change this parameter to zero, you
should set <parameter moreinfo="none">refentry.generate.title</parameter> to 1 unless
you want get quite strange output.
</para>

</refsect1>
</refentry>

<refentry id="refentry.generate.title">
<refmeta>
<refentrytitle>refentry.generate.title</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>refentry.generate.title</refname>
<refpurpose>Output title before 'RefName'(s)?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="refentry.generate.title.frag">&lt;xsl:param name="refentry.generate.title"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true (non-zero), the reference page title or first name is
output before the list of 'RefName's. This parameter and
<parameter moreinfo="none">refentry.generate.name</parameter> are mutually exclusive.
This means that if you change this parameter to 1, you
should set <parameter moreinfo="none">refentry.generate.name</parameter> to 0 unless
you want get quite strange output.</para>


</refsect1>
</refentry>

<refentry id="refentry.title.properties">
<refmeta>
<refentrytitle>refentry.title.properties</refentrytitle>
<refmiscinfo role="type">attribute set</refmiscinfo>
</refmeta>
<refnamediv>
<refname>refentry.title.properties</refname>
<refpurpose>Title properties for a refentry title</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="refentry.title.properties.frag">&lt;xsl:attribute-set name="refentry.title.properties"&gt;
  &lt;xsl:attribute name="font-family"&gt;
    &lt;xsl:value-of select="$title.font.family"/&gt;
  &lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="font-size"&gt;18pt&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="font-weight"&gt;bold&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after"&gt;1em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="hyphenate"&gt;false&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="keep-with-next.within-column"&gt;always&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.optimum"&gt;0.5em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.minimum"&gt;0.4em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.maximum"&gt;0.6em&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>FIXME:</para>

</refsect1>
</refentry>

<refentry id="refentry.xref.manvolnum">
<refmeta>
<refentrytitle>refentry.xref.manvolnum</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>refentry.xref.manvolnum</refname>
<refpurpose>Output <sgmltag>manvolnum</sgmltag> as part of 
<sgmltag>refentry</sgmltag> cross-reference?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="refentry.xref.manvolnum.frag">&lt;xsl:param name="refentry.xref.manvolnum"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>if true (non-zero), the <sgmltag>manvolnum</sgmltag> is used when cross-referencing
<sgmltag>refentry</sgmltag>s, either with <sgmltag>xref</sgmltag>
or <sgmltag>citerefentry</sgmltag>.
</para>

</refsect1>
</refentry>

</reference>

<reference><title>Tables</title>
<refentry id="default.table.width">
<refmeta>
<refentrytitle>default.table.width</refentrytitle>
<refmiscinfo role="type">length</refmiscinfo>
</refmeta>
<refnamediv>
<refname>default.table.width</refname>
<refpurpose>The default width of tables</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="default.table.width.frag">&lt;xsl:param name="default.table.width"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If specified, this value will be used for the WIDTH attribute on
tables that do not specify an alternate width (with the dbhtml processing
instruction).</para>

</refsect1>
</refentry>

<refentry id="nominal.table.width">
<refmeta>
<refentrytitle>nominal.table.width</refentrytitle>
<refmiscinfo role="type">length</refmiscinfo>
</refmeta>
<refnamediv>
<refname>nominal.table.width</refname>
<refpurpose>The (absolute) nominal width of tables</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="nominal.table.width.frag">&lt;xsl:param name="nominal.table.width"
           select="'6in'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>In order to convert CALS column widths into HTML column widths, it
is sometimes necessary to have an absolute table width to use for conversion
of mixed absolute and relative widths. This value must be an absolute
length (not a percentag).</para>

</refsect1>
</refentry>

<refentry id="table.cell.padding">
<refmeta>
<refentrytitle>table.cell.padding</refentrytitle>
<refmiscinfo role="type"/>
</refmeta>
<refnamediv>
<refname>table.cell.padding</refname>
<refpurpose/>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="table.cell.padding.frag">&lt;xsl:attribute-set name="table.cell.padding"&gt;
  &lt;xsl:attribute name="padding-left"&gt;2pt&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="padding-right"&gt;2pt&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="padding-top"&gt;2pt&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="padding-bottom"&gt;2pt&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>FIXME:</para>

</refsect1>
</refentry>

<refentry id="table.frame.border.thickness">
<refmeta>
<refentrytitle>table.frame.border.thickness</refentrytitle>
<refmiscinfo role="type"/>
</refmeta>
<refnamediv>
<refname>table.frame.border.thickness</refname>
<refpurpose>Specifies the thickness of the frame border</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="table.frame.border.thickness.frag">&lt;xsl:param name="table.frame.border.thickness"
           select="'0.5pt'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Specifies the thickness of the border on the table's frame.</para>

</refsect1>
</refentry>

<refentry id="table.frame.border.style">
<refmeta>
<refentrytitle>table.frame.border.style</refentrytitle>
<refmiscinfo role="type"/>
</refmeta>
<refnamediv>
<refname>table.frame.border.style</refname>
<refpurpose/>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="table.frame.border.style.frag">&lt;xsl:param name="table.frame.border.style"
           select="'solid'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>FIXME:</para>

</refsect1>
</refentry>

<refentry id="table.frame.border.color">
<refmeta>
<refentrytitle>table.frame.border.color</refentrytitle>
<refmiscinfo role="type"/>
</refmeta>
<refnamediv>
<refname>table.frame.border.color</refname>
<refpurpose/>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="table.frame.border.color.frag">
&lt;xsl:param name="table.frame.border.color"
           select="'black'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>FIXME:</para>

</refsect1>
</refentry>

<refentry id="table.cell.border.thickness">
<refmeta>
<refentrytitle>table.cell.border.thickness</refentrytitle>
<refmiscinfo role="type"/>
</refmeta>
<refnamediv>
<refname>table.cell.border.thickness</refname>
<refpurpose/>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="table.cell.border.thickness.frag">&lt;xsl:param name="table.cell.border.thickness"
           select="'0.5pt'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>FIXME:</para>

</refsect1>
</refentry>

<refentry id="table.cell.border.style">
<refmeta>
<refentrytitle>table.cell.border.style</refentrytitle>
<refmiscinfo role="type"/>
</refmeta>
<refnamediv>
<refname>table.cell.border.style</refname>
<refpurpose/>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="table.cell.border.style.frag">&lt;xsl:param name="table.cell.border.style"
           select="'solid'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>FIXME:</para>

</refsect1>
</refentry>

<refentry id="table.cell.border.color">
<refmeta>
<refentrytitle>table.cell.border.color</refentrytitle>
<refmiscinfo role="type"/>
</refmeta>
<refnamediv>
<refname>table.cell.border.color</refname>
<refpurpose/>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="table.cell.border.color.frag">
&lt;xsl:param name="table.cell.border.color"
           select="'black'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>FIXME:</para>

</refsect1>
</refentry>

</reference>

<reference><title>Linking</title>
<refentry id="target.database.document"> 
<refmeta> 
<refentrytitle>target.database.document</refentrytitle> 
<refmiscinfo role="type">uri</refmiscinfo> 
</refmeta> 
<refnamediv> 
<refname>target.database.document</refname> 
<refpurpose>Name of master database file for resolving
olinks</refpurpose> 
</refnamediv> 
<refsynopsisdiv> <src:fragment id="target.database.document.frag">&lt;xsl:param name="target.database.document"
           select="''"/&gt;</src:fragment> 
</refsynopsisdiv> 
<refsect1>
<title>Description</title> 
<para>
To resolve olinks between documents, the stylesheets use
a master database document that identifies the  target datafiles for all the documents within the scope
of the olinks. This parameter value is the URI of 
the master document to be read during processing to resolve olinks.
The default value is <filename moreinfo="none">olinkdb.xml</filename>.</para>
<para>The data structure of the file is defined in the <filename moreinfo="none">targetdatabase.dtd</filename> DTD.  The database file provides the high level elements to record the identifiers, locations, and relationships of documents. The cross reference data for individual documents is generally pulled into the database using system entity references or XIncludes. See also <parameter moreinfo="none">targets.filename</parameter>.

</para> 
</refsect1> 
</refentry> 

<refentry id="use.local.olink.style"> 
<refmeta> 
<refentrytitle>use.local.olink.style</refentrytitle> 
<refmiscinfo role="type">boolean</refmiscinfo> 
</refmeta> 
<refnamediv> 
<refname>use.local.olink.style</refname> 
<refpurpose>Process olinks using xref style of current
document</refpurpose> 
</refnamediv> 
<refsynopsisdiv> <src:fragment id="use.local.olink.style.frag">&lt;xsl:param name="use.local.olink.style"
           select="0"/&gt; </src:fragment> 
</refsynopsisdiv> 
<refsect1> 
<title>Description</title> 
<para>When cross reference data is collected for use by olinks, the data for each potential target includes one field containing a completely assembled cross reference string, as if it were an xref generated in that document. Other fields record the separate title, number, and element name of each target. When an olink is formed to a target from another document, the olink resolves to that preassembled string by default. If the <parameter moreinfo="none">use.local.olink.style</parameter> parameter is set to non-zero, then instead the cross
reference string is formed again from the target title, number, and
element name, using the stylesheet processing the targeting document.
Then olinks will match the xref style in the targeting document
rather than in the target document. If  both documents are processed
with the same stylesheet, then the results will be the same.</para> 
</refsect1> 
</refentry> 

<refentry id="current.docid"> 
<refmeta> 
<refentrytitle>current.docid</refentrytitle> 
<refmiscinfo role="type">string</refmiscinfo> 
</refmeta> 
<refnamediv> 
<refname>current.docid</refname> 
<refpurpose>targetdoc identifier for the document being
processed</refpurpose> 
</refnamediv> 
<refsynopsisdiv> <src:fragment id="current.docid.frag">&lt;xsl:param name="current.docid"
           select="''"/&gt; </src:fragment> 
</refsynopsisdiv> 
<refsect1> 
<title>Description</title> 
<para>When olinks between documents are resolved for HTML output, the stylesheet can compute the relative path between the current document and the target document. The stylesheet needs to know the <literal moreinfo="none">targetdoc</literal> identifiers for both documents, as they appear in the <parameter moreinfo="none">target.database.document</parameter> database file. This parameter passes to the stylesheet
the targetdoc identifier of the current document, since that
identifier does not appear in the document itself. </para>
<para>This parameter can also be used for print output. If an olink's  <literal moreinfo="none">targetdoc</literal>  id differs from the <literal moreinfo="none">current.docid</literal>, then the stylesheet can append the target document's title to the generated olink text. That identifies to the reader that the link is to a different document, not the current document. See also <parameter moreinfo="none">olink.doctitle</parameter> to enable that feature.</para> 
</refsect1> 
</refentry> 

<refentry id="olink.doctitle"> 
<refmeta> 
<refentrytitle>olink.doctitle</refentrytitle> 
<refmiscinfo role="type">boolean</refmiscinfo> 
</refmeta> 
<refnamediv> 
<refname>olink.doctitle</refname> 
<refpurpose>show the document title for external olinks?</refpurpose>

</refnamediv> 
<refsynopsisdiv> <src:fragment id="olink.doctitle.frag">&lt;xsl:param name="olink.doctitle"
           select="0"/&gt; </src:fragment> 
</refsynopsisdiv> 
<refsect1> 
<title>Description</title> 
<para>When olinks between documents are resolved for print output, the generated text may not make it clear that the reference is to another document. It is possible for the stylesheets to append the other document's title to external olinks. For this to happen, two parameters must be set. The <parameter moreinfo="none">olink.doctitle</parameter> parameter should be set to nonzero to enable this
feature. And you should set the <parameter moreinfo="none">current.docid</parameter> parameter to the document id for the  document currently
being processed for output.  If an olink's  <literal moreinfo="none">targetdoc</literal>  id differs from the <literal moreinfo="none">current.docid</literal>, then the stylesheet can append the target document's
title to the generated olink text. </para> 
</refsect1> 
</refentry> 

</reference>

<reference><title>QAndASet</title>
<refentry id="qandadiv.autolabel">
<refmeta>
<refentrytitle>qandadiv.autolabel</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>qandadiv.autolabel</refname>
<refpurpose>Are divisions in QAndASets enumerated?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="qandadiv.autolabel.frag">&lt;xsl:param name="qandadiv.autolabel"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true (non-zero), unlabeled qandadivs will be enumerated.
</para>

</refsect1>
</refentry>

<refentry id="qanda.inherit.numeration">
<refmeta>
<refentrytitle>qanda.inherit.numeration</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>qanda.inherit.numeration</refname>
<refpurpose>Does enumeration of QandASet components inherit the numeration of parent elements?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="qanda.inherit.numeration.frag">&lt;xsl:param name="qanda.inherit.numeration"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true (non-zero), numbered QandADiv elements and Questions and Answers inherit
the numeration of the ancestors of the QandASet.
</para>

</refsect1>
</refentry>

</reference>

<reference><title>Bibliography</title>
<refentry id="biblioentry.item.separator">
<refmeta>
<refentrytitle>biblioentry.item.separator</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>biblioentry.item.separator</refname>
<refpurpose>Text to separate bibliography entries</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="biblioentry.item.separator.frag">&lt;xsl:param name="biblioentry.item.separator"&gt;. &lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Text to separate bibliography entries
</para>

</refsect1>
</refentry>

<refentry id="bibliography.collection">
<refmeta>
<refentrytitle>bibliography.collection</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>bibliography.collection</refname>
<refpurpose>Name of the bibliography collection file</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="bibliography.collection.frag">&lt;xsl:param name="bibliography.collection"
           select="'http://docbook.sourceforge.net/release/bibliography/bibliography.xml'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Maintaining bibliography entries across a set of documents is tedious, time
consuming, and error prone. It makes much more sense, usually, to store all of
the bibliography entries in a single place and simply <quote>extract</quote>
the ones you need in each document.</para>

<para>That's the purpose of the
<parameter moreinfo="none">bibliography.collection</parameter> parameter. To setup a global
bibliography <quote>database</quote>, follow these steps:</para>

<para>First, create a stand-alone bibliography document that contains all of
the documents that you wish to reference. Make sure that each bibliography
entry (whether you use <sgmltag>biblioentry</sgmltag> or <sgmltag>bibliomixed</sgmltag>)
has an ID.</para>

<para>My global bibliography, <filename moreinfo="none">~/bibliography.xml</filename> begins
like this:</para>

<informalexample>
<programlisting format="linespecific">&lt;!DOCTYPE bibliography
  PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd"&gt;
&lt;bibliography&gt;&lt;title&gt;References&lt;/title&gt;

&lt;bibliomixed id="xml-rec"&gt;&lt;abbrev&gt;XML 1.0&lt;/abbrev&gt;Tim Bray,
Jean Paoli, C. M. Sperberg-McQueen, and Eve Maler, editors.
&lt;citetitle&gt;&lt;ulink url="http://www.w3.org/TR/REC-xml"&gt;Extensible Markup
Language (XML) 1.0 Second Edition&lt;/ulink&gt;&lt;/citetitle&gt;.
World Wide Web Consortium, 2000.
&lt;/bibliomixed&gt;

&lt;bibliomixed id="xml-names"&gt;&lt;abbrev&gt;Namespaces&lt;/abbrev&gt;Tim Bray,
Dave Hollander,
and Andrew Layman, editors.
&lt;citetitle&gt;&lt;ulink url="http://www.w3.org/TR/REC-xml-names/"&gt;Namespaces in
XML&lt;/ulink&gt;&lt;/citetitle&gt;.
World Wide Web Consortium, 1999.
&lt;/bibliomixed&gt;

&lt;!-- ... --&gt;
&lt;/bibliography&gt;
</programlisting>
</informalexample>

<para>When you create a bibliography in your document, simply
provide <emphasis>empty</emphasis> <sgmltag>bibliomixed</sgmltag>
entries for each document that you wish to cite. Make sure that these
elements have the same ID as the corresponding <quote>real</quote>
entry in your global bibliography.</para>

<para>For example:</para>

<informalexample>
<programlisting format="linespecific">&lt;bibliography&gt;&lt;title&gt;Bibliography&lt;/title&gt;

&lt;bibliomixed id="xml-rec"/&gt;
&lt;bibliomixed id="xml-names"/&gt;
&lt;bibliomixed id="DKnuth86"&gt;Donald E. Knuth. &lt;citetitle&gt;Computers and
Typesetting: Volume B, TeX: The Program&lt;/citetitle&gt;. Addison-Wesley,
1986.  ISBN 0-201-13437-3.
&lt;/bibliomixed&gt;
&lt;bibliomixed id="relaxng"/&gt;

&lt;/bibliography&gt;</programlisting>
</informalexample>

<para>Note that it's perfectly acceptable to mix entries from your
global bibliography with <quote>normal</quote> entries. You can use
<sgmltag>xref</sgmltag> or other elements to cross-reference your
bibliography entries in exactly the same way you do now.</para>

<para>Finally, when you are ready to format your document, simply set the
<parameter moreinfo="none">bibliography.collection</parameter> parameter (in either a
customization layer or directly through your processor's interface) to
point to your global bibliography.</para>

<para>The stylesheets will format the bibliography in your document as if
all of the entries referenced appeared there literally.</para>

</refsect1>
</refentry>

<refentry id="bibliography.numbered">
<refmeta>
<refentrytitle>bibliography.numbered</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>bibliography.numbered</refname>
<refpurpose>Should bibliography entries be numbered?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="bibliography.numbered.frag">&lt;xsl:param name="bibliography.numbered"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero bibliography entries will be numbered</para>

</refsect1>
</refentry>

</reference>

<reference><title>Glossary</title>
<refentry id="glossterm.auto.link">
<refmeta>
<refentrytitle>glossterm.auto.link</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>glossterm.auto.link</refname>
<refpurpose>Generate links from glossterm to glossentry automaticaly?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="glossterm.auto.link.frag">&lt;xsl:param name="glossterm.auto.link"
           select="'0'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true, a link will be automatically created from glossterm 
to glossentry for that glossary term. This is usefull when your
glossterm names are consistent and you don't want to add links
manually.</para>
<para>If there is <sgmltag class="attribute">linkend</sgmltag> on
<sgmltag>glossterm</sgmltag> then is used instead of autogeneration of
link.</para>

</refsect1>
</refentry>

<refentry id="firstterm.only.link">
<refmeta>
<refentrytitle>firstterm.only.link</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>firstterm.only.link</refname>
<refpurpose>Does automatic glossterm linking only apply to firstterms?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="firstterm.only.link.frag">&lt;xsl:param name="firstterm.only.link"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true, only <sgmltag>firstterm</sgmltag>s will be automatically linked
to the glossary. If glossary linking is not enabled, this parameter
has no effect.</para>

</refsect1>
</refentry>

<refentry id="glossary.collection">
<refmeta>
<refentrytitle>glossary.collection</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>glossary.collection</refname>
<refpurpose>Name of the glossary collection file</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="glossary.collection.frag">&lt;xsl:param name="glossary.collection"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Glossaries maintained independently across a set of documents
are likely to become inconsistent unless considerable effort is
expended to keep them in sync. It makes much more sense, usually, to
store all of the glossary entries in a single place and simply
<quote>extract</quote> the ones you need in each document.</para>

<para>That's the purpose of the
<parameter moreinfo="none">glossary.collection</parameter> parameter. To setup a global
glossary <quote>database</quote>, follow these steps:</para>

<refsect2><title>Setting Up the Glossary Database</title>

<para>First, create a stand-alone glossary document that contains all of
the entries that you wish to reference. Make sure that each glossary
entry has an ID.</para>

<para>Here's an example glossary:</para>

<informalexample>
<programlisting format="linespecific">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE glossary
  PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd"&gt;
&lt;glossary&gt;
&lt;glossaryinfo&gt;
&lt;editor&gt;&lt;firstname&gt;Eric&lt;/firstname&gt;&lt;surname&gt;Raymond&lt;/surname&gt;&lt;/editor&gt;
&lt;title&gt;Jargon File 4.2.3 (abridged)&lt;/title&gt;
&lt;releaseinfo&gt;Just some test data&lt;/releaseinfo&gt;
&lt;/glossaryinfo&gt;

&lt;glossdiv&gt;&lt;title&gt;0&lt;/title&gt;

&lt;glossentry&gt;
&lt;glossterm&gt;0&lt;/glossterm&gt;
&lt;glossdef&gt;
&lt;para&gt;Numeric zero, as opposed to the letter `O' (the 15th letter of
the English alphabet). In their unmodified forms they look a lot
alike, and various kluges invented to make them visually distinct have
compounded the confusion. If your zero is center-dotted and letter-O
is not, or if letter-O looks almost rectangular but zero looks more
like an American football stood on end (or the reverse), you're
probably looking at a modern character display (though the dotted zero
seems to have originated as an option on IBM 3270 controllers). If
your zero is slashed but letter-O is not, you're probably looking at
an old-style ASCII graphic set descended from the default typewheel on
the venerable ASR-33 Teletype (Scandinavians, for whom /O is a letter,
curse this arrangement). (Interestingly, the slashed zero long
predates computers; Florian Cajori's monumental "A History of
Mathematical Notations" notes that it was used in the twelfth and
thirteenth centuries.) If letter-O has a slash across it and the zero
does not, your display is tuned for a very old convention used at IBM
and a few other early mainframe makers (Scandinavians curse &lt;emphasis&gt;this&lt;/emphasis&gt;
arrangement even more, because it means two of their letters collide).
Some Burroughs/Unisys equipment displays a zero with a &lt;emphasis&gt;reversed&lt;/emphasis&gt;
slash. Old CDC computers rendered letter O as an unbroken oval and 0
as an oval broken at upper right and lower left. And yet another
convention common on early line printers left zero unornamented but
added a tail or hook to the letter-O so that it resembled an inverted
Q or cursive capital letter-O (this was endorsed by a draft ANSI
standard for how to draw ASCII characters, but the final standard
changed the distinguisher to a tick-mark in the upper-left corner).
Are we sufficiently confused yet?&lt;/para&gt;
&lt;/glossdef&gt;
&lt;/glossentry&gt;

&lt;glossentry&gt;
&lt;glossterm&gt;1TBS&lt;/glossterm&gt;
&lt;glossdef&gt;
&lt;para role="accidence"&gt;
&lt;phrase role="pronounce"&gt;&lt;/phrase&gt;
&lt;phrase role="partsofspeach"&gt;n&lt;/phrase&gt;
&lt;/para&gt;
&lt;para&gt;The "One True Brace Style"&lt;/para&gt;
&lt;glossseealso&gt;indent style&lt;/glossseealso&gt;
&lt;/glossdef&gt;
&lt;/glossentry&gt;

&lt;!-- ... --&gt;

&lt;/glossdiv&gt;

&lt;!-- ... --&gt;

&lt;/glossary&gt;</programlisting>
</informalexample>

</refsect2>

<refsect2><title>Marking Up Glossary Terms</title>

<para>That takes care of the glossary database, now you have to get the entries
into your document. Unlike bibliography entries, which can be empty, creating
<quote>placeholder</quote> glossary entries would be very tedious. So instead,
support for <parameter moreinfo="none">glossary.collection</parameter> relies on implicit linking.</para>

<para>In your source document, simply use <sgmltag>firstterm</sgmltag> and
<sgmltag>glossterm</sgmltag> to identify the terms you wish to have included
in the glossary. The stylesheets assume that you will either set the
<sgmltag class="attribute">baseform</sgmltag> attribute correctly, or that the
content of the element exactly matches a term in your glossary.</para>

<para>If you're using a <parameter moreinfo="none">glossary.collection</parameter>, don't
make explicit links on the terms in your document.</para>

<para>So, in your document, you might write things like this:</para>

<informalexample>
<programlisting format="linespecific">&lt;para&gt;This is dummy text, without any real meaning.
The point is simply to reference glossary terms like &lt;glossterm&gt;0&lt;/glossterm&gt;
and the &lt;firstterm baseform="1TBS"&gt;One True Brace Style (1TBS)&lt;/firstterm&gt;.
The &lt;glossterm&gt;1TBS&lt;/glossterm&gt;, as you can probably imagine, is a nearly
religious issue.&lt;/para&gt;</programlisting>
</informalexample>

<para>If you set the <parameter moreinfo="none">firstterm.only.link</parameter> parameter,
only the terms marked with <sgmltag>firstterm</sgmltag> will be links.
Otherwise, all the terms will be linked.</para>

</refsect2>

<refsect2><title>Marking Up the Glossary</title>

<para>The glossary itself has to be identified for the stylesheets. For lack
of a better choice, the <sgmltag class="attribute">role</sgmltag> is used.
To identify the glossary as the target for automatic processing, set
the role to <quote><literal moreinfo="none">auto</literal></quote>. The title of this
glossary (and any other information from the <sgmltag>glossaryinfo</sgmltag>
that's rendered by your stylesheet) will be displayed, but the entries will
come from the database.
</para>

<para>Unfortunately, the glossary can't be empty, so you must put in
at least one <sgmltag>glossentry</sgmltag>. The content of this entry
is irrelevant, it will not be rendered:</para>

<informalexample>
<programlisting format="linespecific">&lt;glossary role="auto"&gt;
&lt;glossentry&gt;
&lt;glossterm&gt;Irrelevant&lt;/glossterm&gt;
&lt;glossdef&gt;
&lt;para&gt;If you can see this, the document was processed incorrectly. Use
the &lt;parameter&gt;glossary.collection&lt;/parameter&gt; parameter.&lt;/para&gt;
&lt;/glossdef&gt;
&lt;/glossentry&gt;
&lt;/glossary&gt;</programlisting>
</informalexample>

<para>What about glossary divisions? If your glossary database has glossary
divisions <emphasis>and</emphasis> your automatic glossary contains at least
one <sgmltag>glossdiv</sgmltag>, the automic glossary will have divisions.
If the <sgmltag>glossdiv</sgmltag> is missing from either location, no divisions
will be rendered.</para>

<para>Glossary entries (and divisions, if appropriate) in the glossary will
occur in precisely the order they occur in your database.</para>

</refsect2>

<refsect2><title>Formatting the Document</title>

<para>Finally, when you are ready to format your document, simply set the
<parameter moreinfo="none">glossary.collection</parameter> parameter (in either a
customization layer or directly through your processor's interface) to
point to your global glossary.</para>

<para>The stylesheets will format the glossary in your document as if
all of the entries implicilty referenced appeared there literally.</para>
</refsect2>

<refsect2><title>Limitations</title>

<para>Glossary cross-references <emphasis>within the glossary</emphasis> are
not supported. For example, this <emphasis>will not</emphasis> work:</para>

<informalexample>
<programlisting format="linespecific">&lt;glossentry&gt;
&lt;glossterm&gt;gloss-1&lt;/glossterm&gt;
&lt;glossdef&gt;&lt;para&gt;A description that references &lt;glossterm&gt;gloss-2&lt;/glossterm&gt;.&lt;/para&gt;
&lt;glossseealso&gt;gloss-2&lt;/glossseealso&gt;
&lt;/glossdef&gt;
&lt;/glossentry&gt;</programlisting>
</informalexample>

<para>If you put glossary cross-references in your glossary that way,
you'll get the cryptic error: <computeroutput moreinfo="none">Warning:
glossary.collection specified, but there are 0 automatic
glossaries</computeroutput>.</para>

<para>Instead, you must do two things:</para>

<orderedlist inheritnum="ignore" continuation="restarts">
<listitem>
<para>Markup your glossary using <sgmltag>glossseealso</sgmltag>:</para>

<informalexample>
<programlisting format="linespecific">&lt;glossentry&gt;
&lt;glossterm&gt;gloss-1&lt;/glossterm&gt;
&lt;glossdef&gt;&lt;para&gt;A description that references &lt;glossterm&gt;gloss-2&lt;/glossterm&gt;.&lt;/para&gt;
&lt;glossseealso&gt;gloss-2&lt;/glossseealso&gt;
&lt;/glossdef&gt;
&lt;/glossentry&gt;</programlisting>
</informalexample>
</listitem>

<listitem>
<para>Make sure there is at least one <sgmltag>glossterm</sgmltag> reference to
<glossterm>gloss-2</glossterm> <emphasis>in your document</emphasis>. The
easiest way to do that is probably within a <sgmltag>remark</sgmltag> in your
automatic glossary:</para>

<informalexample>
<programlisting format="linespecific">&lt;glossary role="auto"&gt;
&lt;remark&gt;Make sure there's a reference to &lt;glossterm&gt;gloss-2&lt;/glossterm&gt;.&lt;/remark&gt;
&lt;glossentry&gt;
&lt;glossterm&gt;Irrelevant&lt;/glossterm&gt;
&lt;glossdef&gt;
&lt;para&gt;If you can see this, the document was processed incorrectly. Use
the &lt;parameter&gt;glossary.collection&lt;/parameter&gt; parameter.&lt;/para&gt;
&lt;/glossdef&gt;
&lt;/glossentry&gt;
&lt;/glossary&gt;</programlisting>
</informalexample>
</listitem>
</orderedlist>
</refsect2>

</refsect1>
</refentry>

<refentry id="glossterm.separation">
<refmeta>
<refentrytitle>glossterm.separation</refentrytitle>
<refmiscinfo role="type">length</refmiscinfo>
</refmeta>
<refnamediv>
<refname>glossterm.separation</refname>
<refpurpose>Separation between glossary terms and descriptions in list mode</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="glossterm.separation.frag">&lt;xsl:param name="glossterm.separation"
           select="'0.25in'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Specifies the separation between glossary terms and descriptions when
glossarys are presented using lists.</para>

</refsect1>
</refentry>

<refentry id="glossterm.width">
<refmeta>
<refentrytitle>glossterm.width</refentrytitle>
<refmiscinfo role="type">length</refmiscinfo>
</refmeta>
<refnamediv>
<refname>glossterm.width</refname>
<refpurpose>Width of glossterm in list presentation mode</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="glossterm.width.frag">&lt;xsl:param name="glossterm.width"
           select="'2in'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>This parameter specifies the width reserved for glossary terms when
a list presentation is used.</para>

</refsect1>
</refentry>

<refentry id="glossary.as.blocks">
<refmeta>
<refentrytitle>glossary.as.blocks</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>glossary.as.blocks</refname>
<refpurpose>Present glossarys using blocks instead of lists?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="glossary.as.blocks.frag">&lt;xsl:param name="glossary.as.blocks"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, <sgmltag>glossary</sgmltag>s will be formatted as
blocks.</para>

<para>If you have long <sgmltag>glossterm</sgmltag>s, proper list
markup in the FO case may produce unattractive lists. By setting this
parameter, you can force the stylesheets to produce block markup
instead of proper lists.</para>

<para>You can override this setting with a processing instruction as the
child of <sgmltag>glossary</sgmltag>: <sgmltag class="pi">dbfo
glossary-presentation="blocks"</sgmltag> or <sgmltag class="pi">dbfo
glossary-presentation="list"</sgmltag></para>

</refsect1>
</refentry>

<refentry id="glosslist.as.blocks">
<refmeta>
<refentrytitle>glosslist.as.blocks</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>glosslist.as.blocks</refname>
<refpurpose>Use blocks for glosslists?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="glosslist.as.blocks.frag">&lt;xsl:param name="glosslist.as.blocks"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>See <parameter moreinfo="none">glossary.as.blocks</parameter>.</para>

</refsect1>
</refentry>

<refentry id="glossentry.show.acronym">
<refmeta>
<refentrytitle>glossentry.show.acronym</refentrytitle>
<refmiscinfo role="type">list</refmiscinfo>
</refmeta>
<refnamediv>
<refname>glossentry.show.acronym</refname>
<refpurpose>Display <sgmltag>glossentry</sgmltag> acronyms?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="glossentry.show.acronym.frag">&lt;xsl:param name="glossentry.show.acronym"
           select="'no'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>A setting of <quote>yes</quote> means they should be displayed;
<quote>no</quote> means they shouldn't. If <quote>primary</quote> is used,
then they are shown as the primary text for the entry.</para>

<note>
<para>This setting controls both <sgmltag>acronym</sgmltag> and
<sgmltag>abbrev</sgmltag> elements in the <sgmltag>glossentry</sgmltag>.</para>
</note>

</refsect1>
</refentry>

</reference>

<reference><title>Miscellaneous</title>
<refentry id="formal.procedures">
<refmeta>
<refentrytitle>formal.procedures</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>formal.procedures</refname>
<refpurpose>Selects formal or informal procedures</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="formal.procedures.frag">&lt;xsl:param name="formal.procedures"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Formal procedures are numbered and always have a title.
</para>

</refsect1>
</refentry>

<refentry id="formal.title.placement">
<refmeta>
<refentrytitle>formal.title.placement</refentrytitle>
<refmiscinfo role="type"/>
</refmeta>
<refnamediv>
<refname>formal.title.placement</refname>
<refpurpose/>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="formal.title.placement.frag">&lt;xsl:param name="formal.title.placement"&gt;
figure before
example before
equation before
table before
procedure before
&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Specifies where formal object titles should occur. For each formal object
type (<sgmltag>figure</sgmltag>,
<sgmltag>example</sgmltag>,
<sgmltag>equation</sgmltag>,
<sgmltag>table</sgmltag>, and <sgmltag>procedure</sgmltag>)
you can specify either the keyword
<quote><literal moreinfo="none">before</literal></quote> or
<quote><literal moreinfo="none">after</literal></quote>.</para>

</refsect1>
</refentry>

<refentry id="runinhead.default.title.end.punct">
<refmeta>
<refentrytitle>runinhead.default.title.end.punct</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>runinhead.default.title.end.punct</refname>
<refpurpose>Default punctuation character on a run-in-head</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="runinhead.default.title.end.punct.frag">&lt;xsl:param name="runinhead.default.title.end.punct"
           select="'.'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>FIXME:
</para>

</refsect1>
</refentry>

<refentry id="runinhead.title.end.punct">
<refmeta>
<refentrytitle>runinhead.title.end.punct</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>runinhead.title.end.punct</refname>
<refpurpose>Characters that count as punctuation on a run-in-head</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="runinhead.title.end.punct.frag">&lt;xsl:param name="runinhead.title.end.punct"
           select="'.!?:'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>FIXME:
</para>

</refsect1>
</refentry>

<refentry id="show.comments">
<refmeta>
<refentrytitle>show.comments</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>show.comments</refname>
<refpurpose>Display <sgmltag>comment</sgmltag> elements?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="show.comments.frag">&lt;xsl:param name="show.comments"&gt;1&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true (non-zero), comments will be displayed, otherwise they are suppressed.
Comments here refers to the <sgmltag>comment</sgmltag> element,
which will be renamed <sgmltag>remark</sgmltag> in DocBook V4.0,
not XML comments (&lt;-- like this --&gt;) which are unavailable.
</para>

</refsect1>
</refentry>

<refentry id="punct.honorific">
<refmeta>
<refentrytitle>punct.honorific</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>punct.honorific</refname>
<refpurpose>Punctuation after an honorific in a personal name.</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="punct.honorific.frag">&lt;xsl:param name="punct.honorific"
           select="'.'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>This parameter specifies the punctuation that should be added after an
honorific in a personal name.</para>

</refsect1>
</refentry>

<refentry id="segmentedlist.as.table">
<refmeta>
<refentrytitle>segmentedlist.as.table</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>segmentedlist.as.table</refname>
<refpurpose>Format segmented lists as tables?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="segmentedlist.as.table.frag">&lt;xsl:param name="segmentedlist.as.table"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, <sgmltag>segmentedlist</sgmltag>s will be formatted as
tables.</para>

</refsect1>
</refentry>

<refentry id="variablelist.as.blocks">
<refmeta>
<refentrytitle>variablelist.as.blocks</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>variablelist.as.blocks</refname>
<refpurpose>Format <sgmltag>variablelist</sgmltag>s lists as blocks?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="variablelist.as.blocks.frag">&lt;xsl:param name="variablelist.as.blocks"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, <sgmltag>variablelist</sgmltag>s will be formatted as
blocks.</para>

<para>If you have long terms, proper list markup in the FO case may produce
unattractive lists. By setting this parameter, you can force the stylesheets
to produce block markup instead of proper lists.</para>

<para>You can override this setting with a processing instruction as the
child of <sgmltag>variablelist</sgmltag>: <sgmltag class="pi">dbfo
list-presentation="blocks"</sgmltag> or <sgmltag class="pi">dbfo
list-presentation="list"</sgmltag></para>

<programlisting format="linespecific">  &lt;variablelist&gt;
        &lt;?dbfo list-presentation="list"?&gt;
        &lt;varlistentry&gt;
          &lt;term&gt;list&lt;/term&gt;
          &lt;listitem&gt;
                &lt;para&gt;
                  Formatted as a list even if variablelist.as.blocks is set to 1.
                &lt;/para&gt;
          &lt;/listitem&gt;
        &lt;/varlistentry&gt;
  &lt;/variablelist&gt;</programlisting>
</refsect1>

</refentry>

<refentry id="blockquote.properties">
<refnamediv>
<refname>blockquote.properties</refname>
<refpurpose>To set the style for block quotations.</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="blockquote.properties.frag">&lt;xsl:attribute-set name="blockquote.properties"&gt;
&lt;xsl:attribute name="start-indent"&gt;0.5in&lt;/xsl:attribute&gt;
&lt;xsl:attribute name="end-indent"&gt;0.5in&lt;/xsl:attribute&gt;
&lt;xsl:attribute name="space-after.minimum"&gt;0.5em&lt;/xsl:attribute&gt;
&lt;xsl:attribute name="space-after.optimum"&gt;1em&lt;/xsl:attribute&gt;
&lt;xsl:attribute name="space-after.maximum"&gt;2em&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The <parameter moreinfo="none">blockquote.properties</parameter> attribute set specifies
the formating properties of block quotations.</para>

</refsect1>
</refentry>

<refentry id="ulink.show">
<refmeta>
<refentrytitle>ulink.show</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>ulink.show</refname>
<refpurpose>Display URLs after <sgmltag>ulink</sgmltag>s?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="ulink.show.frag">&lt;xsl:param name="ulink.show"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, the URL of each <sgmltag>ULink</sgmltag> will
appear after the text of the link. If the text of the link and the URL
are identical, the URL is suppressed.</para>

</refsect1>
</refentry>

<refentry id="ulink.footnotes">
<refmeta>
<refentrytitle>ulink.footnotes</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>ulink.footnotes</refname>
<refpurpose>Generate footnotes for <sgmltag>ULink</sgmltag>s?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="ulink.footnotes.frag">&lt;xsl:param name="ulink.footnotes"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, the URL of each <sgmltag>ULink</sgmltag> will
appear as a footnote.
</para>

</refsect1>
</refentry>

<refentry id="ulink.footnote.number.format">
<refmeta>
<refentrytitle>ulink.footnote.number.format</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>ulink.footnote.number.format</refname>
<refpurpose>Identifies the format used for <sgmltag>ulink</sgmltag> footnote numbers</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="ulink.footnote.number.format.frag">&lt;xsl:param name="ulink.footnote.number.format"
           select="'1'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The <parameter moreinfo="none">ulink.footnote.number.format</parameter> specifies the format
to use for footnote numeration (1, i, I, a, or A).</para>

</refsect1>
</refentry>

<refentry id="ulink.hyphenate">
<refmeta>
<refentrytitle>ulink.hyphenate</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>ulink.hyphenate</refname>
<refpurpose>Allow URLs to be automatically hyphenated</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="ulink.hyphenate.frag">&lt;xsl:param name="ulink.hyphenate"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If not empty, the specified character (or more generally, content) is
added to URLs after every <quote>/</quote>. If the character specified is a
Unicode soft hyphen (0x00AD) or Unicode zero-width space (0x200B), some FO
processors will be able to reasonably hyphenate long URLs.</para>

<para>As of 28 Jan 2002, discretionary hyphens are more widely and correctly
supported than zero-width spaces for this purpose.</para>

</refsect1>
</refentry>

<refentry id="shade.verbatim">
<refmeta>
<refentrytitle>shade.verbatim</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>shade.verbatim</refname>
<refpurpose>Should verbatim environments be shaded?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="shade.verbatim.frag">&lt;xsl:param name="shade.verbatim"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>FIXME:</para>

</refsect1>
</refentry>

<refentry id="shade.verbatim.style">
<refmeta>
<refentrytitle>shade.verbatim.style</refentrytitle>
<refmiscinfo role="type"/>
</refmeta>
<refnamediv>
<refname>shade.verbatim.style</refname>
<refpurpose>Properties that specify the style of shaded verbatim listings</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="shade.verbatim.style.frag">
&lt;xsl:attribute-set name="shade.verbatim.style"&gt;
  &lt;xsl:attribute name="background-color"&gt;#E0E0E0&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>FIXME:</para>

</refsect1>
</refentry>

<refentry id="use.svg">
<refmeta>
<refentrytitle>use.svg</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>use.svg</refname>
<refpurpose>Allow SVG in the result tree?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="use.svg.frag">&lt;xsl:param name="use.svg"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, SVG will be considered an acceptable image format. SVG
is passed through to the result tree, so correct rendering of the resulting
diagram depends on the formatter (FO processor or web browser) that is used
to process the output from the stylesheet.</para>

</refsect1>
</refentry>

<refentry id="use.role.as.xrefstyle">
<refmeta>
<refentrytitle>use.role.as.xrefstyle</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>use.role.as.xrefstyle</refname>
<refpurpose>Use <sgmltag class="attribute">role</sgmltag> attribute for
<sgmltag class="attribute">xrefstyle</sgmltag> on <sgmltag>xref</sgmltag>?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="use.role.as.xrefstyle.frag">&lt;xsl:param name="use.role.as.xrefstyle"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, the <sgmltag class="attribute">role</sgmltag> attribute on
<sgmltag>xref</sgmltag> will be used to select the cross reference style.
The <ulink url="http://www.oasis-open.org/docbook/">DocBook
Technical Committee</ulink> recently added an
<sgmltag class="attribute">xrefstyle</sgmltag> attribute for this purpose.
If the <sgmltag class="attribute">xrefstyle</sgmltag> attribute
is present, <sgmltag class="attribute">role</sgmltag> will be ignored, regardless
of this setting.</para>

<para>Until an official DocBook release that includes the new
attribute, this flag allows <sgmltag class="attribute">role</sgmltag>
to serve that purpose.</para>

</refsect1>

<refsect1><title>Example</title>

<para>The following small stylesheet shows how to configure the stylesheets to make
use of the cross reference style:</para>

<programlisting format="linespecific">&lt;?xml version="1.0"?&gt;
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                version="1.0"&gt;

&lt;xsl:import href="../xsl/html/docbook.xsl"/&gt;

&lt;xsl:output method="html"/&gt;

&lt;xsl:param name="local.l10n.xml" select="document('')"/&gt;
&lt;l:i18n xmlns:l="http://docbook.sourceforge.net/xmlns/l10n/1.0"&gt;
  &lt;l:l10n xmlns:l="http://docbook.sourceforge.net/xmlns/l10n/1.0" language="en"&gt;
   &lt;l:context name="xref"&gt;
      &lt;l:template name="chapter" style="title" text="Chapter %n, %t"/&gt;
      &lt;l:template name="chapter" text="Chapter %n"/&gt;
    &lt;/l:context&gt;
  &lt;/l:l10n&gt;
&lt;/l:i18n&gt;

&lt;/xsl:stylesheet&gt;</programlisting>

<para>With this stylesheet, the cross references in the following document:</para>

<programlisting format="linespecific">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
                  "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"&gt;
&lt;book id="book"&gt;&lt;title&gt;Book&lt;/title&gt;

&lt;preface&gt;
&lt;title&gt;Preface&lt;/title&gt;

&lt;para&gt;Normal: &lt;xref linkend="ch1"/&gt;.&lt;/para&gt;
&lt;para&gt;Title: &lt;xref xrefstyle="title" linkend="ch1"/&gt;.&lt;/para&gt;

&lt;/preface&gt;

&lt;chapter id="ch1"&gt;
&lt;title&gt;First Chapter&lt;/title&gt;

&lt;para&gt;Irrelevant.&lt;/para&gt;

&lt;/chapter&gt;
&lt;/book&gt;</programlisting>

<para>will appear as:</para>

<informalexample>
<para>Normal: Chapter 1.</para>
<para>Title: Chapter 1, <emphasis>First Chapter</emphasis>.</para>
</informalexample>
</refsect1>

</refentry>

<refentry id="menuchoice.separator">
<refmeta>
<refentrytitle>menuchoice.separator</refentrytitle>
<refmiscinfo role="type"/>
</refmeta>
<refnamediv>
<refname>menuchoice.separator</refname>
<refpurpose/>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="menuchoice.separator.frag">&lt;xsl:param name="menuchoice.separator"
           select="'+'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Separator used to connect items of a <sgmltag>menuchoice</sgmltag> other
than <sgmltag>guimenuitem</sgmltag> and <sgmltag>guisubmenu</sgmltag>. The latter
elements are linked with <parameter moreinfo="none">menuchoice.menu.separator</parameter>.
</para>

</refsect1>
</refentry>

<refentry id="menuchoice.menu.separator">
<refmeta>
<refentrytitle>menuchoice.menu.separator</refentrytitle>
<refmiscinfo role="type"/>
</refmeta>
<refnamediv>
<refname>menuchoice.menu.separator</refname>
<refpurpose/>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="menuchoice.menu.separator.frag">&lt;xsl:param name="menuchoice.menu.separator"
           select="'-&gt;'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Separator used to connect items of a <sgmltag>menuchoice</sgmltag> with
<sgmltag>guimenuitem</sgmltag> or <sgmltag>guisubmenu</sgmltag>. Other elements
are linked with <parameter moreinfo="none">menuchoice.separator</parameter>.
</para>

</refsect1>
</refentry>

<refentry id="default.float.class">
<refmeta>
<refentrytitle>default.float.class</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>default.float.class</refname>
<refpurpose>Specifies the default float class</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="default.float.class.frag">&lt;xsl:param name="default.float.class"
           select="'before'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>FIXME:</para>

</refsect1>
</refentry>

<refentry id="footnote.number.format">
<refmeta>
<refentrytitle>footnote.number.format</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>footnote.number.format</refname>
<refpurpose>Identifies the format used for footnote numbers</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="footnote.number.format.frag">&lt;xsl:param name="footnote.number.format"
           select="'1'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The <parameter moreinfo="none">footnote.number.format</parameter> specifies the format
to use for footnote numeration (1, i, I, a, or A).</para>

</refsect1>
</refentry>

<refentry id="table.footnote.number.format">
<refmeta>
<refentrytitle>table.footnote.number.format</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>table.footnote.number.format</refname>
<refpurpose>Identifies the format used for footnote numbers in tables</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="table.footnote.number.format.frag">&lt;xsl:param name="table.footnote.number.format"
           select="'a'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The <parameter moreinfo="none">table.footnote.number.format</parameter> specifies the format
to use for footnote numeration (1, i, I, a, or A) in tables.</para>

</refsect1>
</refentry>

<refentry id="footnote.number.symbols">
<refmeta>
<refentrytitle>footnote.number.symbols</refentrytitle>
<refmiscinfo role="type"/>
</refmeta>
<refnamediv>
<refname>footnote.number.symbols</refname>
<refpurpose/>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="footnote.number.symbols.frag">&lt;xsl:param name="footnote.number.symbols"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If <parameter moreinfo="none">footnote.number.symbols</parameter> is not the empty string,
footnotes will use the characters it contains as footnote symbols. For example,
<quote>*&amp;#x2020;&amp;#x2021;&amp;#x25CA;&amp;#x2720;</quote> will identify
footnotes with <quote>*</quote>, <quote>†</quote>, <quote>‡</quote>,
<quote>◊</quote>, and <quote>✠</quote>. If there are more footnotes
than symbols, the stylesheets will fall back to numbered footnotes using
<parameter moreinfo="none">footnote.number.format</parameter>.</para>

<para>The use of symbols for footnotes depends on the ability of your
processor (or browser) to render the symbols you select. Not all systems are
capable of displaying the full range of Unicode characters. If the quoted characters
in the preceding paragraph are not displayed properly, that's a good indicator
that you may have trouble using those symbols for footnotes.</para>

</refsect1>
</refentry>

<refentry id="table.footnote.number.symbols">
<refmeta>
<refentrytitle>table.footnote.number.symbols</refentrytitle>
<refmiscinfo role="type"/>
</refmeta>
<refnamediv>
<refname>table.footnote.number.symbols</refname>
<refpurpose/>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="table.footnote.number.symbols.frag">&lt;xsl:param name="table.footnote.number.symbols"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If <parameter moreinfo="none">table.footnote.number.symbols</parameter> is not the empty string,
table footnotes will use the characters it contains as footnote symbols. For example,
<quote>*&amp;#x2020;&amp;#x2021;&amp;#x25CA;&amp;#x2720;</quote> will identify
footnotes with <quote>*</quote>, <quote>†</quote>, <quote>‡</quote>,
<quote>◊</quote>, and <quote>✠</quote>. If there are more footnotes
than symbols, the stylesheets will fall back to numbered footnotes using
<parameter moreinfo="none">table.footnote.number.format</parameter>.</para>

<para>The use of symbols for footnotes depends on the ability of your
processor (or browser) to render the symbols you select. Not all systems are
capable of displaying the full range of Unicode characters. If the quoted characters
in the preceding paragraph are not displayed properly, that's a good indicator
that you may have trouble using those symbols for footnotes.</para>

</refsect1>
</refentry>

<refentry id="xref.with.number.and.title">
<refmeta>
<refentrytitle>xref.with.number.and.title</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>xref.with.number.and.title</refname>
<refpurpose>Use number and title in cross references</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="xref.with.number.and.title.frag">&lt;xsl:param name="xref.with.number.and.title"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>FIXME:</para>

</refsect1>
</refentry>

</reference>

<reference><title>Graphics</title>
<refentry id="graphic.default.extension">
<refmeta>
<refentrytitle>graphic.default.extension</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>graphic.default.extension</refname>
<refpurpose>Default extension for graphic filenames</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="graphic.default.extension.frag">&lt;xsl:param name="graphic.default.extension"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If a <sgmltag>graphic</sgmltag> or <sgmltag>mediaobject</sgmltag>
includes a reference to a filename that does not include an extension,
and the <sgmltag class="attribute">format</sgmltag> attribute is
<emphasis>unspecified</emphasis>, the default extension will be used.
</para>

</refsect1>
</refentry>

<refentry id="default.image.width">
<refmeta>
<refentrytitle>default.image.width</refentrytitle>
<refmiscinfo role="type">length</refmiscinfo>
</refmeta>
<refnamediv>
<refname>default.image.width</refname>
<refpurpose>The default width of images</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="default.image.width.frag">&lt;xsl:param name="default.image.width"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If specified, this value will be used for the
<sgmltag class="attribute">width</sgmltag> attribute on
images that do not specify any
<ulink url="http://docbook.org/tdg/en/html/imagedata.html#viewport.area">viewport
dimensions</ulink>.</para>

</refsect1>
</refentry>

<refentry id="preferred.mediaobject.role">
<refmeta>
<refentrytitle>preferred.mediaobject.role</refentrytitle>
</refmeta>
<refnamediv>
<refname>preferred.mediaobject.role</refname>
<refpurpose>Select which mediaobject to use based on
this value of an object's <sgmltag class="attribute">role</sgmltag> attribute.
</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="preferred.mediaobject.role.frag">&lt;xsl:param name="preferred.mediaobject.role"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>A mediaobject may contain several objects such as imageobjects.
If the parameter <parameter moreinfo="none">use.role.for.mediaobject</parameter>
is non-zero, then the <sgmltag class="attribute">role</sgmltag> attribute on
<sgmltag>imageobject</sgmltag>s and other objects within a <sgmltag>mediaobject</sgmltag> container will be used to select which object will be
used.  If one of the objects has a role value that matches the
preferred.mediaobject.role parameter, then it has first
priority for selection.  If more than one has such a
role value, the first one is used.
</para>
<para>
See the <parameter moreinfo="none">use.role.for.mediaobject</parameter> parameter
for the sequence of selection.</para>
</refsect1>
</refentry>

<refentry id="use.role.for.mediaobject">
<refmeta>
<refentrytitle>use.role.for.mediaobject</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>use.role.for.mediaobject</refname>
<refpurpose>Use <sgmltag class="attribute">role</sgmltag> attribute 
value for selecting which of several objects within a mediaobject to use.
</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="use.role.for.mediaobject.frag">&lt;xsl:param name="use.role.for.mediaobject"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, the <sgmltag class="attribute">role</sgmltag> attribute on
<sgmltag>imageobject</sgmltag>s or other objects within a <sgmltag>mediaobject</sgmltag> container will be used to select which object will be
used.
</para>
<para>
The order of selection when then parameter is non-zero is:
</para>
<orderedlist inheritnum="ignore" continuation="restarts">
<listitem>
    <para>If the stylesheet parameter <parameter moreinfo="none">preferred.mediaojbect.role</parameter> has a value, then the object whose role equals that value is selected.</para>
</listitem>
<listitem>
<para>Else if an object's role attribute has a value of
<literal moreinfo="none">html</literal> for HTML processing or
<literal moreinfo="none">fo</literal> for FO output, then the first
of such objects is selected.
</para>
</listitem>
<listitem>
<para>Else the first suitable object is selected.</para>
</listitem>
</orderedlist>
<para>
If the value of 
<parameter moreinfo="none">use.role.for.mediaobject</parameter>
is zero, then role attributes are not considered
and the first suitable object
with or without a role value is used.
</para>
</refsect1>
</refentry>

<refentry id="ignore.image.scaling">
<refmeta>
<refentrytitle>ignore.image.scaling</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>ignore.image.scaling</refname>
<refpurpose>Tell the stylesheets to ignore the author's image scaling attributes</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="ignore.image.scaling.frag">&lt;xsl:param name="ignore.image.scaling"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, the scaling attributes on graphics and media objects are
ignored.</para>

</refsect1>
</refentry>

</reference>

<reference><title>Pagination and General Styles</title>
<partintro>
<section><title>Understanding XSL FO Margins</title>

<para>In order for the parameters in this section to make sense, it is useful to
consider <xref linkend="fig.pagemodel"/>.</para>

<figure id="fig.pagemodel" float="0">
<mediaobject>
<imageobject>
<imagedata fileref="page.png"/>
</imageobject>
<textobject><phrase>Figure showing page margins</phrase></textobject>
<textobject>
<para>This figure shows the physical page with the various FO page regions
identified.</para>
</textobject>
</mediaobject>
</figure>

<para>First, let's consider the regions on the page.</para>

<para>The white region is the physical page. Its dimensions are determined by
the <parameter moreinfo="none">page.height</parameter> and <parameter moreinfo="none">page.width</parameter>
parameters.</para>

<para>The yellow region is the region-body. The size and placement of
the region body is constrained by the dimensions labelled in the
figure.</para>

<para>The pink region at the top of the page is the region-before. The
darker area inside the region-before is the header text. In XSL, the default
display alignment for a region is <literal moreinfo="none">before</literal>, but the
DocBook stylesheets still explicitly make it <literal moreinfo="none">before</literal>. That's
why the darker area is at the top.</para>

<para>The pink region at the bottom of the page is the region-after.
The darker area is the footer text. In XSL, the default display
alignment for a region is <literal moreinfo="none">before</literal>,
but the DocBook stylesheets explicitly make it
<literal moreinfo="none">after</literal>. That's why the darker area is at the bottom.</para>

<para>The dimensions in the figure are:</para>

<orderedlist numeration="upperalpha" inheritnum="ignore" continuation="restarts">
<listitem><para>The page-master margin-top.
</para></listitem>
<listitem><para>The region-before extent.
</para></listitem>
<listitem><para>The region-body margin-top.
</para></listitem>
<listitem><para>The region-after extent.
</para></listitem>
<listitem><para>The page-master margin-bottom.
</para></listitem>
<listitem><para>The region-body margin-bottom.
</para></listitem>
<listitem><para>The sum of the page-master margin-left and the
region-body margin-left. In DocBook, the region-body margin-left is
zero by default, so this is simply the page-master region-left.
</para></listitem>
<listitem><para>The sum of the page-master margin-right and the
region-body margin-right. In DocBook, the region-body margin-right is
zero by default, so this is simply the page-master region-left.
</para></listitem>
</orderedlist>

</section>
</partintro>

<refentry id="page.height">
<refmeta>
<refentrytitle>page.height</refentrytitle>

</refmeta>
<refnamediv>
<refname>page.height</refname>
<refpurpose>The height of the physical page</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="page.height.frag">&lt;xsl:param name="page.height"&gt;
  &lt;xsl:choose&gt;
    &lt;xsl:when test="$page.orientation = 'portrait'"&gt;
      &lt;xsl:value-of select="$page.height.portrait"/&gt;
    &lt;/xsl:when&gt;
    &lt;xsl:otherwise&gt;
      &lt;xsl:value-of select="$page.width.portrait"/&gt;
    &lt;/xsl:otherwise&gt;
  &lt;/xsl:choose&gt;
&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The page height is generally calculated from the
<literal moreinfo="none">paper.type</literal> and
<literal moreinfo="none">page.orientation</literal>.
</para>

</refsect1>
</refentry>

<refentry id="page.height.portrait">
<refmeta>
<refentrytitle>page.height.portrait</refentrytitle>

</refmeta>
<refnamediv>
<refname>page.height.portrait</refname>
<refpurpose>Specify the physical size of the long edge of the page</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="page.height.portrait.frag">&lt;xsl:param name="page.height.portrait"&gt;
  &lt;xsl:choose&gt;
    &lt;xsl:when test="$paper.type = 'A4landscape'"&gt;210mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'USletter'"&gt;11in&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'USlandscape'"&gt;8.5in&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = '4A0'"&gt;2378mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = '2A0'"&gt;1682mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A0'"&gt;1189mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A1'"&gt;841mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A2'"&gt;594mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A3'"&gt;420mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A4'"&gt;297mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A5'"&gt;210mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A6'"&gt;148mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A7'"&gt;105mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A8'"&gt;74mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A9'"&gt;52mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A10'"&gt;37mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B0'"&gt;1414mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B1'"&gt;1000mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B2'"&gt;707mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B3'"&gt;500mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B4'"&gt;353mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B5'"&gt;250mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B6'"&gt;176mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B7'"&gt;125mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B8'"&gt;88mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B9'"&gt;62mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B10'"&gt;44mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C0'"&gt;1297mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C1'"&gt;917mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C2'"&gt;648mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C3'"&gt;458mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C4'"&gt;324mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C5'"&gt;229mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C6'"&gt;162mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C7'"&gt;114mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C8'"&gt;81mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C9'"&gt;57mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C10'"&gt;40mm&lt;/xsl:when&gt;
    &lt;xsl:otherwise&gt;11in&lt;/xsl:otherwise&gt;
  &lt;/xsl:choose&gt;
&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The portrait page height is the length of the long
edge of the physical page.
</para>

</refsect1>
</refentry>

<refentry id="page.margin.bottom">
<refmeta>
<refentrytitle>page.margin.bottom</refentrytitle>

</refmeta>
<refnamediv>
<refname>page.margin.bottom</refname>
<refpurpose>The bottom margin of the page</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="page.margin.bottom.frag">&lt;xsl:param name="page.margin.bottom"
           select="'0.5in'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The bottom page margin is the distance from the bottom of the region-after
to the physical bottom of the page.
</para>

</refsect1>
</refentry>

<refentry id="page.margin.inner">
<refmeta>
<refentrytitle>page.margin.inner</refentrytitle>

</refmeta>
<refnamediv>
<refname>page.margin.inner</refname>
<refpurpose>The inner page margin</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="page.margin.inner.frag">&lt;xsl:param name="page.margin.inner"&gt;
  &lt;xsl:choose&gt;
    &lt;xsl:when test="$double.sided != 0"&gt;1.25in&lt;/xsl:when&gt;
    &lt;xsl:otherwise&gt;1in&lt;/xsl:otherwise&gt;
  &lt;/xsl:choose&gt;
&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The inner page margin is the distance from binding edge of the
page to the first column of text. In the left-to-right, top-to-bottom writing
direction, this is the left margin of recto pages.</para>
<para>The inner and outer margins are usually the same unless the output
is double-sided.
</para>

</refsect1>
</refentry>

<refentry id="page.margin.outer">
<refmeta>
<refentrytitle>page.margin.outer</refentrytitle>

</refmeta>
<refnamediv>
<refname>page.margin.outer</refname>
<refpurpose>The outer page margin</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="page.margin.outer.frag">&lt;xsl:param name="page.margin.outer"&gt;
  &lt;xsl:choose&gt;
    &lt;xsl:when test="$double.sided != 0"&gt;0.75in&lt;/xsl:when&gt;
    &lt;xsl:otherwise&gt;1in&lt;/xsl:otherwise&gt;
  &lt;/xsl:choose&gt;
&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The outer page margin is the distance from non-binding edge of the
page to the last column of text. In the left-to-right, top-to-bottom writing
direction, this is the right margin of recto pages.</para>
<para>The inner and outer margins are usually the same unless the output
is double-sided.
</para>

</refsect1>
</refentry>

<refentry id="page.margin.top">
<refmeta>
<refentrytitle>page.margin.top</refentrytitle>

</refmeta>
<refnamediv>
<refname>page.margin.top</refname>
<refpurpose>The top margin of the page</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="page.margin.top.frag">&lt;xsl:param name="page.margin.top"
           select="'0.5in'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The top page margin is the distance from the physical top of the
page to the top of the region-before.</para>

</refsect1>
</refentry>

<refentry id="page.orientation">
<refmeta>
<refentrytitle>page.orientation</refentrytitle>

</refmeta>
<refnamediv>
<refname>page.orientation</refname>
<refpurpose>Select the page orientation</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="page.orientation.frag">&lt;xsl:param name="page.orientation"
           select="'portrait'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>In portrait orientation, the short edge is horizontal; in
landscape orientation, it is vertical.
</para>

</refsect1>
</refentry>

<refentry id="page.width">
<refmeta>
<refentrytitle>page.width</refentrytitle>

</refmeta>
<refnamediv>
<refname>page.width</refname>
<refpurpose>The width of the physical page</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="page.width.frag">&lt;xsl:param name="page.width"&gt;
  &lt;xsl:choose&gt;
    &lt;xsl:when test="$page.orientation = 'portrait'"&gt;
      &lt;xsl:value-of select="$page.width.portrait"/&gt;
    &lt;/xsl:when&gt;
    &lt;xsl:otherwise&gt;
      &lt;xsl:value-of select="$page.height.portrait"/&gt;
    &lt;/xsl:otherwise&gt;
  &lt;/xsl:choose&gt;
&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The page width is generally calculated from the
<literal moreinfo="none">paper.type</literal> and <literal moreinfo="none">page.orientation</literal>.
</para>

</refsect1>
</refentry>

<refentry id="page.width.portrait">
<refmeta>
<refentrytitle>page.width.portrait</refentrytitle>

</refmeta>
<refnamediv>
<refname>page.width.portrait</refname>
<refpurpose>Specify the physical size of the short edge of the page</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="page.width.portrait.frag">&lt;xsl:param name="page.width.portrait"&gt;
  &lt;xsl:choose&gt;
    &lt;xsl:when test="$paper.type = 'USletter'"&gt;8.5in&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = '4A0'"&gt;1682mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = '2A0'"&gt;1189mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A0'"&gt;841mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A1'"&gt;594mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A2'"&gt;420mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A3'"&gt;297mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A4'"&gt;210mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A5'"&gt;148mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A6'"&gt;105mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A7'"&gt;74mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A8'"&gt;52mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A9'"&gt;37mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'A10'"&gt;26mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B0'"&gt;1000mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B1'"&gt;707mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B2'"&gt;500mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B3'"&gt;353mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B4'"&gt;250mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B5'"&gt;176mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B6'"&gt;125mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B7'"&gt;88mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B8'"&gt;62mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B9'"&gt;44mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'B10'"&gt;31mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C0'"&gt;917mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C1'"&gt;648mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C2'"&gt;458mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C3'"&gt;324mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C4'"&gt;229mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C5'"&gt;162mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C6'"&gt;114mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C7'"&gt;81mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C8'"&gt;57mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C9'"&gt;40mm&lt;/xsl:when&gt;
    &lt;xsl:when test="$paper.type = 'C10'"&gt;28mm&lt;/xsl:when&gt;
    &lt;xsl:otherwise&gt;8.5in&lt;/xsl:otherwise&gt;
  &lt;/xsl:choose&gt;
&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The portrait page width is the length of the short
edge of the physical page.
</para>

</refsect1>
</refentry>

<refentry id="paper.type">
<refmeta>
<refentrytitle>paper.type</refentrytitle>

</refmeta>
<refnamediv>
<refname>paper.type</refname>
<refpurpose>Select the paper type</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="paper.type.frag">&lt;xsl:param name="paper.type"
           select="'USletter'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The paper type is a convenient way to specify the paper size.
The list of known paper sizes includes USletter and most of the A,
B, and C sizes. See <literal moreinfo="none">page.width.portrait</literal>, for example.
</para>

</refsect1>
</refentry>

<refentry id="double.sided">
<refmeta>
<refentrytitle>double.sided</refentrytitle>

</refmeta>
<refnamediv>
<refname>double.sided</refname>
<refpurpose>Is the document to be printed double sided?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="double.sided.frag">&lt;xsl:param name="double.sided"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Double-sided documents are printed with a slightly wider margin
on the binding edge of the page.
</para>
<para>FIXME: The current set of parameters does not take writing direction
into account.</para>

</refsect1>
</refentry>

<refentry id="body.margin.bottom">
<refmeta>
<refentrytitle>body.margin.bottom</refentrytitle>

</refmeta>
<refnamediv>
<refname>body.margin.bottom</refname>
<refpurpose>The bottom margin of the body text</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="body.margin.bottom.frag">&lt;xsl:param name="body.margin.bottom"
           select="'0.5in'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The body bottom margin is the distance from the last line of text
in the page body to the bottom of the region-after.
</para>

</refsect1>
</refentry>

<refentry id="body.margin.top">
<refmeta>
<refentrytitle>body.margin.top</refentrytitle>

</refmeta>
<refnamediv>
<refname>body.margin.top</refname>
<refpurpose>To specify the size of the top margin of a page</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="body.margin.top.frag">&lt;xsl:param name="body.margin.top"
           select="'0.5in'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The body top margin is the distance from the top of the region-before
to the first line of text in the page body.
</para>

</refsect1>
</refentry>

<refentry id="alignment">
<refmeta>
<refentrytitle>alignment</refentrytitle>

</refmeta>
<refnamediv>
<refname>alignment</refname>
<refpurpose>Specify the default text alignment</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="alignment.frag">&lt;xsl:param name="alignment"&gt;justify&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The default text alignment is used for most body text.
</para>

</refsect1>
</refentry>

<refentry id="hyphenate">
<refmeta>
<refentrytitle>hyphenate</refentrytitle>

</refmeta>
<refnamediv>
<refname>hyphenate</refname>
<refpurpose>Specify hyphenation behavior</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="hyphenate.frag">&lt;xsl:param name="hyphenate"&gt;true&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If true, words may be hyphenated. Otherwise, they may not.
</para>

</refsect1>
</refentry>

<refentry id="line-height">
<refmeta>
<refentrytitle>line-height</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>line-height</refname>
<refpurpose>Specify the line-height property</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="line-height.frag">&lt;xsl:param name="line-height"
           select="'normal'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Sets the line-height property.</para>

</refsect1>
</refentry>

<refentry id="column.count.back">
<refmeta>
<refentrytitle>column.count.back</refentrytitle>
<refmiscinfo role="type">integer</refmiscinfo>
</refmeta>
<refnamediv>
<refname>column.count.back</refname>
<refpurpose>Number of columns on back matter pages</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="column.count.back.frag">&lt;xsl:param name="column.count.back"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Number of columns on back matter (appendix, glossary, etc.) pages.</para>

</refsect1>
</refentry>

<refentry id="column.count.body">
<refmeta>
<refentrytitle>column.count.body</refentrytitle>
<refmiscinfo role="type">integer</refmiscinfo>
</refmeta>
<refnamediv>
<refname>column.count.body</refname>
<refpurpose>Number of columns on body pages</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="column.count.body.frag">&lt;xsl:param name="column.count.body"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Number of columns on body pages.</para>

</refsect1>
</refentry>

<refentry id="column.count.front">
<refmeta>
<refentrytitle>column.count.front</refentrytitle>
<refmiscinfo role="type">integer</refmiscinfo>
</refmeta>
<refnamediv>
<refname>column.count.front</refname>
<refpurpose>Number of columns on front matter pages</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="column.count.front.frag">&lt;xsl:param name="column.count.front"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Number of columns on front matter (dedication, preface, etc.) pages.</para>

</refsect1>
</refentry>

<refentry id="column.count.index">
<refmeta>
<refentrytitle>column.count.index</refentrytitle>
<refmiscinfo role="type">integer</refmiscinfo>
</refmeta>
<refnamediv>
<refname>column.count.index</refname>
<refpurpose>Number of columns on index pages</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="column.count.index.frag">&lt;xsl:param name="column.count.index"
           select="2"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Number of columns on index pages.</para>

</refsect1>
</refentry>

<refentry id="column.count.lot">
<refmeta>
<refentrytitle>column.count.lot</refentrytitle>
<refmiscinfo role="type">integer</refmiscinfo>
</refmeta>
<refnamediv>
<refname>column.count.lot</refname>
<refpurpose>Number of columns on a 'List-of-Titles' page</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="column.count.lot.frag">&lt;xsl:param name="column.count.lot"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Number of columns on a page sequence containing the Table of Contents,
List of Figures, etc.</para>

</refsect1>
</refentry>

<refentry id="column.count.titlepage">
<refmeta>
<refentrytitle>column.count.titlepage</refentrytitle>
<refmiscinfo role="type">integer</refmiscinfo>
</refmeta>
<refnamediv>
<refname>column.count.titlepage</refname>
<refpurpose>Number of columns on a title page</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="column.count.titlepage.frag">&lt;xsl:param name="column.count.titlepage"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Number of columns on a title page</para>

</refsect1>
</refentry>

<refentry id="region.after.extent">
<refmeta>
<refentrytitle>region.after.extent</refentrytitle>

</refmeta>
<refnamediv>
<refname>region.after.extent</refname>
<refpurpose>Specifies the height of the footer.</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="region.after.extent.frag">&lt;xsl:param name="region.after.extent"
           select="'0.4in'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The region after extent is the height of the area where footers
are printed.
</para>

</refsect1>
</refentry>

<refentry id="region.before.extent">
<refmeta>
<refentrytitle>region.before.extent</refentrytitle>

</refmeta>
<refnamediv>
<refname>region.before.extent</refname>
<refpurpose>Specifies the height of the header</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="region.before.extent.frag">&lt;xsl:param name="region.before.extent"
           select="'0.4in'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The region before extent is the height of the area where headers
are printed.
</para>

</refsect1>
</refentry>

<refentry id="default.units">
<refmeta>
<refentrytitle>default.units</refentrytitle>
<refmiscinfo role="type">list</refmiscinfo>
<refmiscinfo role="value">cm</refmiscinfo>
<refmiscinfo role="value">mm</refmiscinfo>
<refmiscinfo role="value">in</refmiscinfo>
<refmiscinfo role="value">pt</refmiscinfo>
<refmiscinfo role="value">pc</refmiscinfo>
<refmiscinfo role="value">px</refmiscinfo>
<refmiscinfo role="value">em</refmiscinfo>
</refmeta>
<refnamediv>
<refname>default.units</refname>
<refpurpose>Default units for an unqualified dimension</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="default.units.frag">&lt;xsl:param name="default.units"
           select="'pt'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If an unqualified dimension is encountered (for example, in a
graphic width), the <parameter moreinfo="none">default-units</parameter> will be used for the
units. Unqualified dimensions are not allowed in XSL Formatting Objects.
</para>

</refsect1>
</refentry>

<refentry id="normal.para.spacing">
<refnamediv>
<refname>normal.para.spacing</refname>
<refpurpose>What space do you want between normal paragraphs</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="normal.para.spacing.frag">&lt;xsl:attribute-set name="normal.para.spacing"&gt;
  &lt;xsl:attribute name="space-before.optimum"&gt;1em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.minimum"&gt;0.8em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.maximum"&gt;1.2em&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>
<refsect1><title>Description</title>
<para>Specify the spacing required between normal paragraphs</para>
</refsect1>
</refentry>

<refentry id="body.font.master">
<refmeta>
<refentrytitle>body.font.master</refentrytitle>

</refmeta>
<refnamediv>
<refname>body.font.master</refname>
<refpurpose>Specifies the default point size for body text</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="body.font.master.frag">&lt;xsl:param name="body.font.master"&gt;10&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The body font size is specified in two parameters
(<varname>body.font.master</varname> and <varname>body.font.size</varname>)
so that math can be performed on the font size by XSLT.
</para>

</refsect1>
</refentry>

<refentry id="body.font.size">
<refmeta>
<refentrytitle>body.font.size</refentrytitle>

</refmeta>
<refnamediv>
<refname>body.font.size</refname>
<refpurpose>Specifies the default font size for body text</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="body.font.size.frag">&lt;xsl:param name="body.font.size"&gt;
 &lt;xsl:value-of select="$body.font.master"/&gt;&lt;xsl:text&gt;pt&lt;/xsl:text&gt;
&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The body font size is specified in two parameters
(<varname>body.font.master</varname> and <varname>body.font.size</varname>)
so that math can be performed on the font size by XSLT.
</para>

</refsect1>
</refentry>

<refentry id="footnote.font.size">
<refmeta>
<refentrytitle>footnote.font.size</refentrytitle>

</refmeta>
<refnamediv>
<refname>footnote.font.size</refname>
<refpurpose>The font size for footnotes</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="footnote.font.size.frag">&lt;xsl:param name="footnote.font.size"&gt;
 &lt;xsl:value-of select="$body.font.master * 0.8"/&gt;&lt;xsl:text&gt;pt&lt;/xsl:text&gt;
&lt;/xsl:param&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The footnote font size is used for...footnotes!
</para>

</refsect1>
</refentry>

<refentry id="title.margin.left">
<refmeta>
<refentrytitle>title.margin.left</refentrytitle>
<refmiscinfo role="type"/>
</refmeta>
<refnamediv>
<refname>title.margin.left</refname>
<refpurpose>Adjust the left margin for titles</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="title.margin.left.frag">&lt;xsl:param name="title.margin.left"
           select="'-4pc'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>This parameter adjusts the left margin for titles.
</para>

</refsect1>
</refentry>

<refentry id="draft.mode">
<refmeta>
<refentrytitle>draft.mode</refentrytitle>
<refmiscinfo role="type">list</refmiscinfo>
</refmeta>
<refnamediv>
<refname>draft.mode</refname>
<refpurpose>Select draft mode</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="draft.mode.frag">&lt;xsl:param name="draft.mode"
           select="'maybe'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Selects draft mode. If <parameter moreinfo="none">draft.mode</parameter> is
<quote><literal moreinfo="none">yes</literal></quote>, the entire document will be treated
as a draft. If it is <quote><literal moreinfo="none">no</literal></quote>, the entire document
will be treated as a final copy. If it is <quote><literal moreinfo="none">maybe</literal></quote>,
individual sections will be treated as draft or final independently, depending
on how their <sgmltag class="attribute">status</sgmltag> attribute is set.
</para>

</refsect1>
</refentry>

<refentry id="draft.watermark.image">
<refmeta>
<refentrytitle>draft.watermark.image</refentrytitle>
<refmiscinfo role="type">uri</refmiscinfo>
</refmeta>
<refnamediv>
<refname>draft.watermark.image</refname>
<refpurpose>The URI of the image to be used for draft watermarks</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="draft.watermark.image.frag">&lt;xsl:param name="draft.watermark.image"
           select="'http://docbook.sourceforge.net/release/images/draft.png'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The image to be used for draft watermarks.</para>

</refsect1>
</refentry>

<refentry id="headers.on.blank.pages">
<refmeta>
<refentrytitle>headers.on.blank.pages</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>headers.on.blank.pages</refname>
<refpurpose>Put headers on blank pages?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="headers.on.blank.pages.frag">&lt;xsl:param name="headers.on.blank.pages"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, headers will be placed on blank pages.</para>

</refsect1>
</refentry>

<refentry id="footers.on.blank.pages">
<refmeta>
<refentrytitle>footers.on.blank.pages</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>footers.on.blank.pages</refname>
<refpurpose>Put footers on blank pages?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="footers.on.blank.pages.frag">&lt;xsl:param name="footers.on.blank.pages"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, footers will be placed on blank pages.</para>

</refsect1>
</refentry>

<refentry id="header.rule">
<refmeta>
<refentrytitle>header.rule</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>header.rule</refname>
<refpurpose>Rule under headers?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="header.rule.frag">&lt;xsl:param name="header.rule"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, a rule will be drawn below the page headers.</para>

</refsect1>
</refentry>

<refentry id="footer.rule">
<refmeta>
<refentrytitle>footer.rule</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>footer.rule</refname>
<refpurpose>Rule over footers?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="footer.rule.frag">&lt;xsl:param name="footer.rule"
           select="1"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, a rule will be drawn above the page footers.</para>

</refsect1>
</refentry>

<refentry id="header.content.properties">
<refmeta>
<refentrytitle>header.content.properties</refentrytitle>
<refmiscinfo role="type"/>
</refmeta>
<refnamediv>
<refname>header.content.properties</refname>
<refpurpose/>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="header.content.properties.frag">&lt;xsl:attribute-set name="header.content.properties"&gt;
  &lt;xsl:attribute name="font-family"&gt;
    &lt;xsl:value-of select="$body.font.family"/&gt;
  &lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="margin-left"&gt;
    &lt;xsl:value-of select="$title.margin.left"/&gt;
  &lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="margin-right"&gt;
    &lt;xsl:value-of select="$title.margin.left"/&gt;
  &lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Properties of page header content.</para>

</refsect1>
</refentry>

<refentry id="footer.content.properties">
<refmeta>
<refentrytitle>footer.content.properties</refentrytitle>
<refmiscinfo role="type"/>
</refmeta>
<refnamediv>
<refname>footer.content.properties</refname>
<refpurpose/>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="footer.content.properties.frag">&lt;xsl:attribute-set name="footer.content.properties"&gt;
  &lt;xsl:attribute name="font-family"&gt;
    &lt;xsl:value-of select="$body.font.family"/&gt;
  &lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="margin-left"&gt;
    &lt;xsl:value-of select="$title.margin.left"/&gt;
  &lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="margin-right"&gt;
    &lt;xsl:value-of select="$title.margin.left"/&gt;
  &lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Properties of page footer content.</para>

</refsect1>
</refentry>

</reference>

<reference><title>Font Families</title>
<refentry id="body.font.family">
<refmeta>
<refentrytitle>body.font.family</refentrytitle>

</refmeta>
<refnamediv>
<refname>body.font.family</refname>
<refpurpose>The default font family for body text</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="body.font.family.frag">&lt;xsl:param name="body.font.family"
           select="'serif'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The body font family is the default font used for text in the page body.
</para>

</refsect1>
</refentry>

<refentry id="dingbat.font.family">
<refmeta>
<refentrytitle>dingbat.font.family</refentrytitle>

</refmeta>
<refnamediv>
<refname>dingbat.font.family</refname>
<refpurpose>The font family for copyright, quotes, and other symbols</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="dingbat.font.family.frag">&lt;xsl:param name="dingbat.font.family"
           select="'serif'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The dingbat font family is used for dingbats. If it is defined
as the empty string, no font change is effected around dingbats.
</para>

</refsect1>
</refentry>

<refentry id="monospace.font.family">
<refmeta>
<refentrytitle>monospace.font.family</refentrytitle>

</refmeta>
<refnamediv>
<refname>monospace.font.family</refname>
<refpurpose>The default font family for monospace environments</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="monospace.font.family.frag">&lt;xsl:param name="monospace.font.family"
           select="'monospace'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The monospace font family is used for verbatim environments
(program listings, screens, etc.).
</para>

</refsect1>
</refentry>

<refentry id="sans.font.family">
<refmeta>
<refentrytitle>sans.font.family</refentrytitle>

</refmeta>
<refnamediv>
<refname>sans.font.family</refname>
<refpurpose>The default sans-serif font family</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="sans.font.family.frag">&lt;xsl:param name="sans.font.family"
           select="'sans-serif'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The default sans-serif font family. At the present, this isn't
actually used by the stylesheets.
</para>

</refsect1>
</refentry>

<refentry id="title.font.family">
<refmeta>
<refentrytitle>title.font.family</refentrytitle>

</refmeta>
<refnamediv>
<refname>title.font.family</refname>
<refpurpose>The default font family for titles</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="title.font.family.frag">&lt;xsl:param name="title.font.family"
           select="'sans-serif'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The title font family is used for titles (chapter, section, figure,
etc.)
</para>

</refsect1>
</refentry>

</reference>

<reference><title>Lists</title>
<refentry id="list.block.spacing">
<refnamediv>
<refname>list.block.spacing</refname>
<refpurpose>What spacing do you want before and after lists?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="list.block.spacing.frag">&lt;xsl:attribute-set name="list.block.spacing"&gt;
  &lt;xsl:attribute name="space-before.optimum"&gt;1em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.minimum"&gt;0.8em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.maximum"&gt;1.2em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.optimum"&gt;1em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.minimum"&gt;0.8em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.maximum"&gt;1.2em&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>
<refsect1><title>Description</title>
<para>Specify the spacing required before and after a list. It is necessary to specify the space after a list block because lists can come inside of paras.  </para>
</refsect1>
</refentry>

<refentry id="list.item.spacing">
<refnamediv>
<refname>list.item.spacing</refname>
<refpurpose>What space do you want between list items?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="list.item.spacing.frag">&lt;xsl:attribute-set name="list.item.spacing"&gt;
  &lt;xsl:attribute name="space-before.optimum"&gt;1em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.minimum"&gt;0.8em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.maximum"&gt;1.2em&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>
<refsect1><title>Description</title>
<para>Specify what spacing you want between each list item.</para>
</refsect1>
</refentry>

<refentry id="compact.list.item.spacing">
<refnamediv>
<refname>compact.list.item.spacing</refname>
<refpurpose>What space do you want between list items (when spacing=compact)?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="compact.list.item.spacing.frag">&lt;xsl:attribute-set name="compact.list.item.spacing"&gt;
  &lt;xsl:attribute name="space-before.optimum"&gt;0em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.minimum"&gt;0em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.maximum"&gt;0.2em&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>
<refsect1><title>Description</title>
<para>Specify what spacing you want between each list item when
<sgmltag class="attribute">spacing</sgmltag> is
<quote><literal moreinfo="none">compact</literal></quote>.</para>
</refsect1>
</refentry>

</reference>

<reference><title>Cross References</title>
<refentry id="insert.xref.page.number">
<refmeta>
<refentrytitle>insert.xref.page.number</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>insert.xref.page.number</refname>
<refpurpose>Turns page numbers in xrefs on and off</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="insert.xref.page.number.frag">&lt;xsl:param name="insert.xref.page.number"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, cross references (<sgmltag>xref</sgmltag>s) will
include page number citations.
</para>

</refsect1>
</refentry>

<refentry id="xref.properties">
<refnamediv>
<refname>xref.properties</refname>
<refpurpose>Properties associated with cross-reference text</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="xref.properties.frag">&lt;xsl:attribute-set name="xref.properties"&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>This attribute set is used on cross reference text.</para>

</refsect1>
</refentry>

</reference>

<reference><title>Property Sets</title>
<refentry id="component.title.properties">
<refnamediv>
<refname>component.title.properties</refname>
<refpurpose>Specify the styling for the title elements of a component.</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="component.title.properties.frag">&lt;xsl:attribute-set name="component.title.properties"&gt;
  &lt;xsl:attribute name="space-before.optimum"&gt;2em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.minimum"&gt;1.8em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.maximum"&gt;2.2em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="font-weight"&gt;bold&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="font-size"&gt;18pt&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.optimum"&gt;1.5em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.minimum"&gt;1.3em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.maximum"&gt;1.8em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="hyphenate"&gt;false&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="keep-with-next.within-column"&gt;always&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>
<refsect1><title>Description</title>

<para>A set of attributes are used to style the title of a
component (chapters, appendixes, articles, etc.). Components are usually
printed in the <parameter moreinfo="none">title.font.family</parameter>.
Spacing before and after, font size etc are specified
using this parameter.</para>

</refsect1>
</refentry>

<refentry id="formal.object.properties">
<refnamediv>
<refname>formal.object.properties</refname>
<refpurpose>Properties associated with a formal object such as a figure, or other component that has a title</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="formal.object.properties.frag">&lt;xsl:attribute-set name="formal.object.properties"&gt;
  &lt;xsl:attribute name="space-before.minimum"&gt;0.5em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.optimum"&gt;1em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.maximum"&gt;2em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.minimum"&gt;0.5em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.optimum"&gt;1em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.maximum"&gt;2em&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The styling for formal objects in docbook. Specify the spacing
before and after the object.</para>

</refsect1>
</refentry>

<refentry id="formal.title.properties">
<refnamediv>
<refname>formal.title.properties</refname>
<refpurpose>Style the title element of formal object such as a figure.</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="formal.title.properties.frag">&lt;xsl:attribute-set name="formal.title.properties"
                   use-attribute-sets="normal.para.spacing"&gt;
  &lt;xsl:attribute name="font-weight"&gt;bold&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="font-size"&gt;
    &lt;xsl:value-of select="$body.font.master * 1.2"/&gt;
    &lt;xsl:text&gt;pt&lt;/xsl:text&gt;
  &lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="hyphenate"&gt;false&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.minimum"&gt;0.4em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.optimum"&gt;0.6em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.maximum"&gt;0.8em&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>
<refsect1><title>Description</title>
<para>Specify how the title should be styled. Specify the font size and weight of the title of the formal object.</para>
</refsect1>
</refentry>

<refentry id="informal.object.properties">
<refnamediv>
<refname>informal.object.properties</refname>
<refpurpose>Properties associated with a formal object such as a figure, or other component that has a title</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="informal.object.properties.frag">&lt;xsl:attribute-set name="informal.object.properties"&gt;
  &lt;xsl:attribute name="space-before.minimum"&gt;0.5em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.optimum"&gt;1em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.maximum"&gt;2em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.minimum"&gt;0.5em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.optimum"&gt;1em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.maximum"&gt;2em&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>
<refsect1><title>Description</title>
<para>The styling for informal objects in docbook. Specify the spacing before and after the object.</para>
</refsect1>
</refentry>

<refentry id="monospace.properties">
<refmeta>
<refentrytitle>monospace.properties</refentrytitle>
<refmiscinfo role="type">attribute set</refmiscinfo>
</refmeta>
<refnamediv>
<refname>monospace.properties</refname>
<refpurpose>Properties of monospaced content</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="monospace.properties.frag">&lt;xsl:attribute-set name="monospace.properties"&gt;
  &lt;xsl:attribute name="font-family"&gt;
    &lt;xsl:value-of select="$monospace.font.family"/&gt;
  &lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="font-size"&gt;0.9em&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Specifies the font name and size for monospaced output.</para>

</refsect1>
</refentry>

<refentry id="verbatim.properties">
<refnamediv>
<refname>verbatim.properties</refname>
<refpurpose>Properties associated with verbatim text</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="verbatim.properties.frag">&lt;xsl:attribute-set name="verbatim.properties"&gt;
  &lt;xsl:attribute name="space-before.minimum"&gt;0.8em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.optimum"&gt;1em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.maximum"&gt;1.2em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.minimum"&gt;0.8em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.optimum"&gt;1em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-after.maximum"&gt;1.2em&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>
<para>This attribute set is used on all verbatim environments.</para>
</refsect1>

</refentry>

<refentry id="monospace.verbatim.properties">
<refnamediv>
<refname>monospace.verbatim.properties</refname>
<refpurpose>What font and size do you want for monospaced content?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="monospace.verbatim.properties.frag">&lt;xsl:attribute-set name="monospace.verbatim.properties"
                   use-attribute-sets="verbatim.properties monospace.properties"&gt;
  &lt;xsl:attribute name="text-align"&gt;start&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>
<refsect1><title>Description</title>
<para>Specify the font name and size you want for monospaced output</para>
</refsect1>
</refentry>

<refentry id="sidebar.properties">
<refmeta>
<refentrytitle>sidebar.properties</refentrytitle>
<refmiscinfo role="type">attribute set</refmiscinfo>
</refmeta>
<refnamediv>
<refname>sidebar.properties</refname>
<refpurpose>Attribute set for sidebar properties</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="sidebar.properties.frag">&lt;xsl:attribute-set name="sidebar.properties"
                   use-attribute-sets="formal.object.properties"&gt;
  &lt;xsl:attribute name="border-style"&gt;solid&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="border-width"&gt;1pt&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="border-color"&gt;black&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="background-color"&gt;#DDDDDD&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="padding-left"&gt;12pt&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="padding-right"&gt;12pt&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="padding-top"&gt;6pt&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="padding-bottom"&gt;6pt&lt;/xsl:attribute&gt;
&lt;!--
  &lt;xsl:attribute name="margin-left"&gt;12pt&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="margin-right"&gt;12pt&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="margin-top"&gt;6pt&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="margin-bottom"&gt;6pt&lt;/xsl:attribute&gt;
--&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The styling for sidebars.</para>

</refsect1>
</refentry>

<refentry id="section.title.properties">
<refmeta>
<refentrytitle>section.title.properties</refentrytitle>
<refmiscinfo role="type">attribute set</refmiscinfo>
</refmeta>
<refnamediv>
<refname>section.title.properties</refname>
<refpurpose>Properties for section titles</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="section.title.properties.frag">&lt;xsl:attribute-set name="section.title.properties"&gt;
  &lt;xsl:attribute name="font-family"&gt;
    &lt;xsl:value-of select="$title.font.family"/&gt;
  &lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="font-weight"&gt;bold&lt;/xsl:attribute&gt;
  &lt;!-- font size is calculated dynamically by section.heading template --&gt;
  &lt;xsl:attribute name="keep-with-next.within-column"&gt;always&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.minimum"&gt;0.8em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.optimum"&gt;1.0em&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="space-before.maximum"&gt;1.2em&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The properties common to all section titles.</para>

</refsect1>
</refentry>

<refentry id="section.title.level1.properties">
<refmeta>
<refentrytitle>section.title.level1.properties</refentrytitle>
<refmiscinfo role="type">attribute set</refmiscinfo>
</refmeta>
<refnamediv>
<refname>section.title.level1.properties</refname>
<refpurpose>Properties for level-1 section titles</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="section.title.level1.properties.frag">&lt;xsl:attribute-set name="section.title.level1.properties"&gt;
  &lt;xsl:attribute name="font-size"&gt;
    &lt;xsl:value-of select="$body.font.master * 2.0736"/&gt;
    &lt;xsl:text&gt;pt&lt;/xsl:text&gt;
  &lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The properties of level-1 section titles.</para>

</refsect1>
</refentry>

<refentry id="section.title.level2.properties">
<refmeta>
<refentrytitle>section.title.level2.properties</refentrytitle>
<refmiscinfo role="type">attribute set</refmiscinfo>
</refmeta>
<refnamediv>
<refname>section.title.level2.properties</refname>
<refpurpose>Properties for level-1 section titles</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="section.title.level2.properties.frag">&lt;xsl:attribute-set name="section.title.level2.properties"&gt;
  &lt;xsl:attribute name="font-size"&gt;
    &lt;xsl:value-of select="$body.font.master * 1.728"/&gt;
    &lt;xsl:text&gt;pt&lt;/xsl:text&gt;
  &lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The properties of level-2 section titles.</para>

</refsect1>
</refentry>

<refentry id="section.title.level3.properties">
<refmeta>
<refentrytitle>section.title.level3.properties</refentrytitle>
<refmiscinfo role="type">attribute set</refmiscinfo>
</refmeta>
<refnamediv>
<refname>section.title.level3.properties</refname>
<refpurpose>Properties for level-1 section titles</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="section.title.level3.properties.frag">&lt;xsl:attribute-set name="section.title.level3.properties"&gt;
  &lt;xsl:attribute name="font-size"&gt;
    &lt;xsl:value-of select="$body.font.master * 1.44"/&gt;
    &lt;xsl:text&gt;pt&lt;/xsl:text&gt;
  &lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The properties of level-3 section titles.</para>

</refsect1>
</refentry>

<refentry id="section.title.level4.properties">
<refmeta>
<refentrytitle>section.title.level4.properties</refentrytitle>
<refmiscinfo role="type">attribute set</refmiscinfo>
</refmeta>
<refnamediv>
<refname>section.title.level4.properties</refname>
<refpurpose>Properties for level-1 section titles</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="section.title.level4.properties.frag">&lt;xsl:attribute-set name="section.title.level4.properties"&gt;
  &lt;xsl:attribute name="font-size"&gt;
    &lt;xsl:value-of select="$body.font.master * 1.2"/&gt;
    &lt;xsl:text&gt;pt&lt;/xsl:text&gt;
  &lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The properties of level-4 section titles.</para>

</refsect1>
</refentry>

<refentry id="section.title.level5.properties">
<refmeta>
<refentrytitle>section.title.level5.properties</refentrytitle>
<refmiscinfo role="type">attribute set</refmiscinfo>
</refmeta>
<refnamediv>
<refname>section.title.level5.properties</refname>
<refpurpose>Properties for level-1 section titles</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="section.title.level5.properties.frag">&lt;xsl:attribute-set name="section.title.level5.properties"&gt;
  &lt;xsl:attribute name="font-size"&gt;
    &lt;xsl:value-of select="$body.font.master"/&gt;
    &lt;xsl:text&gt;pt&lt;/xsl:text&gt;
  &lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The properties of level-5 section titles.</para>

</refsect1>
</refentry>

<refentry id="section.title.level6.properties">
<refmeta>
<refentrytitle>section.title.level6.properties</refentrytitle>
<refmiscinfo role="type">attribute set</refmiscinfo>
</refmeta>
<refnamediv>
<refname>section.title.level6.properties</refname>
<refpurpose>Properties for level-1 section titles</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="section.title.level6.properties.frag">&lt;xsl:attribute-set name="section.title.level6.properties"&gt;
  &lt;xsl:attribute name="font-size"&gt;
    &lt;xsl:value-of select="$body.font.master"/&gt;
    &lt;xsl:text&gt;pt&lt;/xsl:text&gt;
  &lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The properties of level-6 section titles. This property set is actually
used for all titles below level 5.</para>

</refsect1>
</refentry>

<refentry id="figure.properties">
<refnamediv>
<refname>figure.properties</refname>
<refpurpose>Properties associated with a figure</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="figure.properties.frag">&lt;xsl:attribute-set name="figure.properties"
                   use-attribute-sets="formal.object.properties"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The styling for figures.</para>

</refsect1>
</refentry>

<refentry id="example.properties">
<refnamediv>
<refname>example.properties</refname>
<refpurpose>Properties associated with a example</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="example.properties.frag">&lt;xsl:attribute-set name="example.properties"
                   use-attribute-sets="formal.object.properties"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The styling for examples.</para>

</refsect1>
</refentry>

<refentry id="equation.properties">
<refnamediv>
<refname>equation.properties</refname>
<refpurpose>Properties associated with a equation</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="equation.properties.frag">&lt;xsl:attribute-set name="equation.properties"
                   use-attribute-sets="formal.object.properties"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The styling for equations.</para>

</refsect1>
</refentry>

<refentry id="table.properties">
<refnamediv>
<refname>table.properties</refname>
<refpurpose>Properties associated with a table</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="table.properties.frag">&lt;xsl:attribute-set name="table.properties"
                   use-attribute-sets="formal.object.properties"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The styling for tables.</para>

</refsect1>
</refentry>

<refentry id="procedure.properties">
<refnamediv>
<refname>procedure.properties</refname>
<refpurpose>Properties associated with a procedure</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="procedure.properties.frag">&lt;xsl:attribute-set name="procedure.properties"
                   use-attribute-sets="formal.object.properties"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The styling for procedures.</para>

</refsect1>
</refentry>

</reference>

<reference><title>Profiling</title>
<partintro>
<para>Following parameters can be used for attribute value based
profiling of your document. For more info about profiling look at
<ulink url="http://docbook.sourceforge.net/projects/xsl/doc/tools/profiling.html">http://docbook.sourceforge.net/projects/xsl/doc/tools/profiling.html</ulink>.</para>
</partintro>
<refentry id="profile.arch">
<refmeta>
<refentrytitle>profile.arch</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>profile.arch</refname>
<refpurpose>Target profile for <sgmltag class="attribute">arch</sgmltag>
attribute</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="profile.arch.frag">&lt;xsl:param name="profile.arch"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Value of this parameter specifies profiles which should be
included in the output. You can specify multiple profiles by
separating them by semicolon. You can change separator character by
<link linkend="profile.separator"><parameter moreinfo="none">profile.separator</parameter></link>
parameter.</para>

<para>This parameter has effect only when you are using profiling
stylesheets (<filename moreinfo="none">profile-docbook.xsl</filename>,
<filename moreinfo="none">profile-chunk.xsl</filename>, …) instead of normal
ones (<filename moreinfo="none">docbook.xsl</filename>,
<filename moreinfo="none">chunk.xsl</filename>, …).</para>

</refsect1>
</refentry>

<refentry id="profile.condition">
<refmeta>
<refentrytitle>profile.condition</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>profile.condition</refname>
<refpurpose>Target profile for <sgmltag class="attribute">condition</sgmltag>
attribute</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="profile.condition.frag">&lt;xsl:param name="profile.condition"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Value of this parameter specifies profiles which should be
included in the output. You can specify multiple profiles by
separating them by semicolon. You can change separator character by
<link linkend="profile.separator"><parameter moreinfo="none">profile.separator</parameter></link>
parameter.</para>

<para>This parameter has effect only when you are using profiling
stylesheets (<filename moreinfo="none">profile-docbook.xsl</filename>,
<filename moreinfo="none">profile-chunk.xsl</filename>, …) instead of normal
ones (<filename moreinfo="none">docbook.xsl</filename>,
<filename moreinfo="none">chunk.xsl</filename>, …).</para>

</refsect1>
</refentry>

<refentry id="profile.conformance">
<refmeta>
<refentrytitle>profile.conformance</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>profile.conformance</refname>
<refpurpose>Target profile for <sgmltag class="attribute">conformance</sgmltag>
attribute</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="profile.conformance.frag">&lt;xsl:param name="profile.conformance"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Value of this parameter specifies profiles which should be
included in the output. You can specify multiple profiles by
separating them by semicolon. You can change separator character by
<link linkend="profile.separator"><parameter moreinfo="none">profile.separator</parameter></link>
parameter.</para>

<para>This parameter has effect only when you are using profiling
stylesheets (<filename moreinfo="none">profile-docbook.xsl</filename>,
<filename moreinfo="none">profile-chunk.xsl</filename>, …) instead of normal
ones (<filename moreinfo="none">docbook.xsl</filename>,
<filename moreinfo="none">chunk.xsl</filename>, …).</para>

</refsect1>
</refentry>

<refentry id="profile.lang">
<refmeta>
<refentrytitle>profile.lang</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>profile.lang</refname>
<refpurpose>Target profile for <sgmltag class="attribute">lang</sgmltag>
attribute</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="profile.lang.frag">&lt;xsl:param name="profile.lang"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Value of this parameter specifies profiles which should be
included in the output. You can specify multiple profiles by
separating them by semicolon. You can change separator character by
<link linkend="profile.separator"><parameter moreinfo="none">profile.separator</parameter></link>
parameter.</para>

<para>This parameter has effect only when you are using profiling
stylesheets (<filename moreinfo="none">profile-docbook.xsl</filename>,
<filename moreinfo="none">profile-chunk.xsl</filename>, …) instead of normal
ones (<filename moreinfo="none">docbook.xsl</filename>,
<filename moreinfo="none">chunk.xsl</filename>, …).</para>

</refsect1>
</refentry>

<refentry id="profile.os">
<refmeta>
<refentrytitle>profile.os</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>profile.os</refname>
<refpurpose>Target profile for <sgmltag class="attribute">os</sgmltag>
attribute</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="profile.os.frag">&lt;xsl:param name="profile.os"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Value of this parameter specifies profiles which should be
included in the output. You can specify multiple profiles by
separating them by semicolon. You can change separator character by
<link linkend="profile.separator"><parameter moreinfo="none">profile.separator</parameter></link>
parameter.</para>

<para>This parameter has effect only when you are using profiling
stylesheets (<filename moreinfo="none">profile-docbook.xsl</filename>,
<filename moreinfo="none">profile-chunk.xsl</filename>, …) instead of normal
ones (<filename moreinfo="none">docbook.xsl</filename>,
<filename moreinfo="none">chunk.xsl</filename>, …).</para>

</refsect1>
</refentry>

<refentry id="profile.revision">
<refmeta>
<refentrytitle>profile.revision</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>profile.revision</refname>
<refpurpose>Target profile for <sgmltag class="attribute">revision</sgmltag>
attribute</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="profile.revision.frag">&lt;xsl:param name="profile.revision"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Value of this parameter specifies profiles which should be
included in the output. You can specify multiple profiles by
separating them by semicolon. You can change separator character by
<link linkend="profile.separator"><parameter moreinfo="none">profile.separator</parameter></link>
parameter.</para>

<para>This parameter has effect only when you are using profiling
stylesheets (<filename moreinfo="none">profile-docbook.xsl</filename>,
<filename moreinfo="none">profile-chunk.xsl</filename>, …) instead of normal
ones (<filename moreinfo="none">docbook.xsl</filename>,
<filename moreinfo="none">chunk.xsl</filename>, …).</para>

</refsect1>
</refentry>

<refentry id="profile.revisionflag">
<refmeta>
<refentrytitle>profile.revisionflag</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>profile.revisionflag</refname>
<refpurpose>Target profile for <sgmltag class="attribute">revisionflag</sgmltag>
attribute</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="profile.revisionflag.frag">&lt;xsl:param name="profile.revisionflag"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Value of this parameter specifies profiles which should be
included in the output. You can specify multiple profiles by
separating them by semicolon. You can change separator character by
<link linkend="profile.separator"><parameter moreinfo="none">profile.separator</parameter></link>
parameter.</para>

<para>This parameter has effect only when you are using profiling
stylesheets (<filename moreinfo="none">profile-docbook.xsl</filename>,
<filename moreinfo="none">profile-chunk.xsl</filename>, …) instead of normal
ones (<filename moreinfo="none">docbook.xsl</filename>,
<filename moreinfo="none">chunk.xsl</filename>, …).</para>

</refsect1>
</refentry>

<refentry id="profile.role">
<refmeta>
<refentrytitle>profile.role</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>profile.role</refname>
<refpurpose>Target profile for <sgmltag class="attribute">role</sgmltag>
attribute</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="profile.role.frag">&lt;xsl:param name="profile.role"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Value of this parameter specifies profiles which should be
included in the output. You can specify multiple profiles by
separating them by semicolon. You can change separator character by
<link linkend="profile.separator"><parameter moreinfo="none">profile.separator</parameter></link>
parameter.</para>

<para>This parameter has effect only when you are using profiling
stylesheets (<filename moreinfo="none">profile-docbook.xsl</filename>,
<filename moreinfo="none">profile-chunk.xsl</filename>, …) instead of normal
ones (<filename moreinfo="none">docbook.xsl</filename>,
<filename moreinfo="none">chunk.xsl</filename>, …).</para>

<warning>
<para>Note that <sgmltag class="attribute">role</sgmltag> is often
used for other purposes than profiling. For example it is commonly
used to get emphasize in bold font:</para>

<programlisting format="linespecific">&lt;emphasis role="bold"&gt;very important&lt;/emphasis&gt;</programlisting>

<para>If you are using <sgmltag class="attribute">role</sgmltag> for
these purposes do not forget to add values like <literal moreinfo="none">bold</literal> to
value of this parameter. If you forgot you will get document with
small pieces missing which are very hard to track.</para>

<para>For this reason it is not recommended to use <sgmltag class="attribute">role</sgmltag> attribute for profiling. You should
rather use profiling specific attributes like <sgmltag class="attribute">userlevel</sgmltag>, <sgmltag class="attribute">os</sgmltag>, <sgmltag class="attribute">arch</sgmltag>, <sgmltag class="attribute">condition</sgmltag>, etc.</para>
</warning>

</refsect1>
</refentry>

<refentry id="profile.security">
<refmeta>
<refentrytitle>profile.security</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>profile.security</refname>
<refpurpose>Target profile for <sgmltag class="attribute">security</sgmltag>
attribute</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="profile.security.frag">&lt;xsl:param name="profile.security"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Value of this parameter specifies profiles which should be
included in the output. You can specify multiple profiles by
separating them by semicolon. You can change separator character by
<link linkend="profile.separator"><parameter moreinfo="none">profile.separator</parameter></link>
parameter.</para>

<para>This parameter has effect only when you are using profiling
stylesheets (<filename moreinfo="none">profile-docbook.xsl</filename>,
<filename moreinfo="none">profile-chunk.xsl</filename>, …) instead of normal
ones (<filename moreinfo="none">docbook.xsl</filename>,
<filename moreinfo="none">chunk.xsl</filename>, …).</para>

</refsect1>
</refentry>

<refentry id="profile.userlevel">
<refmeta>
<refentrytitle>profile.userlevel</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>profile.userlevel</refname>
<refpurpose>Target profile for <sgmltag class="attribute">userlevel</sgmltag>
attribute</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="profile.userlevel.frag">&lt;xsl:param name="profile.userlevel"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Value of this parameter specifies profiles which should be
included in the output. You can specify multiple profiles by
separating them by semicolon. You can change separator character by
<link linkend="profile.separator"><parameter moreinfo="none">profile.separator</parameter></link>
parameter.</para>

<para>This parameter has effect only when you are using profiling
stylesheets (<filename moreinfo="none">profile-docbook.xsl</filename>,
<filename moreinfo="none">profile-chunk.xsl</filename>, …) instead of normal
ones (<filename moreinfo="none">docbook.xsl</filename>,
<filename moreinfo="none">chunk.xsl</filename>, …).</para>

</refsect1>
</refentry>

<refentry id="profile.vendor">
<refmeta>
<refentrytitle>profile.vendor</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>profile.vendor</refname>
<refpurpose>Target profile for <sgmltag class="attribute">vendor</sgmltag>
attribute</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="profile.vendor.frag">&lt;xsl:param name="profile.vendor"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Value of this parameter specifies profiles which should be
included in the output. You can specify multiple profiles by
separating them by semicolon. You can change separator character by
<link linkend="profile.separator"><parameter moreinfo="none">profile.separator</parameter></link>
parameter.</para>

<para>This parameter has effect only when you are using profiling
stylesheets (<filename moreinfo="none">profile-docbook.xsl</filename>,
<filename moreinfo="none">profile-chunk.xsl</filename>, …) instead of normal
ones (<filename moreinfo="none">docbook.xsl</filename>,
<filename moreinfo="none">chunk.xsl</filename>, …).</para>

</refsect1>
</refentry>

<refentry id="profile.attribute">
<refmeta>
<refentrytitle>profile.attribute</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>profile.attribute</refname>
<refpurpose>Name of user-specified profiling attribute</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="profile.attribute.frag">&lt;xsl:param name="profile.attribute"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>This parameter is used in conjuction with <link linkend="profile.value"><parameter moreinfo="none">profile.value</parameter></link>.</para>

<para>This parameter has effect only when you are using profiling
stylesheets (<filename moreinfo="none">profile-docbook.xsl</filename>,
<filename moreinfo="none">profile-chunk.xsl</filename>, …) instead of normal
ones (<filename moreinfo="none">docbook.xsl</filename>,
<filename moreinfo="none">chunk.xsl</filename>, …).</para>

</refsect1>
</refentry>

<refentry id="profile.value">
<refmeta>
<refentrytitle>profile.value</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>profile.value</refname>
<refpurpose>Target profile for user-specified attribute</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="profile.value.frag">&lt;xsl:param name="profile.value"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>When you are using this parameter you must also specify name of
profiling attribute with parameter <link linkend="profile.attribute"><parameter moreinfo="none">profile.attribute</parameter></link>.</para>

<para>Value of this parameter specifies profiles which should be
included in the output. You can specify multiple profiles by
separating them by semicolon. You can change separator character by
<link linkend="profile.separator"><parameter moreinfo="none">profile.separator</parameter></link>
parameter.</para>

<para>This parameter has effect only when you are using profiling
stylesheets (<filename moreinfo="none">profile-docbook.xsl</filename>,
<filename moreinfo="none">profile-chunk.xsl</filename>, …) instead of normal
ones (<filename moreinfo="none">docbook.xsl</filename>,
<filename moreinfo="none">chunk.xsl</filename>, …).</para>

</refsect1>
</refentry>

<refentry id="profile.separator">
<refmeta>
<refentrytitle>profile.separator</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>profile.separator</refname>
<refpurpose>Separator character for compound profile values</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="profile.separator.frag">&lt;xsl:param name="profile.separator"
           select="';'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>Separator character for compound profile values.</para>

</refsect1>
</refentry>

</reference>

<reference><title>Localization</title>
<refentry id="l10n.gentext.language">
<refmeta>
<refentrytitle>l10n.gentext.language</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>l10n.gentext.language</refname>
<refpurpose>Sets the gentext language</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="l10n.gentext.language.frag">&lt;xsl:param name="l10n.gentext.language"
           select="''"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If this parameter is set to any value other than the empty string, its
value will be used as the value for the language when generating text. Setting
<parameter moreinfo="none">l10n.gentext.language</parameter> overrides any settings within the
document being formatted.</para>

<para>It's much more likely that you might want to set the
<parameter moreinfo="none">l10n.gentext.default.language</parameter> parameter.</para>

</refsect1>
</refentry>

<refentry id="l10n.gentext.default.language">
<refmeta>
<refentrytitle>l10n.gentext.default.language</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>l10n.gentext.default.language</refname>
<refpurpose>Sets the default language for generated text</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="l10n.gentext.default.language.frag">&lt;xsl:param name="l10n.gentext.default.language"
           select="'en'"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The value of the <parameter moreinfo="none">l10n.gentext.default.language</parameter>
parameter is used as the language for generated text if no setting is provided
in the source document.</para>

</refsect1>
</refentry>

<refentry id="l10n.gentext.use.xref.language">
<refmeta>
<refentrytitle>l10n.gentext.use.xref.language</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>l10n.gentext.use.xref.language</refname>
<refpurpose>Use the language of target when generating cross-reference text?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id="l10n.gentext.use.xref.language.frag">&lt;xsl:param name="l10n.gentext.use.xref.language"
           select="0"/&gt;</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, the language of the target will be used when
generating cross reference text. Usually, the <quote>current</quote>
language is used when generating text (that is, the language of the
element that contains the cross-reference element). But setting this parameter
allows the language of the element <emphasis>pointed to</emphasis> to control
the generated text.</para>

<para>Consider the following example:</para>

<informalexample>
<programlisting format="linespecific">&lt;para lang="en"&gt;See also &lt;xref linkend="chap3"/&gt;.&lt;/para&gt;
</programlisting>
</informalexample>

<para>Suppose that Chapter 3 happens to be written in German.
If <parameter moreinfo="none">l10n.gentext.use.xref.language</parameter> is non-zero, the
resulting text will be something like this:</para>

<blockquote>
<para>See also Kapital 3.</para>
</blockquote>

<para>Where the more traditional rendering would be:</para>

<blockquote>
<para>See also Chapter 3.</para>
</blockquote>

</refsect1>
</refentry>

</reference>

<!--
<reference><title></title>
</reference>
-->

<appendix><title>The Stylesheet</title>

<para>The <filename moreinfo="none">param.xsl</filename> stylesheet is just a wrapper
around all these parameters.</para>

<src:fragment id="top">&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                exclude-result-prefixes="src"
                version="1.0"&gt;

&lt;!-- This file is generated from param.xweb; do not edit this file! --&gt;

&lt;!-- ********************************************************************
     $Id: param.xml,v 1.2 2003-03-09 14:54:48 tom Exp $
     ********************************************************************

     This file is part of the XSL DocBook Stylesheet distribution.
     See ../README or http://nwalsh.com/docbook/xsl/ for copyright
     and other information.

     ******************************************************************** --&gt;

<src:fragref linkend="admon.graphics.extension.frag"/>
<src:fragref linkend="admon.graphics.frag"/>
<src:fragref linkend="admon.graphics.path.frag"/>
<src:fragref linkend="admonition.properties.frag"/>
<src:fragref linkend="admonition.title.properties.frag"/>
<src:fragref linkend="alignment.frag"/>
<src:fragref linkend="appendix.autolabel.frag"/>
<src:fragref linkend="arbortext.extensions.frag"/>
<src:fragref linkend="author.othername.in.middle.frag"/>
<src:fragref linkend="autotoc.label.separator.frag"/>
<src:fragref linkend="biblioentry.item.separator.frag"/>
<src:fragref linkend="bibliography.collection.frag"/>
<src:fragref linkend="bibliography.numbered.frag"/>
<src:fragref linkend="blockquote.properties.frag"/>
<src:fragref linkend="body.font.family.frag"/>
<src:fragref linkend="body.font.master.frag"/>
<src:fragref linkend="body.font.size.frag"/>
<src:fragref linkend="body.margin.bottom.frag"/>
<src:fragref linkend="body.margin.top.frag"/>
<src:fragref linkend="bridgehead.in.toc.frag"/>
<src:fragref linkend="callout.defaultcolumn.frag"/>
<src:fragref linkend="callout.graphics.extension.frag"/>
<src:fragref linkend="callout.graphics.frag"/>
<src:fragref linkend="callout.graphics.number.limit.frag"/>
<src:fragref linkend="callout.graphics.path.frag"/>
<src:fragref linkend="callout.unicode.font.frag"/>
<src:fragref linkend="callout.unicode.frag"/>
<src:fragref linkend="callout.unicode.number.limit.frag"/>
<src:fragref linkend="callout.unicode.start.character.frag"/>
<src:fragref linkend="callouts.extension.frag"/>
<src:fragref linkend="chapter.autolabel.frag"/>
<src:fragref linkend="column.count.back.frag"/>
<src:fragref linkend="column.count.body.frag"/>
<src:fragref linkend="column.count.front.frag"/>
<src:fragref linkend="column.count.index.frag"/>
<src:fragref linkend="column.count.lot.frag"/>
<src:fragref linkend="column.count.titlepage.frag"/>
<src:fragref linkend="compact.list.item.spacing.frag"/>
<src:fragref linkend="component.title.properties.frag"/>
<src:fragref linkend="current.docid.frag"/>
<src:fragref linkend="default.float.class.frag"/>
<src:fragref linkend="default.image.width.frag"/>
<src:fragref linkend="default.table.width.frag"/>
<src:fragref linkend="default.units.frag"/>
<src:fragref linkend="dingbat.font.family.frag"/>
<src:fragref linkend="double.sided.frag"/>
<src:fragref linkend="draft.mode.frag"/>
<src:fragref linkend="draft.watermark.image.frag"/>
<src:fragref linkend="equation.properties.frag"/>
<src:fragref linkend="example.properties.frag"/>
<src:fragref linkend="figure.properties.frag"/>
<src:fragref linkend="firstterm.only.link.frag"/>
<src:fragref linkend="footer.content.properties.frag"/>
<src:fragref linkend="footer.rule.frag"/>
<src:fragref linkend="footers.on.blank.pages.frag"/>
<src:fragref linkend="footnote.font.size.frag"/>
<src:fragref linkend="footnote.number.format.frag"/>
<src:fragref linkend="footnote.number.symbols.frag"/>
<src:fragref linkend="fop.extensions.frag"/>
<src:fragref linkend="formal.object.properties.frag"/>
<src:fragref linkend="formal.procedures.frag"/>
<src:fragref linkend="formal.title.placement.frag"/>
<src:fragref linkend="formal.title.properties.frag"/>
<src:fragref linkend="funcsynopsis.decoration.frag"/>
<src:fragref linkend="funcsynopsis.style.frag"/>
<src:fragref linkend="function.parens.frag"/>
<src:fragref linkend="generate.index.frag"/>
<src:fragref linkend="generate.section.toc.level.frag"/>
<src:fragref linkend="generate.toc.frag"/>
<src:fragref linkend="glossary.as.blocks.frag"/>
<src:fragref linkend="glossary.collection.frag"/>
<src:fragref linkend="glossentry.show.acronym.frag"/>
<src:fragref linkend="glosslist.as.blocks.frag"/>
<src:fragref linkend="glossterm.auto.link.frag"/>
<src:fragref linkend="glossterm.separation.frag"/>
<src:fragref linkend="glossterm.width.frag"/>
<src:fragref linkend="graphic.default.extension.frag"/>
<src:fragref linkend="header.content.properties.frag"/>
<src:fragref linkend="header.rule.frag"/>
<src:fragref linkend="headers.on.blank.pages.frag"/>
<src:fragref linkend="hyphenate.frag"/>
<src:fragref linkend="ignore.image.scaling.frag"/>
<src:fragref linkend="informal.object.properties.frag"/>
<src:fragref linkend="insert.xref.page.number.frag"/>
<src:fragref linkend="l10n.gentext.default.language.frag"/>
<src:fragref linkend="l10n.gentext.language.frag"/>
<src:fragref linkend="l10n.gentext.use.xref.language.frag"/>
<src:fragref linkend="label.from.part.frag"/>
<src:fragref linkend="line-height.frag"/>
<src:fragref linkend="linenumbering.everyNth.frag"/>
<src:fragref linkend="linenumbering.extension.frag"/>
<src:fragref linkend="linenumbering.separator.frag"/>
<src:fragref linkend="linenumbering.width.frag"/>
<src:fragref linkend="list.block.spacing.frag"/>
<src:fragref linkend="list.item.spacing.frag"/>
<src:fragref linkend="make.index.markup.frag"/>
<src:fragref linkend="make.single.year.ranges.frag"/>
<src:fragref linkend="make.year.ranges.frag"/>
<src:fragref linkend="menuchoice.menu.separator.frag"/>
<src:fragref linkend="menuchoice.separator.frag"/>
<src:fragref linkend="monospace.font.family.frag"/>
<src:fragref linkend="monospace.properties.frag"/>
<src:fragref linkend="monospace.verbatim.properties.frag"/>
<src:fragref linkend="nominal.table.width.frag"/>
<src:fragref linkend="normal.para.spacing.frag"/>
<src:fragref linkend="olink.doctitle.frag"/>
<src:fragref linkend="page.height.frag"/>
<src:fragref linkend="page.height.portrait.frag"/>
<src:fragref linkend="page.margin.bottom.frag"/>
<src:fragref linkend="page.margin.inner.frag"/>
<src:fragref linkend="page.margin.outer.frag"/>
<src:fragref linkend="page.margin.top.frag"/>
<src:fragref linkend="page.orientation.frag"/>
<src:fragref linkend="page.width.frag"/>
<src:fragref linkend="page.width.portrait.frag"/>
<src:fragref linkend="paper.type.frag"/>
<src:fragref linkend="part.autolabel.frag"/>
<src:fragref linkend="passivetex.extensions.frag"/>
<src:fragref linkend="preface.autolabel.frag"/>
<src:fragref linkend="preferred.mediaobject.role.frag"/>
<src:fragref linkend="procedure.properties.frag"/>
<src:fragref linkend="process.empty.source.toc.frag"/>
<src:fragref linkend="process.source.toc.frag"/>
<src:fragref linkend="profile.arch.frag"/>
<src:fragref linkend="profile.attribute.frag"/>
<src:fragref linkend="profile.condition.frag"/>
<src:fragref linkend="profile.conformance.frag"/>
<src:fragref linkend="profile.lang.frag"/>
<src:fragref linkend="profile.os.frag"/>
<src:fragref linkend="profile.revision.frag"/>
<src:fragref linkend="profile.revisionflag.frag"/>
<src:fragref linkend="profile.role.frag"/>
<src:fragref linkend="profile.security.frag"/>
<src:fragref linkend="profile.separator.frag"/>
<src:fragref linkend="profile.userlevel.frag"/>
<src:fragref linkend="profile.value.frag"/>
<src:fragref linkend="profile.vendor.frag"/>
<src:fragref linkend="punct.honorific.frag"/>
<src:fragref linkend="qanda.inherit.numeration.frag"/>
<src:fragref linkend="qandadiv.autolabel.frag"/>
<src:fragref linkend="refentry.generate.name.frag"/>
<src:fragref linkend="refentry.generate.title.frag"/>
<src:fragref linkend="refentry.title.properties.frag"/>
<src:fragref linkend="refentry.xref.manvolnum.frag"/>
<src:fragref linkend="region.after.extent.frag"/>
<src:fragref linkend="region.before.extent.frag"/>
<src:fragref linkend="rootid.frag"/>
<src:fragref linkend="runinhead.default.title.end.punct.frag"/>
<src:fragref linkend="runinhead.title.end.punct.frag"/>
<src:fragref linkend="sans.font.family.frag"/>
<src:fragref linkend="section.autolabel.frag"/>
<src:fragref linkend="section.label.includes.component.label.frag"/>
<src:fragref linkend="section.title.level1.properties.frag"/>
<src:fragref linkend="section.title.level2.properties.frag"/>
<src:fragref linkend="section.title.level3.properties.frag"/>
<src:fragref linkend="section.title.level4.properties.frag"/>
<src:fragref linkend="section.title.level5.properties.frag"/>
<src:fragref linkend="section.title.level6.properties.frag"/>
<src:fragref linkend="section.title.properties.frag"/>
<src:fragref linkend="segmentedlist.as.table.frag"/>
<src:fragref linkend="shade.verbatim.frag"/>
<src:fragref linkend="shade.verbatim.style.frag"/>
<src:fragref linkend="show.comments.frag"/>
<src:fragref linkend="sidebar.properties.frag"/>
<src:fragref linkend="table.cell.border.color.frag"/>
<src:fragref linkend="table.cell.border.style.frag"/>
<src:fragref linkend="table.cell.border.thickness.frag"/>
<src:fragref linkend="table.cell.padding.frag"/>
<src:fragref linkend="table.footnote.number.format.frag"/>
<src:fragref linkend="table.footnote.number.symbols.frag"/>
<src:fragref linkend="table.frame.border.color.frag"/>
<src:fragref linkend="table.frame.border.style.frag"/>
<src:fragref linkend="table.frame.border.thickness.frag"/>
<src:fragref linkend="table.properties.frag"/>
<src:fragref linkend="tablecolumns.extension.frag"/>
<src:fragref linkend="target.database.document.frag"/>
<src:fragref linkend="tex.math.delims.frag"/>
<src:fragref linkend="tex.math.in.alt.frag"/>
<src:fragref linkend="textinsert.extension.frag"/>
<src:fragref linkend="title.font.family.frag"/>
<src:fragref linkend="title.margin.left.frag"/>
<src:fragref linkend="toc.indent.width.frag"/>
<src:fragref linkend="toc.margin.properties.frag"/>
<src:fragref linkend="toc.section.depth.frag"/>
<src:fragref linkend="ulink.footnote.number.format.frag"/>
<src:fragref linkend="ulink.footnotes.frag"/>
<src:fragref linkend="ulink.hyphenate.frag"/>
<src:fragref linkend="ulink.show.frag"/>
<src:fragref linkend="use.extensions.frag"/>
<src:fragref linkend="use.local.olink.style.frag"/>
<src:fragref linkend="use.role.as.xrefstyle.frag"/>
<src:fragref linkend="use.role.for.mediaobject.frag"/>
<src:fragref linkend="use.svg.frag"/>
<src:fragref linkend="variablelist.as.blocks.frag"/>
<src:fragref linkend="verbatim.properties.frag"/>
<src:fragref linkend="xep.extensions.frag"/>
<src:fragref linkend="xref.properties.frag"/>
<src:fragref linkend="xref.with.number.and.title.frag"/>

&lt;/xsl:stylesheet&gt;</src:fragment>

</appendix>

</book>