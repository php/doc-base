<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE xsd:schema PUBLIC "-//W3C//DTD XMLSCHEMA 2000102//EN" "http://www.w3.org/2001/XMLSchema.dtd" [

 <!ENTITY % xs-datatypes PUBLIC 'datatypes' 'http://www.w3.org/2001/datatypes.dtd'>
 <!ENTITY % p 'xsd:'>
 <!ENTITY % s ':xsd'>
 <!ENTITY % schemaAttrs 'xmlns:xlink    CDATA    #FIXED "http://www.w3.org/1999/xlink"
                         xmlns:docbook  CDATA    #FIXED "http://docbook.org/ns/docbook"'>

]>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:xlink="http://www.w3.org/1999/xlink"
            xmlns:docbook="http://docbook.org/ns/docbook"
            blockDefault="#all"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified"
            xml:lang="EN"
            targetNamespace="http://phd.php.net/ns/phd"
            version="PhD 1.0">

 <xsd:annotation>
  <xsd:documentation xml:lang="en">
   PhD normative schema version 1.0.
   Copyright(c) 2007 The Author(s). All Rights Reserved.
   The Author(s) are described in a LICENSE file which should have accompanied
   this document; if you did not receive this file, it can be downloaded from
   the world-wide-web at:
    &lt;http://phd.php.net/LICENSE&gt;
  </xsd:documentation>
  <xsd:appinfo>$Id$</xsd:appinfo>
 </xsd:annotation>

 <xsd:include schemaLocation="docbook.xsd"/>
 <!-- Docbook XSD imports XML and XLink for us -->

 <xsd:element name="include" id="include">
  <xsd:complexType>
   <xsd:attribute ref="xlink:href"/>
   <xsd:attribute name="target" type="xsd:IDREF"/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name="define" id="define">
  <xsd:complexType mixed="true">
   <xsd:attribute name="name" type="xsd:ID"/>
  </xsd:complexType>
 </xsd:element>

 <xsd:complexType name="constantType">
  <xsd:attribute name="name" type="xsd:IDREF"/>
  <xsd:attribute name="n" type="xsd:IDREF"/>
 </xsd:complexType>

 <xsd:element name="constant" id="constant" type="constantType"/>
 <xsd:element name="c" id="c" type="constantType"/>

 <!--
    This pattern tries to be lax about accepting both simple revision numbers
    and CVS/SVN-generated revision keywords. A Perl backwards-assertion would
    be very useful here, but WXS doesn't support it.
 -->
 <xsd:simpleType name="revisionNumber">
  <xsd:restriction base="xsd:string">
   <xsd:pattern value="(\$Rev(ision)?:\s*)?(\d+\.)+\d+\s*\$?"/>
  </xsd:restriction>
 </xsd:simpleType>

 <xsd:element name="my-rev" id="my-rev" type="revisionNumber"/>
 <xsd:element name="en-rev" id="en-rev" type="revisionNumber"/>

 <xsd:element name="revision" id="revision">
  <xsd:complexType>
   <xsd:sequence>
    <xsd:element ref="my-rev"/>
    <xsd:element ref="en-rev" minOccurs="0"/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name="meta" id="meta">
  <xsd:complexType>
   <xsd:simpleContent>
    <xsd:extension base="xsd:string">
     <xsd:attribute name="name" type="xsd:normalizedString"/>
    </xsd:extension>
   </xsd:simpleContent>
  </xsd:complexType>
 </xsd:element>

</xsd:schema>
